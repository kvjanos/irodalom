Bone 47 (2010) 1076–1079

Contents lists available at ScienceDirect

Bone
j o u r n a l h o m e p a g e : w w w. e l s e v i e r. c o m / l o c a t e / b o n e

Technical Note

BoneJ: Free and extensible bone image analysis in ImageJ
Michael Doube a,⁎, Michał M. Kłosowski a, Ignacio Arganda-Carreras b, Fabrice P. Cordelières c, Robert P. Dougherty d, Jonathan S. Jackson e, Benjamin Schmid f, John R. Hutchinson g, Sandra J. Shefelbine a
a

Department of Bioengineering, Imperial College London, South Kensington, London SW7 2AZ, UK Department of Brain and Cognitive Sciences, Massachusetts Institute of Technology, Cambridge, MA 02139, USA Institut Curie, Section de Recherche, Plate-forme d'Imagerie Cellualire et Tissulaire, CNRS UMR 3348, Centre Universitaire, Bât. 112, Orsay 91405, France d OptiNav Inc., Redmond, WA, USA e Department of Neurology, Brigham and Women's Hospital, Harvard Medical School, Boston, MA 02445, USA f Department of Neurobiology and Genetics, University of Würzberg, Germany g Structure and Motion Laboratory, The Royal Veterinary College, North Mymms, Hatﬁeld, Hertfordshire AL9 7TA, UK
b c

a r t i c l e

i n f o

a b s t r a c t
Bone geometry is commonly measured on computed tomographic (CT) and X-ray microtomographic (μCT) images. We obtained hundreds of CT, μCT and synchrotron μCT images of bones from diverse species that needed to be analysed remote from scanning hardware, but found that available software solutions were expensive, inﬂexible or methodologically opaque. We implemented standard bone measurements in a novel ImageJ plugin, BoneJ, with which we analysed trabecular bone, whole bones and osteocyte lacunae. BoneJ is open source and free for anyone to download, use, modify and distribute. © 2010 Elsevier Inc. All rights reserved.

Article history: Received 22 June 2010 Revised 26 August 2010 Accepted 27 August 2010 Available online 15 September 2010 Edited by: David Fyhrie Keywords: Bone Tomography Image Open source Software Morphometry

Introduction Bones are commonly imaged in computed tomographic (CT) and X-ray microtomographic (μCT) systems for research purposes, such as investigating trabecular and cortical changes in osteoporosis [1,2], comparative anatomy [3,4], and non-destructive examination of fossil skeletons [5,6]. We had hundreds of CT, μCT and synchrotron μCT scans of whole bones and trabecular bone cubes to analyse for studies on allometric bone scaling [7,8] and osteogenesis imperfecta. Many of our scans were over 1 GB, but we found existing software could not process large (N60 MB) datasets, required a per-machine licence fee, or did not implement all of our required features. We needed to open varied image formats from diverse instruments, then pre-process, analyse and visualise scans efﬁciently on several different computers, remote from scanning hardware. We took advantage of the existing functionality and ﬂexible plugin architecture of the public domain image processing
⁎ Corresponding author. Fax: +44 20 7594 9817. E-mail addresses: m.doube@imperial.ac.uk (M. Doube), m.klosowski@imperial.ac.uk (M.M. Kłosowski), ignacio.arganda@gmail.com (I. Arganda-Carreras), fabrice.cordelieres@curie.u-psud.fr (F.P. Cordelières), rpd@optinav.com (R.P. Dougherty), jjackson@bwh.harvard.edu (J.S. Jackson), bene.schmid@gmail.com (B. Schmid), jrhutch@rvc.ac.uk (J.R. Hutchinson), s.shefelbine@imperial.ac.uk (S.J. Shefelbine). 8756-3282/$ – see front matter © 2010 Elsevier Inc. All rights reserved. doi:10.1016/j.bone.2010.08.023

program ImageJ [9] and implemented standard bone measurements [10–15] as an ImageJ plugin, BoneJ [16], to make full use of our computer hardware. This technical note describes the philosophy and validation of BoneJ, and illustrates its application with use case scenarios. Materials and methods Approach We ﬁrst incorporated well-deﬁned parameters measured by the bone research community, using deﬁnitions in primary references and standardised nomenclature (Table 1). Model-independent methods were preferred over techniques that make assumptions of underlying geometry [10]. Stereological techniques that assume rod- or plate-like trabecular structure were avoided where a good alternative existed [11,17]. For trabeculae, three-dimensional (3D) methods were used exclusively [12]. Cross-sectional diaphyseal parameters such as second moment of area and section modulus were calculated directly from pixel positions without assuming circular or elliptical geometry. Where possible, users were given the choice between voxel-based methods, in which the image is treated as a 3D grid of points, and mesh-based methods, in which interconnected triangles are overlaid on the 3D grid to approximate the bone surface.

M. Doube et al. / Bone 47 (2010) 1076–1079 Table 1 Summary of current BoneJ commands. See the User Guide at http://bonej.org/ for detailed and up-to-date explanations of all commands. Command For trabeculae Analyse Skeleton Anisotropy Connectivity Fractal Dimension Isosurface Optimise Threshold Plateness Purify Skeletonise 3D Structure Model Index Thickness Volume Fraction For whole bones Fit Ellipsoid Fit Sphere Moments of Inertia Neck shaft angle Slice Geometry Summary Calculates branch length and counts junctions [22] Estimates degree of anisotropy (DA) using the mean intercept length [13] Uses the Euler characteristic to calculate connectivity density (Conn.D) [23,24] Estimates the fractal dimension (FD) with the box counting method [25] Measures bone surface area (BS) and displays the surface in 3D Set a threshold from image stack histogram that minimises Conn.D [29,30] An experimental replacement for SMI, ellipsoid axes conceptually similar to [26] Prepares an image for connectivity analysis by removing small particles [23] Erodes an image to its medial axis, preparing it for skeleton analysis [27] Calculates the structure model index (SMI) [14] Measures trabecular thickness (Tb.Th) and spacing (Tb.Sp) [10,28] Measures volume fraction of bone (BV/TV) [15]

1077

classical mechanics [18]. Neck Shaft Angle, the angle between vectors deﬁning the femoral diaphysis and femoral neck projected on the plane containing the diaphyseal vector and centre of the femoral head, was tested on CT images of femora, and compared to measurements on the real bones. Slice Geometry was validated against synthetic images of elliptical rings representing diaphyseal cross-sections, with results compared to theory [18,19]. Particle Analyser was tested on synthetic images with known particle distribution to conﬁrm correct particle labelling and measurement. The same 1 cm3 cube of trabecular bone from the femoral head of an Asian elephant (Elephas maximus) was sent to both Scanco (Brüttisellen, Switzerland) and SkyScan (Aartselaar, Belgium) for independent scanning and analysis; images returned by SkyScan were measured in BoneJ. Results Development resulted in a collection of menu commands that were used to collect experimental data ([7,8] Table 1). Processing steps were recorded with ImageJ's macro recorder (Plugins → Macros → Record1), so that a whole directory of images could be measured in batch mode. A selection of processing steps that illustrate typical usage scenarios follows. For detailed treatment of each command, we refer the reader to the User Guide online at http:// bonej.org, which is kept up-to-date with code changes in BoneJ. Some familiarity with ImageJ is assumed for readers following these examples; documentation is readily available for its use in book form and on the internet [9,20,21]. Typical use cases Use Case 1: measuring trabecular parameters in a 3D μCT scan Open scan as a virtual stack by dragging and dropping directory of scan slices onto ImageJ. Crop empty slices above and below cube with Plugins → Stacks → Delete Slice Range. Crop sides with ImageJ's rectangular region of interest (ROI) tool and Image → Crop command. Automatically segment into bone and background with Plugins → BoneJ → Optimise Threshold (Threshold only; Apply threshold). Measure bone volume fraction (BV/TV) with Plugins → BoneJ → Volume Fraction. Measure trabecular thickness (Tb.Th, Fig. 1A) and spacing (Tb.Sp) with Plugins → BoneJ → Thickness. Measure degree of anisotropy (DA) with Plugins → BoneJ → Anisotropy. Measure connectivity density (Conn.D) with Plugins → BoneJ → Connectivity. All data are appended to a single row of the results table, labelled with the image's ﬁle name. Use Case 2: measuring cross-sectional parameters in a CT scan of a whole bone Open a CT scan by dragging the containing directory onto ImageJ. Align the bone to its principal axes with Plugins → BoneJ → Moments of Inertia. Select the slice to measure by scrolling through the stack and run Plugins → BoneJ → Slice Geometry. Cross-sectional parameters like cortical thickness, cross-sectional area, centroid, principal axes, second moment of area (I) and section modulus (Z) are measured from pixel coordinates, without any assumption of cross-sectional geometry (Fig. 1B). Either a single slice or all slices in the stack can be measured. Use Case 3: measuring osteocyte lacunae in synchrotron μCT images of bone Open a μCT scan by dragging the containing directory onto ImageJ. Crop the stack to contain only particles of interest by drawing a rectangle ROI and running Image→Crop. Set a threshold that renders cavities as foreground with Image→ Adjust→ Threshold, and binarise the stack (Apply). Analyse osteocyte lacunae by running Plugins→ Analyze →
1 Plugins → BoneJ → Connectivity formatting indicates menu selections from ImageJ's graphical user interface.

Fits an ellipsoid to points placed on a structure, e.g. a femoral condyle Fits a sphere to points placed on a structure, e.g. a femoral head Finds the moments of inertia and aligns a bone to the principal axes [18] Measures the femoral neck shaft angle in a 3D dataset Measures cross-sectional parameters (cortical thickness, area, section modulus) [18,31]

For osteocyte lacunae Particle Analyser

Locates by label propagation and analyses particles (e.g. osteocyte lacunae) in 3D [20]

Validation Algorithms in BoneJ were validated by running them on test data and comparing computed results to expected results. Test data included synthetic images, images of real objects and mathematically deﬁned clouds of points (Fit Sphere and Fit Ellipsoid), all with known geometry. Analyse Skeleton was tested against a set of branching structures, loops and points. Anisotropy was tested on stacks containing Gaussian noise (isotropy) or parallel plates (anisotropy). Connectivity was validated by creating simple connected structures and measuring their Euler characteristics. Fractal Dimension was run on images from ImageJ's Fractal Generator plugin, for which theoretical fractal dimensions were known. Isosurface was tested on images of cubes and spheres. Optimise Threshold was tested on μCT images of trabecular bone. Plateness, which calculates ratios of ellipsoidal axes of summed star volumes ﬁtting within a structure, was tested on synthetic images containing rod-like, plate-like or spherical structures. Purify was validated on images where the largest particle was known. Subtracting the puriﬁed result from the original image highlighted deleted particles and cavities. Skeletonise 3D was tested on synthetic images of branching and looped structures and μCT images of trabecular bone. Structure model index was tested on synthetic images of plates (SMI = 0), rods (SMI = 3) and spheres (SMI = 4). Thickness was tested on images of single, circular rods with known diameter and length several hundred times diameter. Volume Fraction was tested on binary images with known proportions of voxels set to foreground and background. Moments of Inertia was tested on images of cylindrical and rectangular beams, with known width and height, and compared against standard equations from

1078

M. Doube et al. / Bone 47 (2010) 1076–1079

Fig. 1. Graphical output from BoneJ. (A) Trabecular thickness (Tb.Th) measured with the Thickness command. Yellow regions are thicker than blue regions. (B) Centroid and principal axes as calculated by Slice Geometry on a tomographic slice from the tarsometatarsal bone of a little spotted kiwi (Apteryx owenii). (C) Murine osteocyte lacunae imaged with synchrotron μCT and measured with Analyse Particles.

Analyse Particles, selecting desired output such as surface area, volume and orientation, and optionally visualise osteocyte lacunae in 3D (Fig. 1C).

Discussion BoneJ presents several advantages to users of bone morphometry software. It integrates with ImageJ's diverse plugin ecosystem, so a customisable series of processes can be performed to get experimental results from a wide range of image ﬁle formats without switching between programs or platforms. Furthermore, a sequence of image processing steps can be automated with a macro and applied to a batch of images, improving workﬂow by reducing time spent manually executing commands. BoneJ is primarily designed to measure bone geometry, but the parameters are not limited to bone and can be generalised to many foams, beams and particles or pores, as are found in food, engineering materials, biological structures and soil. Unlike commercial programs, BoneJ is available free of charge, so limited research funds can be redirected from software licensing to staff and hardware. BoneJ is also independent of scanner hardware, so it can be obtained without purchasing a scanner and can be used in a different location to the imaging device, which may be sited in a hospital, a collaborator's laboratory or a synchrotron facility. BoneJ is written in the Java programming language [20,32,33], so wherever there is a Java runtime environment (JRE), ImageJ and BoneJ can be used. JRE's are commonly installed on Microsoft Windows, Unix and Unix-like operating systems (including Apple Mac OS X and GNU/Linux), making BoneJ independent of the underlying operating system and system hardware. BoneJ uses Java's multithreading ability in Thickness, Anisotropy, Moments of Inertia, Analyse Particles and other plugins. Multithreading splits jobs into smaller chunks, which are processed independently to accelerate job completion, and takes advantage of consumer-level computers being equipped with increasing numbers of processing cores. If the hardware, operating system and JRE are 64-bit, the maximum image size that can be processed by BoneJ is limited only by installed physical memory. On our 64-bit systems, we process image stacks in excess of 4 GB, greater than the total addressable memory of a 32-bit system. BoneJ makes use of the ImageJ 3D Viewer [34], which provides hardwareaccelerated visualisation of 3D and 4D (3D × time) multichannel data. BoneJ will run on most contemporary computers, but to process and visualise large datasets we recommend running it on a 64-bit system with as much RAM and as many CPU cores as possible, and with a hardware-accelerated graphics adapter. The freedom of the open source development model allows truly open access to methodological details because all of the calculations are provided in source code form with the program. Open access to methods neatly complements many journals' requirement for open access to data and further lowers the barrier to replication of studies. BoneJ's development is mainly funded by governmental research grants, so it is propagated broadly to create the greatest public good. Code changes are tracked with Git version control [35] which facilitates code development at multiple, distributed sites, allowing

Validation Fit Sphere and Fit Ellipsoid created highly accurate ﬁts to test data, with errors b 0.01% for centroid and radii measurements. Skeletonise 3D and Analyse Skeleton correctly identiﬁed branches in simple rod-like structural networks but their medial axis erosion model did not accurately represent plate-like structures. Anisotropy gave correct results for both isotropic (DA = 0.008–0.010) and anisotropic (DA = 1.000) test images. Fractal Dimension correctly calculated FD of fractal images, within the limit of pixel size. Optimise Threshold resulted in subjectively acceptable thresholds; its main advantage over manual thresholding is that it can run without user intervention during batch processing. Plateness (experimental) identiﬁed plate-like, rod-like and spherical structures by their expected ellipsoidal axis ratios, but a meaningful summary variable for this architectural feature of bone is elusive. Isosurface calculated the surface area of spheres and cubes with 0.1–0.3% error. Structure Model Index gave results close to expected (plate SMI = 0.044; rod SMI = 3.175; sphere SMI = 3.999). Thickness error was less than a single voxel width for Tb.Th and Tb.Sp. Particle labelling was extremely reliable, correctly identifying and joining all particles, while Purify, based on Particle Analyser, always retained the largest particle and ﬁlled small cavities. Connectivity calculated the Euler characteristic without fault and was insensitive to hole position and feature size. Volume Fraction calculated exact results when used in voxel mode, but in surface mode when smoothing was high (6 voxels), slight deviation from true (~1.5%) was observed. BoneJ's trabecular statistics were similar to those calculated with commercial software (Table 2). Slice Geometry and Moments of Inertia calculated exact results when cross-sections were rectangular, but due to pixel alias artefacts, curved shapes and rotated rectangles resulted in slight (~1%, depending on size) deviation from theory. Errors in Neck Shaft Angle's results (1.6–15.9%) were strongly inﬂuenced by the operator's experience in identifying the femoral neck in CT scans.

Table 2 Common trabecular bone parameters measured with commercial software and BoneJ. The same bone cube was sent to SkyScan and Scanco for scanning and analysis; SkyScan's images were analysed in BoneJ. Software SkyScan CTAn Scanco BoneJ BV/TV 0.447 0.421 0.448 Tb.Th (mm) 0.400 0.440 0.433 Tb.Sp (mm) 0.695 0.839 0.729 BS/TV (mm−1) 3.438 2.454 2.944 Conn.D (mm−3) 2.127 2.325 1.902 DA 0.534 0.381 0.541

M. Doube et al. / Bone 47 (2010) 1076–1079

1079

BoneJ to be independent of a single author, institute or company. Developers are welcome to make improvements to their own branches of BoneJ, and are encouraged to submit them back to MD's master branch for everybody's use. All development changes on the master branch are public and easily browsable by anyone [36]. While every effort is made to ensure reliable operation, as in other scientiﬁc methods the onus of validating individual results lies with the person carrying out the experiment. Conclusions BoneJ is available for everyone to download, use, modify and distribute at no cost. It calculates several trabecular, cross-sectional and particulate parameters in a convenient format. Care has been taken to ensure measurements are standardised, so that results are comparable between studies. Java technology allows BoneJ to run on commodity computers, independent of scanner devices, fully utilising hardware resources. ImageJ's plugin infrastructure provides a ﬂexible working environment that can be tailored to diverse experimental setups. BoneJ is a working program and a starting point for further development, which will be directed by users' requests and the emergence of new techniques. Acknowledgments For programming advice we thank the ImageJ community, especially Albert Cardona, Gabriel Landini, Wayne Rasband, Stephan Saalfeld, Johannes Schindelin and Michael Schmid. Comments from two anonymous reviewers greatly improved the manuscript. MD, MMK, JRH and SJS were funded by the UK Biotechnology and Biological Sciences Research Council. References
[1] Judex S, Boyd S, Qin Y, Miller L, Müller R, Rubin C. Combining high-resolution micro-computed tomography with material composition to deﬁne the quality of bone tissue. Curr Osteoporos Rep 2003;1:11–9. [2] Parkinson IH, Fazzalari NL. Whole bone geometry and bone quality in distal forearm fracture. J Orthop Trauma 2008;22:S59–65, doi:10.1097/BOT.0b013e318162ab25. [3] Hernandez CJ, Loomis DA, Cotter MM, Schiﬂe AL, Anderson LC, Elsmore L, et al. Biomechanical allometry in hominoid thoracic vertebrae. J Hum Evol 2009;56: 462–70, doi:10.1016/j.jhevol. 2008.12.007. [4] Ruff CB. New approaches to structural evolution of limb bones in primates. Folia Primatol 1989;53:142–59. [5] Sutton MD. Tomographic techniques for the study of exceptionally preserved fossils. Proc Biol Sci 2008;275:1587–93, doi:10.1098/rspb.2008.0263. [6] Alexander RM. Dinosaur biomechanics. Proc Biol Sci 2006;273:1849–55, doi: 10.1098/rspb.2006.3532. [7] Doube M, Shefelbine SJ, Hutchinson JR, Wiktorowicz Conroy AM, Kłosowski MM. Allometric scaling of trabecular bone. Comp Biochem Physiol A Mol Integr Physiol 2009;153:S115, doi:10.1016/j.cbpa.2009.04.175. [8] Doube M, Wiktorowicz-Conroy AM, Christiansen P, Hutchinson JR, Shefelbine S. Three-dimensional geometric analysis of felid limb bone allometry. PLoS ONE 2009;4:e4742, doi:10.1371/journal.pone.0004742.

[9] Rasband WS. ImageJ. Bethesda, MD, USA: U.S. National Institutes of Health; 2009. Available: http://rsb.info.nih.gov/ij/. [10] Hildebrand T, Rüegsegger P. A new method for the model-independent assessment of thickness in three-dimensional images. J Microsc 1997;185:67–75, doi:10.1046/ j.1365-2818.1997.1340694.x. [11] Parﬁtt AM, Drezner MK, Glorieux FH, Kanis JA, Malluche H, Meunier PJ, et al. Bone histomorphometry: standardization of nomenclature, symbols, and units. Report of the ASBMR Histomorphometry Nomenclature Committee. J Bone Miner Res 1987;2:595–610. [12] Odgaard A. Three-dimensional methods for quantiﬁcation of cancellous bone architecture. Bone 1997;20:315–28, doi:10.1016/S8756-3282(97)00007-0. [13] Harrigan TP, Mann RW. Characterization of microstructural anisotropy in orthotropic materials using a second rank tensor. J Mater Sci 1984;19:761–7, doi:10.1007/ BF00540446. [14] Hildebrand T, Rüegsegger P. Quantiﬁcation of bone microarchitecture with the structure model index. Comput Meth Biomech Biomed Eng 1997;1:15–23, doi: 10.1080/01495739708936692. [15] Hildebrand T, Laib A, Müller R, Dequeker J, Rüegsegger P. Direct three-dimensional morphometric analysis of human cancellous bone: microstructural data from spine, femur, iliac crest, and calcaneus. J Bone Miner Res 1999;14:1167–74. [16] Doube M. BoneJ. Available:http://bonej.org/2009. [17] Day JS, Ding M, Odgaard A, Sumner DR, Hvid I, Weinans H. Parallel plate model for trabecular bone exhibits volume fraction-dependent bias. Bone 2000;27:715–20, doi:10.1016/S8756-3282(00)00371-9. [18] Kibble TWB. Classical Mechanics. 5th ed. London: Imperial College Press; 2004. [19] Gere JM. Mechanics of Materials. 4th ed. Boston: PWS; 1997. [20] Burger W, Burge M. Digital Image Processing: An Algorithmic Introduction Using Java. 1st ed. New York: Springer; 2008. [21] ImageJ Documentation Wiki. Available:http://imagejdocu.tudor.lu/ Accessed 14 Jul 2010. [22] Arganda-Carreras I, Fernández-González R, Muñoz-Barrutia A, Ortiz-De-Solorzano C. 3D reconstruction of histological sections: application to mammary gland tissue. Microsc Res Tech 2010, doi:10.1002/jemt.20829. [23] Odgaard A, Gundersen HJG. Quantiﬁcation of connectivity in cancellous bone, with special emphasis on 3-D reconstructions. Bone 1993;14:173–82, doi:10.1016/87563282(93)90245-6. [24] Toriwaki J, Yonekura T. Euler number and connectivity indexes of a three dimensional digital picture. Forma 2002;17:183–209. [25] Parkinson IH, Fazzalari NL. Methodological principles for fractal analysis of trabecular bone. J Microsc 2000;198:134–42, doi:10.1046/j.1365-2818.2000.00684.x. [26] Vasilić B, Rajapakse CS, Wehrli FW. Classiﬁcation of trabeculae into threedimensional rodlike and platelike structures via local inertial anisotropy. Med Phys 2009;36:3280–91. [27] Lee TC, Kashyap RL, Chu CN. Building skeleton models via 3-D medial surface axis thinning algorithms. CVGIP: Graph Models Image Process 1994;56:462–78, doi: 10.1006/cgip. 1994.1042. [28] Dougherty R, Kunzelmann K. Computing local thickness of 3D structures with ImageJ. Microsc Microanal 2007;13:1678–9, doi:10.1017/S1431927607074430. [29] Ridler T.W., Calvard S. Picture Thresholding Using an Iterative Selection Method. Systems, Man and Cybernetics, IEEE Transactions on 1978;8:630-632. doi: 10.1109/TSMC.1978.4310039. [30] Zhang Y, He Z, Fan S, He K, Li C. Automatic Thresholding of Micro-CT Trabecular Bone Images. BioMedical Engineering and Informatics, International Conference on, vol. 2. Los Alamitos, CA, USA: IEEE Computer Society; 2008. p. 23–7, doi: 10.1109/BMEI.2008.13. [31] Timoshenko S. Theory of Elasticity. New York: McGraw-Hill Book Co. Inc.; 1934. [32] Bloch J. Effective Java. 2nd ed. Upper Saddle River, NJ: Addison-Wesley; 2008. [33] Oracle. java.com. Available: http://java.com/en/. Accessed 13 May 2010. [34] Schmid B, Schindelin J, Cardona A, Longair M, Heisenberg M. A high-level 3D visualization API for Java and ImageJ. BMC Bioinform 2010;11:274, doi: 10.1186/1471-2105-11-274. [35] Torvalds L, Hamano J. Git—Fast Version Control System. http://git-scm.com/ about Accessed 7 May 2010. [36] Doube M. mdoube's BoneJ at master—GitHub. Available:http://github.com/ mdoube/BoneJ Accessed 7 May 2010.


IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,

VOL. 22, NO. 11,

NOVEMBER 2000

1241

Skeletonization of Three-Dimensional Object Using Generalized Potential Field
Jen-Hui Chuang, Member, IEEE, Chi-Hao Tsai, and Min-Chi Ko
AbstractÐThe medial axis transform (MAT) is a skeletal representation of an object which has been shown to be useful in interrogation, animation, finite element mesh generation, path planning, and feature recognition. In this paper, the potential-based skeletonization approach for 2D MAT [1], which identifies object skeleton as potential valleys using a Newtonian potential model in place of the distance function, is generalized to three dimensions. The generalized potential functions given in [2], which decay faster with distance than the Newtonian potential, is used for the 3D case. The efficiency of the proposed approach results from the fact that these functions and their gradients can be obtained in closed forms for polyhedral surfaces. According to the simulation results, the skeletons obtained with the proposed approach are closely related to the corresponding MAT skeletons. While the medial axis (surface) is 2D in general for a 3D object, the potential valleys, being one-dimensional, form a more realistic skeleton. Other desirable attributes of the algorithm include stability against perturbations of the object boundary, the flexibility to obtain partial skeleton directly, and low time complexity. Index TermsÐ3D skeletonization, medial axis transform, potential field, distance function, 3D thinning.

æ
1

skeleton of an object, as defined by Blum [3], is the locus of the centers of all its interior maximal circles (2D) or spheres (3D). Together with the associated radius function, which is the radius of the maximal ball around any given point on the skeleton, we can represent the object with less information than the object itself. Such a technique can be applied in document encoding [4] and shape representation (or description) [5], [6]. Some other applications of the skeleton can be found in robot path planning [7], feature recognition [8], automatic mesh generation [9], [10], and finite element modeling [11]. Commonly, such representations can be derived first by computing a distance transform which yields the shortest distance from each interior point of a region to its border or, equivalently, by identifying at each point the largest possible size of the primitive of a given shape such that it is entirely contained in a region to be represented. The representation is then derived by identifying the primitives having locally maximal sizes. Such approaches are straightforward, but computationally expensive since the distance computation must be performed at every point of a region. This paper presents a new concept of obtaining the skeleton of 3D polyhedral regions in a computationally efficient manner. The efficiency of the approach results from the use of an intermediate, analog representation of the given shape informationÐthe potential field. The use of potential field representation helps avoid the expensive task of computing the distance transform at each pixel/voxel
HE

T

INTRODUCTION
and the computation is limited approximately to the locations of the locally maximal primitives. The computation of the potential field itself can be performed efficiently if the shape information is given in a compact form, e.g., the polyhedral representation of the surface. Such a compact description may be directly available as a part of the specification of the given object shape or it may be derived from the given object data such as its surface or volume descriptions.

. The authors are with the Department of Computer and Information Science, National Chiao Tung University, Hsinchu 30056, Taiwan, ROC. E-mail: {jchuang, gis85543, gis84521}@cis.nctu.edu.tw. Manuscript received 22 Oct. 1998; revised 2 Aug. 1999; accepted 11 Aug. 2000. Recommended for acceptance by I. Dinstein. For information on obtaining reprints of this article, please send e-mail to: tpami@computer.org, and reference IEEECS Log Number 108108.

1.1 The 2D MAT In the 2D space, the medial axis transform (MAT), or skeleton, of a shape is defined in terms of the medial axis (MA), which is the loci of those points which are equidistant from at least two points on the region border [3]. Thus, the medial axis is composed of the centers of ªlocally maximalº discs, defined as discs that are as large as they can be without crossing the region border, but are not contained in any other locally maximal discs. The medial axis and the radii of the maximal discs associated with each axis point together define the MAT representation. Fig. 1 shows the MAT skeleton for a rectangular region. A number of algorithms developed to obtain the skeleton of a digital image region explicitly compute the distance transform for each point inside the region [12], [13], [14], [15], [16], [17]. Then, the definition of the locally maximal discs is used in a straightforward way to identify centers of such discs and, thus, the skeleton. The propagation and extinction of the fire in the grass fire model are directly used to obtain the skeleton in [18]. An algorithm for determining skeletons of polygonal regions based on the same propagation process is presented in [19]. While the computing time is said to be roughly proportional to the number of edges of the polygon, the algorithm is complicated to program. It is shown in [20] that the skeletonization problem is linearly reducible to the construction of generalized Voronoi

0162-8828/00/$10.00 ß 2000 IEEE

1242

IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,

VOL. 22,

NO. 11,

NOVEMBER 2000

Fig. 1. A rectangle and its medial axis. The dashed curves give three maximal discs.

diagram. O(n log n) algorithms are presented in [20] and [21] for the construction of the skeleton of a simple polygon which has n border segments. In [22], an algorithm with computing time proportional to the number of image pixels is developed for the derivation of various skeletons, each constrained by a given set of anchor points. In [1], a potential-based skeletonization approach is proposed. Instead of using the shortest distance to the region border, a scalar functionÐthe potential is used for computational efficiency. According to the potential model, the region border is assumed to be charged and the valleys of the resulting potential field are used to estimate the MA. The magnitude of the potential field is infinity at the region border and decreases with increasing distance from the border points. The points along potential valleys (or trajectories of 1D potential minima) are closely related to branches of the MA. An algorithm, which will be reviewed later, is developed in [1] to identify these skeletal features using the repulsive force due to the potential field. Because the force direction depends upon all border points, not just the nearest ones, the potential valley is continuous and its location is spatially smooth and insensitive to perturbations of the region border. Furthermore, instead of deriving the complete axis first, then performing the required pruning, the approach can generate part of the MA directly.

Fig. 2. The classification of MA points.

1.2

Review of 3D Object Skeletonization Approaches The problem of 3D skeletonization is more complicated than the 2D case due to the extra degree of freedom in point location. Most of the 3D algorithms have concentrated on discrete and approximate approaches to determine the MA or its related sets. One of the few continuous approaches is developed in [23], where some simple, but frequently encountered shape elements of the skeleton are discussed. The synthesis of these elements leads to the formation of the skeleton of CSG objects. In [24], a 3D algorithm is proposed which uses a polyhedral approximation of a smooth object boundary to generate a connected graph of convex polygons approximating the MA of the original object. In [25], a continuous approximation to the skeleton in both the planar and the 3D case is obtained by first discretizing the object boundary. A discrete-point Voronoi diagram is then derived efficiently for the set of points. Finally, portions of the skeleton which result from the effects of quantization are pruned away. In [26], the definition of a Voronoi diagram is extended to arbitrary set-theoretic solid models and a method for approximating such diagrams using recursive subdivision is demonstrated.

In [27], rather than computing the generalized Voronoi diagram directly, its dual, the abstract Delaunay triangulation, is computed in the skeletonization. Two approaches are proposed in the paper: One is based on a representative point set on the boundary of the object and the other is based on the set of all the vertices, edges, and faces of the object and does not require any discretization of the object. In [28], an approach which also applies the technique of the Delaunay triangulation to derive the medial surface of a 3D object is proposed. The approach first uses the triangulation technique to find the maximum spheres that touch the border of the object at multiple locations. The MA of the object is then obtained from locations of the loci of centers of these spheres. An approach which uses polyballs to approximate continuous shapes and skeletons either in 2D or 3D space is presented in [29]. One other skeletonization approach is based on the thinning process, which erodes an object while preserving its connectivity until only its skeleton is left. Although many 2D thinning algorithms have been proposed, 3D thinning is much more difficult. A 2-step thinning algorithm is proposed in [30], which takes a 3D digital picture as its input and generates the medial surface (skeleton) of an object in the first step. If necessary, the algorithm can generate the medial axes of the object in the second step using the medial surface. Some template matching-based thinning algorithms are proposed in [31] and [32] to derive the medial surfaces and (1D) skeletons, respectively, of a 3D object. In [33], definitions are given to enumerate all the possibilities that may appear in the MA of polyhedrons. Fig. 2 shows the classification of MA points. In general, an exact representation of the MA of a solid consists of trimmed quadric surfaces. These surfaces (sheets) intersect with one another and the solid's surface in the rims and seams which form the boundaries of the sheets. For the discrete implementation presented in [33], a simple differential equation tracing technique is adopted to trace a seam with fixed tracing stepsize to generate a polygonal approximation of the seam curve. Finally, a sheet location process is performed to generate the complete representation of the MA. The major bottleneck of this algorithm is in the seam tracing phase. The amount of time required in this phase is a function of the number of steps taken along each seam, s, and the number of boundary entities n. In the worst case, each seam will be traced in yns time.

CHUANG ET AL.: SKELETONIZATION OF THREE-DIMENSIONAL OBJECT USING GENERALIZED POTENTIAL FIELD

1243

Fig. 3. Newtonian potential-based skeletonization: (a) the potential function, (b) the streamline representation of the force fields, and (c) the derived skeleton.

1.3 Organization of the Paper The potential-based 2D MAT algorithm discussed in Section 1.1 is reviewed in more detail in Section 2, wherein an object skeleton is traced out through force following using the repulsive force due to the Newtonian potential model. Section 3 reviews the generalized potential functions presented in [2], which will be used in place of the Newtonian potential for the 3D case. These functions decay faster than the Newtonian potential function with distance than as inverse of distance. The efficiency of the proposed approach results from the fact that these potential functions and their gradients in three dimensions can be derived in closed form. Section 4 presents the potential-based 3D skeletonization algorithm and some implementation details. Sections 5 and 6 present simulation results and some discussions, respectively. The conclusions are given in Section 7.

points of the medial axis. The basic computation of the MAT skeleton, starting with one of the interior points near these corners called seed point is described in the following algorithm: Algorithm MAT_Newtonian_Polygon Step 1: Follow the direction of the force to traverse the skeleton until a zero force is obtained, i.e., a potential minimum is reached. Step 2: Repeat Step 1 for each of the seed points. Step 3: End the skeleton computation if there is only one potential minimum. Step 4: Derive additional skeleton branches by identifying potential valleys connecting neighboring potential minima. Fig. 3c shows skeleton branches obtained with Steps 1 and 2 for the region shown in Fig. 3a. Similarity between the potential skeleton and the corresponding MA can be observed by comparing Fig. 3c and Fig. 1.

2

A POTENTIAL-BASED 2D MAT ALGORITHM

In this section, we will review a potential-based algorithm developed in [1] for the computation of the MA for a 2D polygonal region. The algorithm assumes that the potential due to a border point of the region is Newtonian, i.e., it is inversely proportional to the distance from that point. In Fig. 3a, the potential function is shown for the interior of a rectangular region.1 Due to the similarity of their definitions, the potential and the distance functions have similar spatial structures, e.g., peaks, valleys, and ridges. Fig. 3b shows force fields for the region shown in Fig. 3a. The force vector at a point is indicated by drawing an arrow. The arrows, or streamlines, merge along ªvalleysº (1D potential minima) and ªconvergeº at points that are 2D potential minima. Clearly, the potential valleys are closely related to the corresponding MAT skeletons. In general, a MAT skeleton consists of potential valleys and isolated 2D potential minima (or a single 2D minimum). For polygonal regions, all convex corners are end
1. In Fig. 3a, brighter pixels correspond to lower potential values. The brightness is made to vary logarithmically with potential value.

3

GENERALIZED POTENTIAL FIELDS SPACE

IN THE

3D

In [1], the Newtonian potential is used in place of the distance function for skeletonization of 2D objects. It is shown that the potential valley is closely related to medial axis and can be obtained with simple force following process, as reviewed in the previous section. One basic requirement for such an approach to be feasible is that the potential will diverge at the object's border; therefore, a collision between a point charge and the charged border without considering the dynamics is not possible. In this paper, the above idea of skeletonization is extended to the 3D space. In [2], a potential-based modeling of 3D workspace for collision avoidance is proposed. It is shown that the Newtonian potential, being harmonic in the 3D space, cannot prevent a point charge from running into an object surface which is uniformly charged. This is because the value of such a potential function is finite at the

1244

IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,

VOL. 22,

NO. 11,

NOVEMBER 2000

In general, the force exerted on a point due to polyhedral object surfaces, which will be used in the proposed 3D skeletonization approach discussed next, can be obtained by summing up the forces due to individual polygonal object faces. Finally, it is also shown in [2], for m = 3, that the generalized potential will diverge for a point charge located on the surface of a polyhedral object, i.e., the aforementioned basic requirement for the proposed skeletonization approach is satisfied.
Fig. 4. A polygonal surface  in the 3D space.

4

THE 3D SKELETONIZATION ALGORITHM

continuously charged surface. Subsequently, generalized potential models are developed to assure collision avoidance between 3D objects. The potential function is inversely proportional to the distance between two point charges to the power of an integer and the potential and, thus, its gradient due to polyhedral surfaces can be calculated analytically. In this paper, these results will be used in the generalization of the potential-based skeletonization approach from 2D to 3D. A preliminary investigation of such a generalization can be found in [34]. Consider a planar surface  in the 3D space, as shown in Fig. 4; the direction of its boundary, Á, is determined with  respect to its surface normal, n, by the right hand rule,  l   u Â   n, where u and  are along the (outward) normal l and tangential directions of Á, respectively. For the generalized potential function, the potential value at r is defined as:  d Y m ! PY I m  where   jrH À rj, rH P , and integer m is the order of the potential function. The basic procedure to evaluate the potential at r is similar to that outlined in [35] for the evaluation of the Newtonian potential (m = 1) and can be summarized as follows: Write the integrand of the potential integral over  as surface divergence of some vector function. 2. Transform the integral into the one over Á based on the surface divergence theorem. 3. Evaluate the integral as the sum of line integrals over edges of Á. It is shown in [2] that, for m = 3, the repulsive force exerted on a point charge due to (1) can be found analytically by summing up the gradients of I xz ÈxY yY z  tnÀI p Y P  yP  zP z y x P 1.

In this section, an algorithm is developed for deriving the skeleton of a polyhedral region based on the potential model described in the previous section. Instead of generating object skeleton similar to the medial surface, which is two-dimensional in general, the algorithm yields a more realistic object skeleton consisting of curved segments. This 3D skeletonization algorithm is in fact a rather straightforward extension of its 2D version reviewed earlier in Section 2.

4.1 The Algorithm With the boundary of a polyhedron charged according to the generalized potential model described in the previous section, the basic requirement for skeletonization, i.e., the potential will diverge at boundaries of polyhedral objects, is guaranteed. Inside the object boundary, the potential valley corresponds to 3D locations where the potential has locally minimal value in the 2D subspace perpendicular to the gradient direction. The proposed approach obtained the object skeleton by, starting from a selected end point, traversing the corresponding potential valleys until a potential minimum is reached. The efficiency of the approach results from 1) the associated computations are limited to points in the vicinities of one-dimensional skeleton branches and 2) the potential gradient, in the form of repulsive force, used in the approach is analytically tractable, as discussed in the previous section. Although the approach will work in theory with generalized potential functions with different orders, only the one of third order (m = 3) is considered in this paper for brevity. The basic concept of the potential-based skeletonization approach for a polyhedral object is a rather straightforward generalization of the 2D one. In fact, the general procedures of the following skeletonization algorithm, starting with one of the interior points near convex corners of the polyhedron, also called seed point, are identical (literally) to their 2D counterparts:
Algorithm MAT_Generalized_Polyhedron Step 1: Follow the direction of the force to traverse the skeleton (potential valley) until a zero force is obtained, i.e., a potential minimum is reached. Step 2: Repeat Step 1 for each of the seed points. Step 3: End the skeleton computation if there is only one potential minimum. Step 4: Derive additional skeleton branches by identifying potential valleys connecting neighboring potential minima.

evaluated at the two ends of each edge of , where x, y, and  z are measured along  À and n, respectively, for each l, u edge. The gradient of  z Q

is then included in the final force calculation for nonzero angular extent  of the projection of r on , r . For example,   P% if r is inside ,   % if r is on an edge of .

CHUANG ET AL.: SKELETONIZATION OF THREE-DIMENSIONAL OBJECT USING GENERALIZED POTENTIAL FIELD

1245

4.2 Computer Implementation In this section, computer implementation of MAT_Generalized_Polyhedron for efficient skeletonization of 3D objects is presented. 4.2.1 Force Following For the discrete implementation of the first two steps of MAT_Generalized_Polyhedron, the force following is performed with a finite step size. Each time after the force exerted on a seed point is calculated using the analytic results obtained in Section 3, the point is moved one step along the force direction. For examples considered in this paper, the step size is chosen to be about 1/100 of the object length.2 Since the location of potential minimum can not be found exactly with such a simple approach, only an approximation of its location is obtained. In the computer implementation, the location of a potential minimum is assumed to be found if a further movement of the seed point along the force direction will result in a reverse in the force direction. In particular, the program will determine if the directions of the two forces are different by more than WH . In general, there is a trade-off between the preciseness in estimating the location of a potential valley (and a potential minimum) and the step size adopted for the force following and, thus, the computation time. In MAT_Generalized_Polyhedron, the required computation for the force following is further reduced by stopping the process if, before a potential minimum is reached, the seed point has reached a previously derived skeleton branch. The idea is that once this happens, subsequent force following process will just have the associated skeleton branch merge3 with the skeleton branch found earlier and, thus, end with the same potential minimum. In Fig. 5a, only three of the 10 seed points are moved to reach the three potential minima, respectively, while force following for the rest seed points ends when a merge of skeleton branches occurs. 4.2.2 Connecting Neighboring Potential Minima If only a single potential minimum is obtained from the above force following procedure, the complete skeleton is generated; otherwise, potential valleys between neighboring potential minima need to be derived to form the complete skeleton. To estimate the locations of such potential valleys, we first connect each pair of neighboring minima with a virtual line segment. Equally spaced point samples are then selected along the line segment as initial estimates of point samples along the associated skeleton branch. For examples considered in this paper, the spacing is chosen to be comparable to the step size chosen in the previous subsection. These estimates are then refined by
2. This step size is arbitrarily chosen to give an appearance of continuity and smoothness of the skeleton. 3. To test the merge of skeleton branches, the smallest rectangloid containing the 3D object is decomposed into cubes of dimension comparable to the sampling spacing (the above step size for force following) of the skeleton. A status bit is associated with each of the cubes indicating whether a skeleton point is contained in that cube or not. For each new skeleton point generated with the proposed algorithm, the status bit associated with the cube containing that point is checked to see if a merge in skeleton branches occurs. The complexity of such a test is very low.

Fig. 5. (a) Skeleton branches obtained by force following using 10 seed points. (b) Complete skeleton obtained by connecting neighboring potential minima according to the procedure given in Section 4.1.

In Step 1, the force following is performed inside the polyhedral boundary. For a closed polyhedron, there exists at least one potential minimum since the potential and, thus, the force field will diverge at its surface [2]. In Step 4, the line segment connecting a pair of neighboring potential minima is chosen as an initial estimate of the potential valley connecting them. (A pair of potential minima are considered as the neighboring ones if such a line segment does not intersect any existing skeleton branch or the object boundary.) The estimate of a potential valley is then refined for selected point samples along the line segment. For each point sample, the refinement is carried out with a 2D search for the potential minimum in the plane perpendicular to the above line using the projection of the force field in the plane. (A similar 1D search is needed for Step 4 of MAT_Newtonian_Polygon reviewed in Section 2.) Although a convex corner of an object, as in the 2D case, corresponds to an end point of the skeleton, it is not selected as a seed point for the above algorithm. This is because the potential, and thus its gradient, will diverge at the object surface so that the force following does not make sense. In the rest of the paper, whenever it is said that a convex corner is chosen as a seed point for MAT_Generalized_Polyhedron, it does not refer to the corner itself. Instead, the seed point corresponds to an interior point of the object which is very close to that corner. Fig. 5a shows an L-shaped object and the intermediate skeletonization results after the execution of Steps 1 and 2 of MAT_Generalized_Polyhedron for 10 seed points. The 10 potential valleys merge into three, which end at three different potential minima. It is not hard to show that there are two pairs of neighboring potential minima. Fig. 5b shows the complete object skeleton after the potential valleys connecting these two pairs of potential minima are derived by Step 4 of MAT_Generalized_Polyhedron. In the above example, discrete estimates are obtained for point samples along the object skeleton which include 1) skeleton branches between end points of the skeleton and potential minima and 2) those between neighboring potential minima. Details of a discrete implementation of MAT_Generalized_Polyhedron, which include the force following for 1) and the identification of potential valleys for 2), will be given in the following section.

1246

IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,

VOL. 22,

NO. 11,

NOVEMBER 2000

Fig. 6. (a) A cube and its MA representation reproduced from [33]. (b) The skeleton derived by the potential-based method.

Fig. 8. (a) A dodecahedron and its skeleton. (b) An icosahedron and its skeleton.

Fig. 9. (a) A tetrahedron and its skeleton. (b) A triangular prism and its skeleton. Fig. 7. (a) A rectangloid and its MA representation. (b) The skeleton derived by the potential-based method.

finding a 2D potential minimum for each of these samples, as discussed next. For each initial estimate of skeleton samples, a minimum potential location is searched in the 2D subspace perpendicular to the virtual line segment. The result corresponds to a point located at the potential valley and is regarded as the final estimate of a skeleton point. The search is carried out along two orthogonal directions, alternately, each with a 1D binary search using the projection of the repulsive force along one of the directions. (One search direction is chosen to be along the projection of the force experienced by the initial estimate in the 2D subspace.) Each binary search ends when the minimum is located with a predetermined accuracy equal to 1/10 of the sampling spacing of initial estimates of skeleton points on the virtual line segment. The search for a particular skeleton point on the skeleton branch under consideration ends when two consecutive 1D searches result in an insignificant difference, which is also chosen to be 1/10 of the above sampling spacing, in the estimated location of the skeleton point. Fig. 5b shows the complete object skeleton after two additional skeleton branches are derived to connect the three potential minima obtained in Fig. 5a.

Fig. 10. (a) A rectangular hexahedron and its MA representation. (b) The skeleton derived by the potential-based method.

5

SIMULATION RESULTS

In this section, some 3D skeletonization examples based on the proposed approach will be presented. In contrast to the two-dimensional medial axis (surface), the skeleton obtained with MAT_Generalized_Polyhedron for a 3D object is intrinsically one-dimensional. These examples show that an object skeleton thus obtained is closely related to the network of vertices and edges forming the boundary of

the MA. (In some cases, they are identical.) On the other hand, there are some interesting examples in which, for some sheets of the MA, parts of the skeleton branches obtained with the proposed approach are not the boundary, but the (1D) skeleton of those sheets. For a cubic object, the seam of its MA derived in [33] and the skeleton obtained with MAT_Generalized_Polyhedron are shown in Figs. 6a and 6b, respectively. In this case, the MA has 12 sheets and the two representations are equivalent. Fig. 7 shows similar results for a rectangloid obtained by elongating the cube shown in Fig. 6 along one of the edge directions. The two skeletonization results, shown in Fig. 7a and Fig. 7b, are quite similar. The latter is an approximation of the former, but is spatially more smooth near the two junction points. It is easy to see that, for regular polyhedra, e.g., those shown in Fig. 8, the two representations will be identical. Fig. 9 shows more skeletonization results. In Fig. 10, the MA and the skeleton obtained with the proposed approach are shown for an V Â T Â Q rectangular box. The two representations are quite similar except for a sheet of MA, which is illustrated in Fig. 10a as a shaded rectangle. This rectangle corresponds to the sheet which is located in the interior of the box and is thus bounded by seams only. For such a sheet, the skeleton branches

CHUANG ET AL.: SKELETONIZATION OF THREE-DIMENSIONAL OBJECT USING GENERALIZED POTENTIAL FIELD

1247

Fig. 11. (a) An echelon hexahedron and its skeleton. (b) A decahedron and its skeleton.

Fig. 13. A 3D polyhedron with three long rectangular polyhedra crossed over.

Fig. 14. (a) A rectangloid with a square hole drilled through it. (b) A subdivision of multiply connected faces into simply connected ones.

Fig. 12. (a) An L-shaped polyhedron and its MA representation. (b) The skeleton derived by the potential-based method.

obtained with MAT_Generalized_Polyhedron, as shown in Fig. 10b, do not correspond to its boundary (seams). Instead, these branches correspond to the (1D) skeleton of that sheet (cf. the one shown in Fig. 1). The skeleton shown in Fig. 10b, being one-dimensional, can in fact be regarded as a more realistic skeletal representation of the box.4 Fig. 11 shows two similar examples in which internal sheets of MA are represented by 1D skeletons. Fig. 12 shows the skeletonization results similar to Fig. 5b. Due to the small change in shape for one arm of the L-shaped object, an internal sheet of MA is formed, as illustrated as the shaded area in Fig. 12a. Again, the potential-based skeleton shown in Fig. 12b gives the 1D skeleton of that sheet. Since there are multiple potential minima, Step 4 of MAT_Generalized_Polyhedron is performed to connect them. Fig. 13 shows an example in which six potential minima are generated by force following. The complete skeleton is obtained by connecting the potential valleys between three pairs of neighboring minima. For an object having multiply connected faces, these faces have to be subdivided into simply connected regions. This is because the analytic results for the force fields given in Section 3 are derived only for simply connected polygons. Fig. 14a shows an object whose top and bottom faces are multiply connected. Fig. 14b shows one way of subdividing these faces into simply connected polygons. The skeletonization result for such an object is shown in
4. Such a representation will be more desirable than the MA if the application of the skeletonization results in path planning is of interest.

Fig. 15a. There are four pairs of neighboring potential minima which are connected to form a loop of four skeleton branches. For a cube with a cubic cavity in it, as shown in Fig. 15b, all faces are simply connected and, thus, can be used directly in calculating the force fields for force following. The derived skeleton branches can be regarded as the boundary of 18 surface patches which are topologically very similar to the corresponding MA. (For an approximation of the MA, please see [33].)

6

DISCUSSION

6.1 Stability and Flexibility Unlike other skeletonization approaches, which may be very sensitive to perturbations of the object boundary, i.e., the number of skeleton branches need to be dealt with will change dramatically, the proposed approach is relatively insensitive to such noises and may deal with the same number of skeleton branches (seeds) if the selection of seeds is not affected by the noise. In addition, the skeleton derived according to the potential model for an object with noisy boundary can be very similar to that obtained from the noise-free case. This is because the potential function (and, thus, the resultant force fields) in the 3D space inside the object boundary is obtained by superposing the repulsive potential due to all boundary elements, which tends to average out the noise. Fig. 16a shows a polyhedron with six noise-free faces and its skeleton and Fig. 16b shows similar results obtained for a noisy boundary which has a total of 832 faces with 1 percent position error added to its vertices. One can see that the potential-based skeletons obtained for these two objects are very similar. (The skeleton shown in Fig. 16b is shown again by itself in Fig. 16c to make easy the comparison.) In the above example, same number of seed points are manually selected for both objects. In Fig. 16b, the selected

1248

IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,

VOL. 22,

NO. 11,

NOVEMBER 2000

TABLE 1 Computation Time for the Skeletonization of a Rectangloid with a Noisy Boundary for Different Numbers (ns) of Surface Patches

Fig. 15. (a) The skeleton derived for the object shown in Fig. 14. (b) A cube with a small cubic cavity in it and its skeleton.

Fig. 16. (a) A rectangloid and its skeleton. (b) A similar rectangloid with 832 faces and its skeleton. (c) The skeleton shown in (b).

points are located near the six vertices of highest curvatures. In general, the proposed approach can be very flexible in the sense that, instead of using all convex vertices, the skeletonization can be performed for only a subset of them. The seed points can either be determined automatically according to some geometric features such as curvature (see [36]) or manually by identifying (the end points of) the skeleton branches of interest. Thus, there is no need to go through the expensive processes of generating the complete skeleton and then trimming away the unwanted skeleton branches.

complexity for finding the complete object skeleton is ynm, where m  mH  mHH is equal to the total number of point samples of the skeleton. Therefore, for fixed number of skeleton branches (seed points), the time complexity for deriving the object skeleton is approximately a linear function of the total number of object faces. Table 1 shows the computation time for deriving the skeleton of a rectangloid with a noisy boundary, for different numbers (ns) of surface patches. For the rectangloid shown in Fig. 16a, the skeletonizaton takes about 1 second (cf. 101 seconds for obtaining the MA of a similar object in [33]) on an Ultra Sparc I. Fig. 17 shows that the computation time is indeed very close to a linear function of n. Typically, the CPU time for computing the skeleton of a discrete 3D object, i.e., for 3D thinning, is proportional to the number of object ªvoxelsº if they are processed sequentially. In [30], [31], and [32], parallel algorithms are proposed. However, no indication of computation time is provided in the literature.

6.2 Complexity The proposed skeletonization approach is not only easy to implement, the associated algorithm is also of low time complexity because the generalized potential field is analytically tractable. Suppose a polyhedron has n faces. For each step of the force following process, the time complexity for calculating the repulsive force exerted on a point sample on the skeleton due to those faces is yn. Thus, for obtaining mH point samples of object skeleton through force following, the time complexity is ynmH . Similarly, it is not hard to show that if mHH points are needed in connecting the potential minima obtained from the force following process, the time complexity for finding these mHH samples of the object skeleton is ynmHH . Thus, the time

6.3 Connectedness of the Skeleton The proposed approach traverses a skeleton branch by following the negation of the potential gradient according to Steps 1 and 2 of MAT_Generalized_Polyhedron until a potential minimum is reached. Since the underlying potential valley is spatially smooth, the derived skeleton samples can be connected directly to form a reasonable, piecewise linear approximation of the corresponding skeleton branch if the spacing between these samples is sufficiently small. Thus, for a given set of seed points (end

Fig. 17. The CPU time shown in Table 1 plotted as a function of the number of surface patches of the object.

CHUANG ET AL.: SKELETONIZATION OF THREE-DIMENSIONAL OBJECT USING GENERALIZED POTENTIAL FIELD

1249

Fig. 19. (a) Four potential minima obtained for an elongated object. (b) A single skeleton branch connecting all four minima. Fig. 18. The skeleton branch connecting the two potential minima obtained for a bean-shaped object.

points of the object skeleton), the problem of connectedness of the skeleton is reduced to a simpler one which is only concerned with the connectedness of the potential minima obtained from those seeds. While a simplified connecting procedure, which uses a line segment as an initial guess of the potential valley between two neighboring minima, is adopted in Section 4.2. with reasonable object skeletons generated, an object skeleton thus obtained may still be unconnected, i.e., having unconnected potential minima, for more complex situations. For example, Fig. 18 shows the skeleton branch connecting the two potential minima obtained for a bean-shaped object. The aforementioned, simplified procedure will omit this skeleton branch since the line segment connecting the two minima intersects the object boundary. One way of generating an initial guess of a skeleton branch for this more complex situation is to adopt the visibility graph method5 (see [37] for a comprehensive review). For the two potential minima shown in Fig. 18, a visibility graph connecting them (and one of the nonconvex object vertices) consists of two line segments. Although the graph will not cross the boundary of the object, it may consist of some boundary points, e.g., the above object vertex, wherein the potential will diverge. Thus, a modified graph obtained by replacing the object vertex with a nearby interior object point is used as the initial guess in the derivation of the skeleton branch shown in Fig. 18. Although the connectedness of the object skeleton with respect to the derived potential minima can be tested easily and the skeleton branch between any two unconnected minima can be derived based on the above visibility graphbased method, a systematic way of identifying pairs of unconnected minima which require further connecting process is beyond the scope of this paper.6 On the other hand, extraneous links between the minima may also be considered by the simplified connecting procedure as initial guesses of skeleton branches connecting them. Fig. 19a shows four potential minima obtained for an elongated object by Steps 1 and 2 of MAT_Generalized_Polyhedron. Although the six line segments connecting the four potential minima are used as initial guesses of the skeleton
5. In the 2D space, the approach generates the shortest path between two points among polygonal obstacles. The path consists of polygonal lines running through vertices of the obstacles and is thus semifree. In the 3D space, the visibility graph method can still be applied, but the generated path may not be the shortest one (which is all right as an initial guess for the proposed skeletonization approach). 6. For example, suppose MAT_Generalized_Polyhedron generates two sets of connected potential minima, but with no skeleton branch existing between the two. The identification of a pair (or pairs) of potential minima, each from a different set, to be connected in order to resolve the connectedness problem is not straightforward in general.

branches connecting the minima, the final results correspond to a single skeleton branch connecting all four minima, as shown in Fig. 19b. Thus, the connecting process does not seem to result in an erroneous topology of the skeleton in this case. More discussions on topological relationships between an object and its skeleton will be given in the following section.

6.4 Shape Representation and Reconstruction In [1], it is shown that, in the 2D space, the potential-based object skeleton will converge to the classical medial axis if the order of the potential is allowed to increase indefinitely. In the 3D situation, however, since the proposed method generates 1D skeleton while the medial surface is a twodimensional, the latter cannot be approximated by the former in general. On the other hand, since the medial surface is formulated based on the concept of minimum distance, an 1D subset of the surface can be approximated by the potential-based object skeleton for sufficiently large order of the potential function. In particular, except for the skeletonization results obtained for the internal sheet of the medial surface, the skeleton obtained with MAT_Generalized_Polyhedron can be made arbitrarily close to the corresponding seams of the medial surface. For example, if a skeleton sample obtained with MAT_Generalized_Polyhedron is used as an initial estimate of a seam point, a better estimate can be obtained in the plane perpendicular to the direction of the skeleton branch by looking for the potential minimum due to a higher order potential function. This is due to the fact that, as the order of the potential increases, the potential function will depend more on the nearest boundary points, therefore, the potential minimum in the plane will be closer to the corresponding seam pointÐthe center of a locally maximal ball.7 As for the object skeleton obtained in the internal sheet area, the former will not be the skeleton of the latter except for some special cases. For example, the internal sheet shown in Fig. 10 is equidistant to two parallel object faces and the rest of the object faces are perpendicular to the two faces; therefore, the skeletonization in such a sheet region degenerates to a 2D one since all influences in the third dimension are cancelled out. Similar results can be found in Fig. 12. In Fig. 11a, the internal sheet is also equidistant to two parallel object faces, but the rest of the object faces are not perpendicular to the two faces. However, since the object has square top and bottom faces and is symmetrical with respect to the vertical line connecting centers of the two faces, the object skeleton obtained in the internal sheet area corresponds to the skeleton of that sheet. On the other hand, Fig. 11b shows a more general situation where the
7. A vigorous proof of such a claim can be carried out in a way similar to that given in [1] for the 2D case and is omitted for brevity.

1250

IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,

VOL. 22,

NO. 11,

NOVEMBER 2000

Fig. 20. A GC axis of a retangular hexahedron.

object skeleton will not converge to the MA of the internal sheet, even for a potential function of arbitrarily high order. In addition to the differences between the skeleton derived with the proposed approach and the medial surface as skeletal representations of a 3D object, the two representations are also different with regard to shape reconstruction. In theory, a 3D object can be reconstructed from its medial surface by the union of the maximal balls centered at every point of the surface, as presented in [38]. However, it is easy to see that using the 1D skeleton in place of the medial surface in the above approach will not result in an acceptable shape reconstruction in general. On the other hand, shape reconstruction with the 1D skeleton will be more similar to that associated with the generalized cylinder (GC), another popular shape descriptor [39]. In the following, we will briefly describe the GC-based representation and reconstruction and possible ways of achieving similar goals based on the proposed skeletonization approach. The GC representation consists of a space curve, or axis, and a cross-section function defined on this axis. The shape of a simple object can be obtained by sweeping the crosssection along a single GC axis. Fig. 20 shows a GC of a very simple form with the axis being a line segment. If the sweeping is performed with the line segment perpendicular to the cross-section, the two will intersect at the centroid of the latter with the latter being a rectangle of fixed size. For n discrete axis samples, an object can be reconstructed approximately with a sweeping process which corresponds to a linear interpolation from the n cross-sections. A desirable accuracy of the approximation can be achieved by using sufficiently large n. We will now use the above example to demonstrate one possible way of obtaining the GC axis based on the proposed potential model. 8 Assuming the two ends (cross-sections) of the GC shown in Fig. 20 are given in advance, the GC axis can simply be obtained by identifying the potential valley connecting the centroids of them. (The axis samples in Fig. 20 are in fact obtained with MAT_Generalized_Polyhedron with the two centroids as seeds.) Because the proposed potential model is used in finding both of them, the GC axis thus obtained and the object skeleton shown in Fig. 10b coincide except at locations near the two ends of the GC. The main difference between the GC axis and the object skeleton in reflecting the object topology can be described most conveniently by considering prismatic objects (see Figs. 7b and 9b for examples). While the axis and the cross-section of GC will simply be the principal axis and the
8. A systematic way of deriving the GC axis for more general cases is currently under investigation.

cross-section of a prism, respectively,9 the object skeleton obtained with the proposed approach is more complex near the two end cross-sections of the GC where the topology of the skeleton is governed by the shape of the end cross-sections through the selection of seeds (which are convex vertices of the cross-sections in our case). In general, for an object consisting of elongated parts (see Figs. 12 and 13 for examples), both representations will reflect similar topological (skeletal) properties of each part of the object, except for the above differences and, in turn, those of the whole object. The same also holds for solids assembled by full tori (see Fig. 15a for a simple torus of rectangular cross-sections). For an object having comparable dimensions in all directions, e.g., the regular polyhedra, its skeleton will convey little information regarding the principal direction of its elongation. As for objects having cavities, consider the object with one cavity shown in Fig. 15b. A disturbance in the object skeleton, compared with that shown in Fig. 6b, can be observed. The disturbance corresponds to a cube of skeleton branches surrounding the cavity. More research is needed for a systematic way of obtaining topological properties of an object from its skeletal representations.

7

CONCLUSION

In this paper, we have presented a generalized potentialbased algorithm for efficient computation of the skeleton of a 3D object. The skeletonization algorithm is a direct extension of the 2D approach presented in [1], where potential valleys are used to estimate the medial axis. The potential captures the information about the distance of an interior point from different portions of object surface into a single scalar function. The closed-form expression of the potential gradient is used to improve the accuracy and efficiency in locating the potential valleys. The potential valleys are continuous, spatially smooth, and insensitive to perturbations of the object boundary. Moreover, the proposed skeletonization approach offers the flexibility that the algorithm can generate part of the skeleton without the need to derive the complete skeleton first. Unlike medial surfaces, an object skeleton obtained with the proposed approach consists of 1D curves. Such a skeletal representation of an object will be more useful in applications such as path planning. The algorithm can also be used as a 3D thinning algorithm.

ACKNOWLEDGMENTS
This work was supported by the National Science Council, Republic of China, under grant no. NSC86-2213-E-009-105.

REFERENCES
[1] [2] N. Ahuja and J.-H. Chuang, ªShape Representation Using a Generalized Potential Field Model,º IEEE Trans. Pattern Analysis and Machine Intelligence, vol. 19, no. 2, pp. 169-176, Feb. 1997. J.-H. Chuang, ªPotential-Based Modeling of Three Dimensional Workspace for Obstacle Avoidance,º IEEE Trans. Robotics and Automation, vol. 14, no. 5, pp. 778-785, 1998.

9. The GC representation is not unique in general. For example, the GC axis can have either vertical or horizontal direction for the 2D object shown in Fig. 1.

CHUANG ET AL.: SKELETONIZATION OF THREE-DIMENSIONAL OBJECT USING GENERALIZED POTENTIAL FIELD

1251

[3] [4] [5] [6] [7] [8] [9]

[10]

[11]

[12] [13] [14] [15] [16] [17] [18]

[19] [20] [21] [22] [23] [24] [25] [26] [27] [28]

H. Blum, ªA Transformation for Extracting New Descriptors of Shape,º Models for the Perception of Speech and Visual Form, W. Wathen-Dunn, ed., Cambridge, Mass.: MIT Press, 1967. J.W. Brandt, A.K. Jain, and V.R. Algazi, ªMedial Axis Representation and Encoding of Scanned Documents,º J. Visual Comm. and Image Representation, vol. 2, no. 2, pp. 151-165, June 1991. H. Blum and R.N. Nagel, ªShape Description Using Weighted Symmetric Axis Features,º Pattern Recognition, vol. 10, no. 3, pp. 167-180, 1978. A. Rosenfeld, ªAxial Representations of Shape,º Computer Vision, Graphics, and Image Processing, vol. 33, pp. 156-173, 1986. O. Takahashi and R.J. Schilling, ªMotion Planning in a Plane Using Generalized Voronoi Diagrams,º IEEE Trans. Robotics and Automation, vol. 5, no. 2, pp. 143-150, 1989. F.B. Prinz and J.-H. Chern, ªGeometric Abstractions Using Medial Axis Transformation,º Technical Report EDRC-24-24-89 Eng. Design Research Center, Carnegie Mellon Univ., 1989. H.N. Gursoy and N.M. Patrikalakkis, ªAn Automated Coarse and Fine Surface Mesh Generation Scheme Based on Medial Axis Transform, Part I: Algorithms,º Eng. with Computers, vol. 8, no. 3, pp. 121-137, 1992. H.N. Gursoy and N.M. Patrikalakkis, ªAn Automated Coarse and Fine Surface Mesh Generation Scheme Based on Medial Axis Transform, Part II: Implementation,º Eng. with Computers, vol. 8, no. 4, pp. 179-196, 1992. G. Turkiyyah and J. Fenves, ªGeneration and Interpretation of Finite Element Models in a Knowledge Based Environment,º Technical Report R-90-188 Dept. of Civil Eng., Carnegie Mellon Univ., 1990. N. Ahuja, L.S. Davis, D.L. Milgram, and A. Rosenfeld, ªPiecewise Approximation of Pictures Using Maximal Neighborhoods,º IEEE Trans. Computers, vol. 27, pp. 375-379, 1978. F. Meyer, ªThe Binary Skeleton in Three Steps,º Computer Architecture for Pattern Analysis and Image Database Management, New York: IEEE CS Press, 1985. F. Meyer, ªSkeletons and Perceptual Graphics,º Signal Processing, pp. 335-363, 1989. A. Montanvert, ªMedial Line, Graph Representation and Shape Description,º Proc. Eighth Int'l Conf. Pattern Recognition, pp. 430432, 1986. G. Borgefors, ªDistances Transformations in Digital Images,º Computer Vision, Graphics, and Image Processing, vol. 34, pp. 344371, 1986. L. Dorst, ªPseudo-Euclidean Skeleton,º Proc. Eighth Int'l Conf. Pattern Recognition, pp. 286-288, 1986. Y. Xia, ªSkeletonization via the Realization of the Fire Front's Propagation and Extinction in Digital Binary Shapes,º IEEE Trans. Pattern Analysis and Machine Intelligence, vol. 11, pp. 1,076-1,086, Nov. 1989. U. Montanari, ªContinuous Skeletons from Digitized Image,º J. ACM, vol. 14, pp. 534-549, 1969. D.G. Kirkpatrick, ªEfficient Computation of Continuous Skeletons,º Proc. 20th Ann. IEEE Symp. Foundations of Computer Science, pp. 18-27, Oct. 1979. D.T. Lee, ªMedial Axis Transformation of a Planar Shape,º IEEE Trans. Pattern Analysis and Machine Intelligence, vol. 4, pp. 363-369, Apr. 1982. L. Vincent, ªEfficient Computation of Various Types of Skeletons,º SPIE Image Processing, vol. 1,445, pp. 297-311, 1991. D. Dutta and C.M. Hoffmann, ªOn the Skeleton of Simple CSG Objects,º ASME Trans. J. Mechanical Design, vol. 115, no. 1, pp. 8794, Mar. 1993. L.R. Nackman, ªCurvature Relations in Three-Dimensional Symmetric Axes,º Computer Graphics and Image Processing, vol. 20, pp. 43-57, 1982. J.W. Brandt and V.R. Algazi, ªContinuous Skeleton Computation by Voronoi Diagram,º CVGIP: Image Understanding, vol. 55, no. 3, pp. 329-338, 1992. D. Levender, A. Bowyer, J. Davenport, A. Wallis, and J. Woodwark, ªVoronoi Diagrams of Set-Theoretic Solid Models,º IEEE Computer Graphics and Applications, vol. 12, no. 5, pp. 69-77, 1992. J.M. Reddy and G.M. Turkiyyah, ªComputation of 3D Skeletons Using a Generalized Delaunay Triangulation Technique,º Computer-Aided Design, vol. 27, no. 9, pp. 677-694, Sept. 1995. D.J. Sheehy, C.G. Armstrong, and D.J. Robinson, ªShape Description by Medial Surface Construction,º IEEE Trans. Visualization and Computer Graphics, vol. 2, no. 1, pp. 62-73, Mar. 1996.

[29] D. Attali, P. Bertolino, and A. Montanvert, ªUsing Polyballs to Approximate Shapes and Skeletons,º Proc. Int'l Conf. Pattern Recognition, Oct. 1994. [30] Y.F. Tsao and K.S. Fu, ªA Parallel Thinning Algorithm for 3D Pictures,º Computer Graphics and Image Processing, vol. 17, pp. 315331, 1981. [31] C.M. Ma, ªA Fully Parallel Thinning Algorithm for Generating Medial Faces,º Pattern Recognition Letters, vol. 16, pp. 83-87, Jan. 1995. [32] C.M. Ma and M. Sonaka, ªA Fully Parallel 3D Thinning Algorithm and Its Applications,º Computer Vision and Image Understanding, vol. 64, no. 3, pp. 420-433, Nov. 1996. [33] E.C. Sherbrooke, N.M. Patrikalakis, and E. Brisson, ªAn Algorithm for the Medial Axis Transform of 3D Polyhedral Solids,º IEEE Trans. Visualization and Computer Graphics, vol. 2, no. 1, pp. 44-61, Mar. 1996. [34] J.-H. Chuang, ªSkeletonization of Three-Dimensional Regions Using Generalized Potential Field,º Proc. Int'l Conf. Control and Robotics, Aug. 1992. [35] D.R. Wilton, S.M. Rao, A.W. Glisson, D.H. Schaubert, O.M. AlBundak, and C.M. Butler, ªPotential Integrals for Uniform and Linear Source Distributions on Polygonal and Polyhedral Domains,º IEEE Trans. Antennas and Propagation, vol. 32, no. 3, pp. 276-281, Mar. 1984. [36] G. Turk, ªRe-Tiling Polygonal Surfaces,º Computer Graphics, vol. 26, no. 2, pp. 55-64, July 1992. [37] J.-C. Latombe, Robot Motion Planning. Kluwer Academic Publishers, 1991. [38] P.J. Vermeer, ªMedial Axis Transform to Boundary Representation Conversion,º PhD Thesis, Purdue Univ., 1994. [39] T.O. Binford, ªVisual Perception by Computer,º Proc. IEEE Systems Science and Cybernetics Conf., 1971. Jen-Hui Chuang (S'86-M'91) received the BS degree in electrical engineering from National Taiwan University, Taipei, in 1980, the MS degree in electrical and computer engineering from the University of California at Santa Barbara in 1983, and the PhD degree in electrical and computer engineering from the University of Illinois at Urbana-Champaign in 1991. From 1983 to 1985, he was a design and development engineer with LSI Logic Corp., Milpitas, California. From 1989 to 1991, he was a research assistant with the Robot Vision Laboratory, Beckman Institute for Advanced Science and Technology, University of Illinois, Urbana-Champaign. Since August 1991, he has been on the faculty of the Department of Computer and Information Science, National Chiao Tung University, Hsinchu, Taiwan, Republic of China. His research interests include 3D modeling, computer vision, speech and image processing, and VLSI systems. Dr. Chuang is a member of Tau Beta Pi as well as the IEEE. Chi-Hao Tsai received the BS degree in control engineering from National Chiao Tung University, Hsinchu, Taiwan, Republic of China, in 1996. Currently, he is a PhD student in the Department of Computer and Information Science at the same university. His main research interests are 3D modeling and robot path planning.

Min-Chi Ko received the BS degree in applied mathematics from Ta Tung Institute of Technology, Taipei, Taiwan, Republic of China, in 1995 and the MS degree in computer and information science from National Chiao Tung University, Hsinchu, Taiwan, Republic of China, in 1997. His research interests include pattern analysis and computer vision.


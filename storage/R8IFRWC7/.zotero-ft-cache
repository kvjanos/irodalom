Adatb´ny´szati algoritmusok a a
Dr. Bodon Ferenc 2008. febru´r 9. a

Copyright c 2002-2007 Dr. Bodon Ferenc Ezen dokumentum a Free Software Foundation altal kiadott GNU Free Do´ cumentation license 1.2-es, vagy b´rmely azt k¨vet˝ verzi´j´nak felt´telei alapj´n a o o oa e a m´solhat´, terjeszthet˝ ´s/vagy m´dos´ a o o e o ıthat´. Nincs Nem V´ltoztathat´ Szakasz, o a o nincs C´mlap-sz¨veg, nincs H´tlap-sz¨veg. A licenc magyar nyel˝ ford´ asa a ı o a o u ıt´ http ://hu.wikipedia.org/wiki/A GNU Szabad Dokument´ci´s Licenc sz¨vege a o o oldalon tal´lhat´. a o

Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.2 (http://www.gnu.org/copyleft/fdl.html) or any later version published by the Free Software Foundation ; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. A copy of the license is included in the section entitled ”GNU Free Documentation License”.

K¨sz¨netnyilv´n´ as o o a ıt´
Ez´ ton szeretn´k k¨sz¨netet mondani R´nyai Lajosnak, a Budapesti M˝ szaki ´s Gazu e o o o u e das´gtudom´nyi Egyetem tan´r´nak az eg´sz munka sor´n ny´ jtott seg´ eg´´rt, hasznos a a aa e a u ıts´ ee otletei´rt, utmutat´sai´rt, de legf˝k´ppen az´rt, mert megismertetett az adatb´ny´szattal. ¨ e ´ a e o e e a a K¨sz¨n¨m Moln´r-S´ska G´bornak,Pint´r M´rt´nak, Szab´ J´cintnak ´s Fekete o o o a a a e a a o a e Zsoltnak az MTA-SZTAKI dolgoz´inak val´sz´ us´gsz´m´ assal kapcsolatos tan´csaikat. o o ın˝ e a ıt´ a K¨sz¨n¨m Buza Kriszti´nnak hasznos megjegyz´seit, otleteit, szeml´letes p´ld´it ´s a o o o a e ¨ e e a e kidolgozott abr´it amelyekkel hozz´j´rul a tanulm´ny siker´hez. ´ a aa a e K¨ l¨n k¨sz¨net illeti Czibula Veronik´t a tanulm´ny t¨bbsz¨ri, alapos atn´z´s´´rt ´s a uo o o a a o o ´ e e ee e A felfedezett hib´k kijav´ as´´rt. Marx D´niel rengeteg inform´ci´val l´tott el a L TEX, emacs, a ıt´ ae a a o a Xﬁg hat´kony haszn´lat´t illet˝en. K¨sz¨n¨m neki a f´radoz´sait. e a a o o o o a a Friedl Kat´nak, ifjabb Bencz´r Andr´snak, Luk´cs Andr´snak, Maricza a u a a a Istv´nnak ´s Bereczki Tam´snak k¨sz¨n¨m az ´rt´kes ´szrev´teleit, megjegyz´seit. a e a o o o e e e e e ´ ekes ´szrev´teleik ´s konstrukt´ javaslatai´rt k¨sz¨net illeti a BME di´kjait, t¨bbek Ert´ e e e ıv e o o a o k¨z¨tt (n´vsorrendben) Er˝s P´tert, Fekete G´bort, Hajnacs Zolt´nt, Lajk´ P´tert, Schlotter o o e o e a a o e Ildik´t, Sz˝ke M´nik´t, ´s Varga D´nielt. o o o a e a

Tartalomjegyz´k e

El˝sz´ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . o o 1. Bevezet´s e 1.1. Legjelent˝sebb adatb´ny´szati feladatok o a a 1.2. A tud´sfelt´r´s folyamata . . . . . . . . a aa 1.3. Adatb´ny´szat kontra statisztika . . . . a a 1.4. Sikeres alkalmaz´sok . . . . . . . . . . . a 1.5. Szabv´nyok . . . . . . . . . . . . . . . . a 1.6. Adatb´ny´szati rendszer architekt´ r´ja . a a ua 1.7. Adatb´ny´szat ´s az etika . . . . . . . . a a e 1.8. Az adatb´ny´szat felt´telei . . . . . . . . a a e

2 4 6 8 11 13 16 17 18 20 22 22 24 24 25 25 25 26 26 27 27 28 28 28 29 30 30 30 33 33 34 34

2. Alapfogalmak, jel¨l´sek oe 2.1. Halmazok, rel´ci´k, f¨ ggv´nyek, sorozatok a o u e 2.2. Line´ris algebra . . . . . . . . . . . . . . . a 2.3. Gr´felm´let . . . . . . . . . . . . . . . . . a e 2.4. Matematika logika . . . . . . . . . . . . . 2.5. Val´sz´ us´gsz´m´ as . . . . . . . . . . . . o ın˝ e a ıt´ 2.5.1. Nevezetes eloszl´sok . . . . . . . . a 2.5.2. Ferdes´g ´s lapults´g . . . . . . . . e e a 2.5.3. Egyenl˝tlens´gek . . . . . . . . . . o e 2.5.4. Entr´pia . . . . . . . . . . . . . . . o 2.6. Statisztika . . . . . . . . . . . . . . . . . . 2.6.1. Hipot´zisvizsg´lat . . . . . . . . . . e a 2.6.2. Az F -pr´ba . . . . . . . . . . . . . o 2.6.3. A χ2 -pr´ba . . . . . . . . . . . . . o 2.6.4. F¨ ggetlens´gvizsg´lat . . . . . . . . u e a 2.7. Algoritmus-elm´let . . . . . . . . . . . . . e 2.8. Adatstrukt´ r´k . . . . . . . . . . . . . . . ua 2.8.1. Sz´f´k . . . . . . . . . . . . . . . . oa 2.8.2. Piros-fekete f´k . . . . . . . . . . . a 2.8.3. Hash-t´bla . . . . . . . . . . . . . . a 2.9. Sz´m´ og´p-architekt´ r´k . . . . . . . . . a ıt´ e ua 2.9.1. T¨bbszint˝ mem´ria, adatlokalit´s o u o a ii

2.9.2. Cs˝vezet´kes feldolgoz´s, el´gaz´s-el˝rejelz´s . . . . . . . . . . . . . . . . 35 o e a a a o e 3. El˝feldolgoz´s, hasonl´s´gi f¨ggv´nyek o a o a u e 3.1. El˝feldolgoz´s . . . . . . . . . . . . . . o a 3.1.1. Hi´nyz´ ´rt´kek kezel´se . . . . a oe e e 3.1.2. Attrib´ tum transzform´ci´k . . u a o 3.1.3. Mintav´telez´s . . . . . . . . . . e e 3.2. Hasonl´s´gi m´rt´kek . . . . . . . . . . oa e e 3.2.1. Bin´ris attrib´ tum . . . . . . . a u 3.2.2. Kateg´ria t´ u attrib´ tum . . o ıpus´ u 3.2.3. Sorrend t´ u attrib´ tum . . . ıpus´ u 3.2.4. Intervallum t´ u attrib´ tum . ıpus´ u 3.2.5. Vegyes attrib´ tumok . . . . . . u 3.2.6. Speci´lis esetek . . . . . . . . . a 3.2.7. Dimenzi´cs¨kkent´s . . . . . . . o o e

4. Gyakori elemhalmazok 4.1. A gyakori elemhalmaz fogalma . . . . . . . . . . . 4.2. Az APRIORI algoritmus . . . . . . . . . . . . . . 4.2.1. Jel¨ltek el˝all´ asa . . . . . . . . . . . . . o o´ ıt´ 4.2.2. Jel¨ltek t´mogatotts´g´nak meghat´roz´sa o a a a a a 4.2.3. Zs´kutca nyes´s . . . . . . . . . . . . . . . a e 4.2.4. A bemenet t´rol´sa . . . . . . . . . . . . . a a 4.2.5. Tranzakci´k sz˝ r´se . . . . . . . . . . . . . o ue 4.2.6. Equisupport nyes´s . . . . . . . . . . . . . e 4.2.7. Borgelt-f´le t´mogatotts´g-meghat´roz´s . e a a a a 4.2.8. Fut´si id˝ ´s mem´riaig´ny . . . . . . . . . a oe o e 4.3. Az ECLAT algoritmus . . . . . . . . . . . . . . . 4.3.1. kdci . . . . . . . . . . . . . . . . . . . . . 4.3.2. lcm . . . . . . . . . . . . . . . . . . . . . . 4.4. Az FP-growth algoritmus . . . . . . . . . . . . 4.4.1. Az FP-growth* algoritmus . . . . . . . . . 4.4.2. Patricia . . . . . . . . . . . . . . . . . . . 4.5. Elavult technik´k . . . . . . . . . . . . . . . . . . a 4.6. Mintav´telez˝ algoritmus elemz´se . . . . . . . . . e o e 4.6.1. Mintav´tel nagys´ga . . . . . . . . . . . . e a 4.7. Elemhalmazok Galois lez´rja . . . . . . . . . . . . a 4.7.1. A z´rt elemhalmazok fogalma . . . . . . . a 4.8. K´nyszerek kezel´se . . . . . . . . . . . . . . . . . e e 4.8.1. ExAnte . . . . . . . . . . . . . . . . . . . 4.9. T¨bbsz¨r¨s t´mogatotts´gi k¨ sz¨b . . . . . . . . o oo a a u o 4.9.1. MSApriori algoritmus . . . . . . . . . . . .

5. Gyakori mint´k kinyer´se a e 5.1. A gyakori minta deﬁn´ oja . . . . . . . . . . . . . . ıci´ 5.1.1. Hat´konys´gi k´rd´sek . . . . . . . . . . . . e a e e 5.2. Tov´bbi feladatok . . . . . . . . . . . . . . . . . . . a 5.2.1. Nem b˝v´ o ıthet˝ ´s z´rt mint´k . . . . . . . . oe a a 5.2.2. K´nyszerek kezel´se . . . . . . . . . . . . . . e e 5.2.3. T¨bbsz¨r¨s t´mogatotts´gi k¨ sz¨b . . . . . o oo a a u o 5.2.4. Dinamikus gyakori mintakinyer´s . . . . . . e 5.3. Az algoritmusok jellemz˝i . . . . . . . . . . . . . . o 5.4. Az APRIORI m´dszer . . . . . . . . . . . . . . . . o 5.4.1. Jel¨ltek el˝all´ asa . . . . . . . . . . . . . . o o´ ıt´ 5.4.2. Z´rt mint´k kinyer´se, az APRIORI-CLOSE a a e 5.5. Sorozat t´ u bemenet . . . . . . . . . . . . . . . . ıpus´ 5.5.1. APRIORI . . . . . . . . . . . . . . . . . . . 5.5.2. Zaki m´dszere . . . . . . . . . . . . . . . . . o 5.5.3. Mintan¨vel˝ algoritmusok . . . . . . . . . . o o 5.5.4. K´tl´pcs˝s technik´k . . . . . . . . . . . . . e e o a 5.5.5. A z´rt mint´k t¨r´kenys´ge” . . . . . . . . a a oe e ” 5.5.6. Dinamikus gyakori mintab´ny´szat . . . . . a a

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . algoritmus . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

83 84 85 86 86 87 88 89 89 89 90 92 93 93 95 97 99 101 102

6. Gyakori sorozatok, bool formul´k ´s epiz´dok a e o 6.1. Gyakori sorozatok kinyer´se . . . . . . . . . . . . . . e 6.1.1. A Gyakori Sorozat Fogalma . . . . . . . . . . 6.1.2. APRIORI . . . . . . . . . . . . . . . . . . . . 6.1.3. Elemhalmazokat tartalmaz´ gyakori sorozatok o 6.1.4. Sorozat t´ u minta altal´nos´ asa . . . . . . ıpus´ ´ a ıt´ 6.2. Gyakori bool formul´k . . . . . . . . . . . . . . . . . a 6.3. Gyakori epiz´dok . . . . . . . . . . . . . . . . . . . . o 6.3.1. A t´mogatotts´g deﬁn´ oja . . . . . . . . . . a a ıci´ 6.3.2. APRIORI . . . . . . . . . . . . . . . . . . . . 7. Gyakori f´k ´s fesz´ a e ıtett r´szgr´fok e a 7.1. Az izomorﬁa probl´m´ja . . . . . e a 7.2. A gyakori gr´f fogalma . . . . . . a 7.3. gyakori gy¨keres f´k . . . . . . . o a 7.3.1. TreeMinerH . . . . . . . . 7.3.2. TreeMinerV . . . . . . . . 7.4. Gyakori r´szf´k . . . . . . . . . . e a 7.5. A gyakori fesz´ ıtett r´szgr´fok . . e a 7.5.1. Az AcGM algoritmus . . . 7.6. A gyakori r´szgr´fok keres´se . . e a e 7.6.1. Az FSG algoritmus . . . . 7.6.2. gSpan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

104 . 104 . 105 . 105 . 106 . 110 . 111 . 111 . 112 . 113 116 . 116 . 118 . 119 . 120 . 121 . 123 . 123 . 123 . 126 . 126 . 127

8. Asszoci´ci´s szab´lyok a o a 8.1. Az asszoci´ci´s szab´ly fogalma . . . . . . . . a o a 8.2. Hierarchikus asszoci´ci´s szab´lyok . . . . . . a o a 8.3. Maxim´lis k¨vetkezm´ny˝ asszoci´ci´s szab´ly a o e u a o a 8.3.1. Egzakt asszoci´ci´s szab´lyok b´zisa . a o a a ´ 8.4. Erdekess´gi mutat´k . . . . . . . . . . . . . . e o 8.5. A korrel´ci´ nem jelent implik´ci´t . . . . . . a o a o 9. Funkcion´lis ´s k¨zel´ o a e o ıt˝ 9.1. Funkcion´lis f¨ gg˝s´g a u oe 9.2. K¨zel´ o f¨ gg˝s´g . . o ıt˝ u o e 9.3. TANE Algoritmus . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

. . . . . .

130 . 131 . 132 . 133 . 134 . 135 . 144

f¨gg˝s´gek u o e 147 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 148 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 148 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 149 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 155 . 155 . 156 . 157 . 158 . 159 . 159 . 160 . 162 . 164 . 165 . 165 . 167 . 168 . 169 . 171 . 172 . 173 . 173 . 175 . 176 . 177 . 177 . 177 . 179 . 180 . 181 . 183 . 183 . 184

10.Oszt´lyoz´s a a 10.1. Bevezet´s . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . e 10.2. Az oszt´lyoz´s feladata . . . . . . . . . . . . . . . . . . . . . . . . . . . . . a a 10.3. Line´risan szepar´lhat´ oszt´lyok . . . . . . . . . . . . . . . . . . . . . . . a a o a 10.3.1. Perceptron tanul´si szab´ly . . . . . . . . . . . . . . . . . . . . . . a a 10.3.2. Winnow m´dszer . . . . . . . . . . . . . . . . . . . . . . . . . . . . o 10.3.3. Rocchio-elj´r´s . . . . . . . . . . . . . . . . . . . . . . . . . . . . . aa 10.4. k-legk¨zelebbi szomsz´d m´dszere . . . . . . . . . . . . . . . . . . . . . . . o e o 10.5. D¨nt´si szab´lyok . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . o e a 10.5.1. Szab´ly halmazok ´s szab´ly sorozatok . . . . . . . . . . . . . . . . a e a 10.5.2. D¨nt´si t´bl´zatok . . . . . . . . . . . . . . . . . . . . . . . . . . . o e a a 10.5.3. Az 1R algoritmus . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10.5.4. A Prism m´dszer . . . . . . . . . . . . . . . . . . . . . . . . . . . . o 10.6. D¨nt´si f´k . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . o e a 10.6.1. D¨nt´si f´k ´s d¨nt´si szab´lyok . . . . . . . . . . . . . . . . . . . . o e a e o e a 10.6.2. A d¨nt´si fa el˝all´ asa . . . . . . . . . . . . . . . . . . . . . . . . . o e o´ ıt´ 10.6.3. Az ID3 algoritmus . . . . . . . . . . . . . . . . . . . . . . . . . . . 10.6.4. Felt´telek a csom´pontokban . . . . . . . . . . . . . . . . . . . . . . e o 10.6.5. V´g´si f¨ ggv´nyek . . . . . . . . . . . . . . . . . . . . . . . . . . . a a u e 10.6.6. Tov´bbfejleszt´sek . . . . . . . . . . . . . . . . . . . . . . . . . . . a e 10.6.7. S´ lyozott divergenciaf¨ ggv´nyek alapj´n deﬁni´lt v´g´si f¨ ggv´nyek u u e a a a a u e 10.6.8. D¨nt´si f´k abr´zol´sa . . . . . . . . . . . . . . . . . . . . . . . . . o e a ´ a a 10.6.9. Hanyag d¨nt´si f´k . . . . . . . . . . . . . . . . . . . . . . . . . . . o e a 10.7. Mesters´ges neur´lis h´l´zatok . . . . . . . . . . . . . . . . . . . . . . . . . e a ao 10.8. Bayesi h´l´zatok . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ao 10.9. Egy´b m´dszerek . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . e o 10.10. szt´lyoz´k ki´rt´kel´se . . . . . . . . . . . . . . . . . . . . . . . . . . . . O a o e e e ´ 10.10.1.Ertekez´s . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . e 10.10.2.Hiba m´r´se val´sz´ us´gi d¨nt´si rendszerek eset´n . . . . . . . . . ee o ın˝ e o e e 10.10.3.Oszt´lyoz´k hat´konys´g´nak mutat´sz´mai . . . . . . . . . . . . . a o e a a o a

11.Klaszterez´s e 11.1. Egy lehetetlens´g-elm´let . . . . . . . . . . . . . . . . e e 11.2. Hasonl´s´g m´rt´ke, adat´br´zol´s . . . . . . . . . . oa e e a a a 11.3. A klaszterek jellemz˝i . . . . . . . . . . . . . . . . . . o 11.4. A klaszterez´s j´s´ga” . . . . . . . . . . . . . . . . . e oa ” 11.4.1. Klasszikus m´rt´kek . . . . . . . . . . . . . . e e 11.4.2. Konduktancia alap´ m´rt´k . . . . . . . . . . u e e 11.5. Klaszterez˝ algoritmusok t´ o ıpusai . . . . . . . . . . . . 11.6. Particion´l´ elj´r´sok . . . . . . . . . . . . . . . . . . ao a a 11.6.1. Forgy k-k¨z´p algoritmusa . . . . . . . . . . . o e 11.6.2. A k-medoid algoritmusok . . . . . . . . . . . . 11.7. Hierarchikus elj´r´sok . . . . . . . . . . . . . . . . . aa 11.7.1. Single-, Complete-, Avegare Linkage Elj´r´sok aa 11.7.2. Ward m´dszere . . . . . . . . . . . . . . . . . o 11.7.3. A BIRCH algoritmus . . . . . . . . . . . . . . 11.7.4. A CURE algoritmus . . . . . . . . . . . . . . 11.7.5. A Chameleon algoritmus . . . . . . . . . . . . 11.8. S˝ r˝ s´g-alap´ m´dszerek . . . . . . . . . . . . . . . . uue u o 11.8.1. A DBSCAN algoritmus . . . . . . . . . . . . . 12.Id˝sorok elemz´se o e

. . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . .

186 . 187 . 189 . 190 . 191 . 191 . 193 . 195 . 196 . 197 . 197 . 199 . 199 . 200 . 200 . 201 . 202 . 203 . 203 204

13.Sz¨vegb´ny´szat (Tikk Domonkos) o a a 13.1. Dokumentumok el˝feldolgoz´sa . . . . . . . . . . . . . . . . . . o a 13.1.1. A dimenzi´sz´m cs¨kkent´se . . . . . . . . . . . . . . . . o a o e 13.1.2. Hat´konys´g m´r´se . . . . . . . . . . . . . . . . . . . . e a ee 13.2. Oszt´lyoz´s . . . . . . . . . . . . . . . . . . . . . . . . . . . . . a a 13.2.1. Oszt´lyoz´s struktur´latlan kateg´ri´k rendszer´be . . . a a a o a e 13.2.2. Hierarchikus oszt´lyoz´s . . . . . . . . . . . . . . . . . . a a 13.3. Dokumentumok csoportos´ asa . . . . . . . . . . . . . . . . . . . ıt´ 13.3.1. Sz¨vegklaszterez´s jellemz˝ feladatai ´s probl´m´i . . . . o e o e e a 13.3.2. Reprezent´ci´ . . . . . . . . . . . . . . . . . . . . . . . . a o 13.3.3. Hat´konys´g m´r´se . . . . . . . . . . . . . . . . . . . . e a ee 13.3.4. Sz¨vegklaszterez˝ elj´r´sok . . . . . . . . . . . . . . . . . o o aa 13.3.5. Dokumentumgy˝ jtem´nyek . . . . . . . . . . . . . . . . u e 13.4. Kivonatol´s . . . . . . . . . . . . . . . . . . . . . . . . . . . . . a 13.4.1. Az osszegz´sk´sz´ o elj´r´sok feloszt´sa . . . . . . . . . . ¨ e e ıt˝ a a a 13.4.2. A kivonatol´s hat´konys´g´nak m´r´se . . . . . . . . . . a e a a ee 13.4.3. Mondatkiv´laszt´sn´l haszn´lt jellemz˝k . . . . . . . . . a a a a o 13.5. A legfontosabb kivonatol´ elj´r´sok . . . . . . . . . . . . . . . . o aa 13.5.1. A klasszikus m´dszer . . . . . . . . . . . . . . . . . . . . o 13.5.2. TF-IDF alap´ m´dszer . . . . . . . . . . . . . . . . . . . u o 13.5.3. Csoportos´ as alap´ m´dszerek . . . . . . . . . . . . . . ıt´ u o 13.5.4. Gr´felm´leti megk¨zel´ esek . . . . . . . . . . . . . . . . a e o ıt´ 13.5.5. SVD haszn´lata a kivonatol´sban . . . . . . . . . . . . . a a 13.5.6. Esettanulm´ny : b¨ng´sz´s t´mogat´sa kivonatol´ssal k´zi a o e e a a a e

205 . . . . . . . . . 206 . . . . . . . . . 208 . . . . . . . . . 210 . . . . . . . . . 210 . . . . . . . . . 211 . . . . . . . . . 217 . . . . . . . . . 220 . . . . . . . . . 221 . . . . . . . . . 221 . . . . . . . . . 222 . . . . . . . . . 222 . . . . . . . . . 224 . . . . . . . . . 225 . . . . . . . . . 225 . . . . . . . . . 227 . . . . . . . . . 227 . . . . . . . . . 228 . . . . . . . . . 228 . . . . . . . . . 229 . . . . . . . . . 230 . . . . . . . . . 231 . . . . . . . . . 232 sz´m´ og´peken 232 a ıt´ e

1 13.6. Egy´b sz¨vegb´ny´szati feladatok . . . . . . . . . . . . . e o a a 13.6.1. Inform´ci´kinyer´s . . . . . . . . . . . . . . . . . a o e 13.6.2. T´mak¨vet´s . . . . . . . . . . . . . . . . . . . . e o e 13.6.3. Fogalomt´rs´ as . . . . . . . . . . . . . . . . . . . a ıt´ 13.6.4. Sz¨veges inform´ci´k vizualiz´l´sa . . . . . . . . . o a o aa 13.6.5. K´rd´s-megv´laszol´s . . . . . . . . . . . . . . . . e e a a 13.7. Nyelvfeldolgoz´s ´s sz¨vegb´ny´szat . . . . . . . . . . . . a e o a a 13.7.1. Sz¨vegb´ny´szat magyarul . . . . . . . . . . . . . o a a 13.8. Linkgy˝ jtem´ny . . . . . . . . . . . . . . . . . . . . . . . u e 13.8.1. Tesztkorpuszok . . . . . . . . . . . . . . . . . . . 13.8.2. Cikk- ´s linkgy˝ jtem´nyek . . . . . . . . . . . . . e u e 13.8.3. Sz¨vegb´ny´szati szoftverek . . . . . . . . . . . . o a a 13.8.4. N´h´ny magyar vonatkoz´s´ eredm´ny ´s projekt e a au e e

14.Webes adatb´ny´szat a a 14.1. Oldalak rangsorol´sa . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . a 14.1.1. Az egyszer˝ Page Rank . . . . . . . . . . . . . . . . . . . . . . . . . . u 14.1.2. Az igazi Page Rank . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14.2. Webes keres´s . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . e 14.2.1. Gy˝ jt˝lapok ´s Tekint´lyek – a HITS algoritmus . . . . . . . . . . . . u o e e 14.2.2. A SALSA m´dszer (Jakabfy Tam´s) . . . . . . . . . . . . . . . . . . o a 14.2.3. Gy˝ jt˝lapok, Tekint´lyek ´s v´letlen s´t´k (Jakabfy Tam´s) . . . . . u o e e e ea a 14.2.4. Automatikus forr´s el˝all´ o - Gy˝ jt˝lapok ´s Tekint´lyek m´dos´ asai a o´ ıt´ u o e e o ıt´ 14.2.5. Gy˝ jt˝lapok ´s Tekint´lyek m´dszer´nek h´tr´nyai . . . . . . . . . . u o e e o e a a 15.Adatb´ny´szat a gyakorlatban a a 15.1. Felhaszn´l´si ter¨ letek . . . . . . . . . . . . . . . . . . . . . . . . . . . aa u 15.1.1. Az ugyf´l ´letciklusa . . . . . . . . . . . . . . . . . . . . . . . . ¨ e e 15.1.2. Kereskedelem . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15.1.3. P´nz¨ gy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . e u 15.1.4. Biol´gia ´s Orvostudom´ny . . . . . . . . . . . . . . . . . . . . o e a 15.2. Az adatb´ny´szat b¨lcs˝je : az elektronikus kereskedelem (e-commerce) a a o o 15.3. Adatb´ny´sz szoftverek . . . . . . . . . . . . . . . . . . . . . . . . . . . a a 15.3.1. Adatb´ny´szati rendszerek tulajdons´gai . . . . . . . . . . . . . a a a 15.3.2. Esettanulm´nyok r¨viden . . . . . . . . . . . . . . . . . . . . . . a o . . . . . . . . . . . . . . . . . . . . . . . . . . .

F¨ggel´k u e 268 F¨ ggel´k A . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 268 u e

El˝sz´ o o

A 90-es ´vekben a t´rol´kapacit´sok m´ret´nek igen er˝teljes n¨veked´se, valamint az arak e a o a e e o o e ´ 1 nagym´rt´k˝ cs¨kken´se miatt az elektronikus eszk¨z¨k ´s adatb´zisok a h´tk¨znapi ´letben is e e u o e o o e a e o e mind ink´bb elterjedtek. Az egyszer˝ ´s olcs´ t´rol´si lehet˝s´gek a nyers, feldolgozatlan adatok a ue o a a oe t¨meges m´ret˝ felhalmoz´s´t eredm´nyezt´k, ezek azonban a k¨zvetlen visszakeres´sen ´s elo e u aa e e o e e len˝rz´sen k´ ul nem sok egy´b haszonnal j´rtak. A ritk´n l´togatott adatokb´l adat temet˝k” o e ıv¨ e a a a o o ” (data tombs) alakultak ki [73], amelyek t´rol´sa haszon helyett k¨lts´get jelentett. Ekkor m´g a a o e e nem alltak rendelkez´sre olyan eszk¨z¨k, amivel az adatokba agyazott ´rt´kes inform´ci´t ki ´ e o o ´ e e a o tudtak nyerni. K¨vetkez´sk´ppen a fontos d¨nt´sek a d¨nt´shoz´k meg´rz´sein alapultak, nem o e e o e o e o e e pedig az inform´ci´-gazdag adatokon. J´l jellemzi ezt a helyzetet John Naisbitt h´ mond´sa, a o o ıres a miszerint We are drowning in information, but starving for knowledge” (Megfulladunk az ” inform´ci´t´l, mik¨zben tud´sra ´hez¨ nk). a oo o a e u Egyre t¨bb ter¨ leten mer¨ lt fel az ig´ny, hogy az adathalmazokb´l a hagyom´nyosn´l o u u e o a a arnyaltabb szerkezet˝ inform´ci´kat nyerjenek ki. A hagyom´nyos adatb´zis-kezel˝ rendszerek – ´ u a o a a o a k¨zvetlen keres˝k´rd´seken k´ ul, illetve az alapvet˝ statisztikai funkci´kon t´ l (´tlag, sz´r´s, o o e e ıv¨ o o u a oa maxim´lis ´s minim´lis ´rt´kek meghat´roz´sa) – komplexebb feladatokat egy´ltal´n nem tuda e a e e a a a a tak megoldani, vagy az eredm´ny kisz´m´ asa elfogadhatatlanul hossz´ id˝be telt. A sz¨ ks´g e a ıt´ u o u e egy uj tudom´nyter¨ letet keltett ´letre, az adatb´ny´szatot, amelynek c´lja : hasznos, l´tens ´ a u e a a e a ” inform´ci´ kinyer´se az adatokb´l”. Az adatb´ny´szati algoritmusokat imm´r arra tervezt´k, a o e o a a a e hogy k´pesek legyenek az arnyaltabb inform´ci´ kinyer´s´re ak´r ori´si m´ret˝ adatb´zisok e ´ a o ee a ´ a e u a eset´n is. e Az adatb´ny´szat, mint on´ll´ tudom´nyter¨ let l´tez´s´r˝l az 1980-as ´vek v´g´t˝l a a ¨ a o a u e eeo e e eo besz´lhet¨ nk. Kezdetben a k¨ l¨nb¨z˝ heurisztik´k, a matematikailag nem elemzett algorite u uo o o a musok domin´ltak. A 90-es ´vekben megjelent cikkek t¨bbs´g´t legfeljebb elhinni lehetett, de a e o e e semmik´ppen sem k´tely n´lk¨ l meggy˝z˝dni az egyes ´ asok helyt´ll´s´g´r´l. Az algoritmusok e e e u o o ır´ a oa ao fut´si idej´r˝l ´s mem´riaig´ny´r˝l altal´ban felsz´ a eo e o e eo ´ a ınes elemz´seket ´s tesztel´si eredm´nyeket e e e e olvashattunk. Az ig´nyes olvas´ban mindig maradt egy-k´t k´rd´s, amire eml´ es szintj´n sem e o e e e ıt´ e tal´lt v´laszt. Bizonyos k´osz uralkodott, amiben l´tsz´lag mindenre volt megold´s, am ezek a a a a a o a ´ megold´sok t¨bbnyire r´szlegesek voltak, tele a legk¨ l¨nb¨z˝bb hib´kkal. a o e uo o o a A XXI. sz´zadba val´ bel´p´ssel a kutat´k k¨r´ben egyre nagyobb n´pszer˝ s´gnek kezdett a o e e o oe e ue orvendeni az adatb´ny´szat. Ennek k´t oka van. Egyr´szt a n¨vekv˝ versenyhelyzet miatt a ¨ a a e e o o piaci ´let szerepl˝inek ori´si az ig´nye az adatb´zisokban megb´ j´ hasznos inform´ci´kra. A e o ´ a e a uo a o
A t´rol´kapacit´s n¨veked´se m´g Moore j´slat´t is j´csk´n fel¨lm´lja. Az ut´bbi 15 ´v alapj´n ugyanis a a o a o e e o a o a u u o e a t´rol´kapacit´s 9 h´naponk´nt dupl´z´dik meg [137] a o a o e a o
1

2

3 n¨vekv˝ ig´ny n¨vekv˝ kutat´i beruh´z´sokat induk´lt. M´sr´szt, az adatb´ny´szat a maga o o e o o o a a a a e a a neh´zs´g´vel, multi-diszciplin´ris volt´val a kutatni, gondolkodni ´s ujszer˝ probl´m´kat mege e e a a e ´ u e a oldani v´gy´ ig´ny´t t¨k´letesen kiel´g´ a o e e o e e ıti. Sorra sz¨ lettek meg a sz´ u ınvonalas munk´k, elemz´sek, osszehasonl´ asok, mint tiszta a e ¨ ıt´ ir´nyvonalak rajzol´dtak ki a k´oszban. A megoldatlan, nyitott probl´m´kra m´g mindig kea o a e a e ress¨ k a v´laszt, ´ val´sz´ uleg az adatb´ny´szat diadalmenete m´g sok´ig t¨retlen marad. u a ıgy o ın˝ a a e a o Ez a jegyzet a jelenlegi adatb´ny´szati probl´m´kr´l ´s az azokat megold´ algoritmusokr´l a a e a o e o o sz´l. A ter¨ letek attekint´se mellett az algoritmusok m´lyebb szint˝ megismer´se is a c´l. Az o u ´ e e u e e ´ as informatikus be´ll´ ır´ a ıtotts´g´ olvas´knak k´sz¨ lt. Felt´telezz¨ k, hogy az olvas´ tiszt´ban van a u o e u e u o a algoritmus- [101] ´s adatb´zis-elm´leti alapokkal, tov´bb´ nem ismeretlen ter¨ let sz´m´ra a e a e a a u a a val´sz´ us´gsz´m´ as [9, 57] ´s a line´ris algebra [143] sem. o ın˝ e a ıt´ e a A jegyzet c´lja az, hogy az adatb´ny´szati appar´tus olyan megismer´s´t ny´ jtsa, melynek e a a a ee u seg´ eg´vel az olvas´ sikerrel oldja meg az egyre t¨bb ter¨ leten felbukkan´ ujabb ´s ujabb ıts´ e o o u o ´ e ´ adatb´ny´szati probl´m´kat. Algoritmikus adatb´ny´szatr´l ´ a a e a a a o ırunk, ez´rt azon mesters´ges ine e telligencia ter¨ let´hez tartoz´ eszk¨z¨k (mesters´ges neur´lis h´l´zatok, genetikus algoritmusok u e o o o e a ao ´s fuzzy rendszerek), amelyekr˝l azt tartj´k, hogy az adatb´ny´szatban is haszn´lhat´k, kev´s e o a a a a o e hangs´ lyt kapnak. u A jegyzet legfrissebb v´ltozata let¨lthet˝ a a o o http://www.cs.bme.hu/~bodon/magyar/adatbanyaszat c´ ımen tal´lhat´ oldalr´l. a o o A jegyzet nem v´gleges ! Folyamatosan b˝v¨ l, v´ltozik. Egyes r´szek kisebb s´ lyt kapnak, e o u a e u ¨ o m´sok viszont jobban r´szletezettek. Or¨mmel fogadok b´rmilyen ´szrev´telt, javaslatot ak´r a e a e e a helyes´ asi, stilisztikai vagy tipogr´ﬁai hib´ra vonatkoz´an. Ezeket k´rn´m, hogy a ır´ a a o e e bodon@cs.bme.hu c´ ımre k¨ ldj´k. u e Az ´ as L TEX-ben k´sz¨ lt, eleinte a kile, k´s˝bbiekben az emacs sz¨vegszerkeszt˝ ır´ A e u eo o o seg´ eg´vel. Egyes abr´k Xﬁg-el, m´sok a pst-node csomaggal lettek rajzolva. Az eg´sz ıts´ e ´ a a e munk´hoz az UHU-linux oper´ci´s rendszer (http://www.uhulinux.hu) ny´ jtotta a stabil ´s a a o u e biztons´gos h´tteret. a a

Aj´nlott irodalom a
Adatb´ny´sz t´m´ban az els˝ magyar nyelv˝ k¨nyv Pieter Adriaans and Dolf Zantinge a a e a o u o Adatb´ny´szat” c´ u k¨nyve [2] volt. M´ra a k¨nyv elavult ez´rt nem aj´nljuk senkinek. 2004a a ım˝ o a o e a ” ´ ´ ben jelent meg a magyar nyelv˝ ford´ asa [72], ADATBANYASZAT – Koncepci´k ´s technik´k u ıt´ o e a c´ ımmel Jiawei Han ´s Micheline Kamber nagy siker˝ k¨nyv´nek [73]. Az´ta megjelent az angol e u o e o nyel˝ k¨nyv m´sodik kiad´sa, ez´rt ha tehetj¨ k ink´bb ezt olvassuk. u o a a e u a A legjobb magyar nyelv˝ adatb´ny´szatr´l sz´l´ k¨nyvnek a Dr. Abonyi J´nos altal szeru a a o oo o a ´ kesztett Adatb´ny´szat a hat´konys´g eszk¨ze” c´ u k¨nyvet [87] tekintj¨ k. Remek kia a e a o ım˝ o u ” eg´sz´ ese a jelen tanulm´nynak. A k¨nyvben helyet kapnak olyan t´m´k, amelyekr˝l ebben e ıt´ a o e a o a tanulm´nyban nem esik sz´ (pl. adatt´rh´zak, id˝sorok, regresszi´s technik´k) hab´r fontos a o a a o o a a lenne. Nagyon hasznos, hogy a m´dszerek bemutat´sa ut´n a szerz˝k kit´rnek arra, hogy a o a a o e weka szoftvert hogyan kell be´ll´ a ıtani a m´dszer haszn´lat´hoz. o a a

1. fejezet Bevezet´s e
A sz´m´ og´p, korunk legdics˝bb tal´lm´nya, rohaml´ptekkel h´d´ teret mag´nak az ´let a ıt´ e o a a e o ıt a e minden ter¨ let´n. Egy gener´ci´ alatt n´lk¨ l¨zhetetlenn´ v´lt, amit sz¨ leink m´g el sem tudtak u e a o e uo e a u e k´pzelni, sz´munkra m´r elv´laszthatatlann´ v´lt munk´nkt´l ´s sz´rakoz´sunkt´l egyar´nt. e a a a a a a o e o a o a Az Internet elterjed´s´vel m´g intenz´ ee e ıvebben ´rz´kelhet˝ a sz´m´ og´p t´rh´d´ asa. A e e o a ıt´ e e o ıt´ vil´gon az egyik legnagyobb probl´m´t, a t´vols´got hidalta at. Uzleti ´s mag´nc´l´ ´rintkez´sek a e a a a ´ ¨ e a eue e v´ltak lehet˝v´ r¨videbb id˝ alatt ´s hat´konyabban, mint valaha. Adatok milli´it kezelik ´s a o e o o e e o e sz´ll´ ak a sz´m´ og´pes rendszerek. Az inform´ci´kon alapul´ d¨nt´shozatal ideje ler¨vid¨ lt, a ıtj´ a ıt´ e a o o o e o u hiszen a hozz´f´r´s k¨nnyebb´ ´s gyorsabb´ v´lt. Az uzleti ´let szerepl˝inek ´lete is felgyorsult. aee o ee a a ¨ e o e Ma a v´llalatok l´te m´ lhat az inform´ci´k gyors ´s a e u a o e pontos begy˝ jt´s´n, elemz´s´n, a rugalmas fejl˝d´sen, vau ee ee o e Az angol tud´sok azt o ” lamint az innov´ci´n. Egyre t¨bb fels˝ vezet˝ ismeri fel, allap´tott´k meg, hogy aki a o o o o ´ ı a hogy az Internet, az adatok elektronikus t´rol´sa a v´llalat sokat j´r disco-ba, annak naa a a a szolg´lat´ba all´ a a ´ ıthat´. Az adatok azonban onmagukban nem gyobb val´sz´n˝s´ggel alakul ki o ¨ o ı u e hasznosak, hanem a bel˝l¨ k kinyerhet˝, a v´llalat ig´nyeihez asztm´ja.” Forr´s : Sl´ger r´di´, ou o a e a a a a o igazod´, azt kiel´g´ o inform´ci´kra lenne sz¨ ks´g. Ez egy 2007. okt´ber 2., 8 ora 26 perc o e ıt˝ a o u e o ´ ujabb sz¨ ks´gletet teremt : egy olyan eszk¨z ir´nti ig´nyt, ´ u e o a e ami k´pes arra, hogy inform´ci´szerz´s c´lj´b´l elemezze a e a o e e a o nyers adatokat. Ez az uj eszk¨z az adatb´ny´szat. ´ o a a Adatb´ny´szati (data mining) algoritmusokat az adatb´zisb´l t¨rt´n˝ tud´sfelt´r´s (knowa a a o o e o a aa ledge discovery in databases) sor´n alkalmaznak. A tud´skinyer´s adatb´zisokb´l egy olyan a a e a o folyamat, melynek sor´n ´rv´nyes, ujszer˝ , lehet˝leg hasznos ´s v´gs˝ soron ´rthet˝ mint´kat a e e ´ u o e e o e o a fedez¨ nk fel az adatokban. Ezt gyakran megtehetj¨ k k¨ l¨nb¨z˝ lek´rdez´sek eredm´nyeinek u u uo o o e e e vizsg´lat´val, azonban ez a megold´s lass´ , dr´ga ´s nem el´g atfog´. Nem is besz´lve arr´l, a a a u a e e ´ o e o hogy az emberi szubjektivit´s sokszor hib´s, tov´bb´ az adatb´zisok olyan nagyok lehetnek, a a a a a hogy egyes lek´rdez´sek elfogadhatatlanul lassan futnak le. Jogos teh´t az ig´ny, hogy a lege e a e ismertebb, leggyakoribb elemz´st´ e ıpusokhoz speci´lis m´dszereket, algoritmusokat fejlesszenek a o ki, amelyek gyorsan ´s pontosan szolg´ltatnak egy objekt´ k´pet az adatb´zisokban tal´lhat´ e a ıv e a a o kincsr˝l”. o ” Sokf´lek´ppen deﬁni´lt´k az adatb´ny´szatot. Felsorolunk n´h´nyat a legismertebbek k¨z¨ l e e a a a a e a o u kiemelve a kulcsszavakat : – The nontrivial extraction of implicit, previously unknown, and potentially useful infor” mation from data” (Piatetsky Shapiro) 4

´ 1. FEJEZET. BEVEZETES Heurisztika Statisztika Algoritmus elm. Adatb´zis elm. a Gr´felm´let a e Line´ris alg. a
? - G´pi e

5

tanul´s  a

Mesters´ges Intelligencia e
? 6

?

Matematika
-6 -

-

Alkalmaz´s  a

¨ Uzlet Marketing Biol´gia o Telekommunik´ci´ a o Csillag´szat a

Vizualiz´ci´ a o

?

Adatb´ny´szat a a 1.1. abra. Az adatb´ny´szat kialakul´sa ´ a a a – . . . the automated or convenient extraction of patterns representing knowledge implicitly ” stored or captured in large databases, data warehouses, the Web, . . . or data streams.” (Han [73], xxi oldal) – . . . the process of discovering patterns in data. The process must be automatic or (more ” usually) semiautomatic. The patterns discovered must be meaningful. . . ” (Witten [183], 5. oldal) – . . . ﬁnding hidden information in a database.” (Dunham [48], 3. oldal) ” – . . . the process of employing one or more computer learning techniques to automatically ” analyze and extract knowledge from data contained within a database.” (Roiger, 4. oldal) Egyesek szerint az adatb´ny´szat, mint megnevez´s n´mik´pp szerencs´tlen [72] . Ha a a e e e e sz´nb´ny´szatr´l besz´l¨ nk, a sz´n b´ny´sz´s´ra gondolunk. Ezzel ellent´tben adatb´ny´szat e a a o eu e a a aa e a a eset´n nem adatot b´ny´szunk, hanem — amint a p´ld´kban is l´ttuk — a rejtett ´s sz´munkra e a a e a a e a hasznos tud´st (inform´ci´t), osszef¨ gg´seket keress¨ k egy nagy adathalmazban ( adathegya a o ¨ u e u ” ben”). Az adatb´ny´szatot az uzleti ´let ´s a marketing keltette ´letre. M´g ma is ezek az a a ¨ e e e e adatb´ny´szat f˝ mozgat´ rug´i. Szerencs´re az adatb´ny´szat lehet˝s´geit egyre t¨bb ter¨ leten a a o o o e a a oe o u ismerik fel, melynek eredm´nyek´nt az alapkutat´soknak is egy fontos eszk¨ze lett. Alkalmazz´k e e a o a az orvosbiol´gi´ban, genetik´ban, t´vk¨zl´sben, csillag´szatban, . . . o a a a o e a Az adatb´ny´szat egy multi-diszciplin´ris ter¨ let. Az 1.1 abr´n l´that´, hogy mely tua a a u ´ a a o dom´nyter¨ letek eszk¨zeit haszn´lja az adatb´ny´szat. Az adatb´ny´szat t¨bb hangs´ lyt feka u o a a a a a o u tet az algoritmusokra, mint a statisztika, ´s t¨bbet a modellekre, mint a g´pi tanul´s eszk¨zei e o e a o (pl. neur´lis h´l´zatok). M´ra az adatb´ny´szat akkora ter¨ lett´ n˝tte ki mag´t, hogy szinte a ao a a a u e o a lehetetlen atl´tni magas sz´ ´ a ınvonalon az eg´szet. e

´ 1. FEJEZET. BEVEZETES

6

1.2. abra. Klaszterez´s (bal oldali abra) ´s k¨ l¨nc pontok keres´se (jobb oldali abra) ´ e ´ e uo e ´

1.1. Legjelent˝sebb adatb´ny´szati feladatok o a a
Feltehetj¨ k, hogy az adatb´zis valamilyen objektumok (¨ gyfelek, betegs´gek, v´s´rl´k, teleu a u e aa o kommunik´ci´s esem´nyek, . . . ) k¨ l¨nb¨z˝ tulajdons´gait ´ le. A tulajdons´g helyett gyakran a o e uo o o a ırja a haszn´ljuk majd az attrib´ tum sz´t1 . Az adatb´ny´szat feladata a rejtett osszef¨ gg´sek, kapcsoa u o a a ¨ u e latok felder´ ese. Az osszef¨ gg´sek t´ ıt´ ¨ u e ıpusa szerint a k¨vetkez˝ adatb´ny´szati alapprobl´m´kr´l o o a a e a o besz´lhet¨ nk : e u Gyakori mint´k kinyer´se : Adott objektumok egy sorozata. C´lunk megtal´lni a gyakran a e e a el˝fordul´ (r´sz-) objektumokat. Az objektumok lehetnek elemhalmazok vagy sorozatok, o o e esetleg epiz´dok (r´szben rendez´sek), gr´fok stb. o e e a Attrib´tumok k¨z¨tti kapcsolatok : Gyakran hasznos, ha az objektumokra ugy tekint¨ nk, u o o ´ u mint az attrib´ tumok megval´sul´saira ´s keress¨ k az osszef¨ gg´seket az attrib´ tumok u o a e u ¨ u e u k¨z¨tt. T¨bbf´le osszef¨ gg´s l´tezik. Ilyenek p´ld´ul az asszoci´ci´s-, korrel´ci´s o o o e ¨ u e e e a a o a o szab´lyok, a funkcion´lis f¨ gg˝s´gek ´s hasonl´s´gok. Az oszt´lyoz´s is attrib´ tumok a a u oe e oa a a u k¨z¨tti osszef¨ gg´sek felfedez´s´re szolg´l. Az oszt´lyoz´sn´l egy kit¨ ntetett attrib´ tum o o ¨ u e ee a a a a u u ´rt´k´t kell megj´solnunk a t¨bbi attrib´ tum ´rt´ke alapj´n. Ezt egy modell fel´p´ es´vel e e e o o u e e a e ıt´ e teszi. Leggyakrabban a modell egy d¨nt´si fa, de lehet if-then szab´lyok sorozata, valao e a milyen matematikai formula, vagy ak´r egy neur´lis h´l´zat stb. is. a a ao Klaszterez´s : Objektumokat el˝re nem deﬁni´lt csoportokba (klaszterekbe) kell sorolnunk e o a ugy, hogy az egy csoportba tartoz´ objektumok hasonl´ak legyenek, m´ a k¨ l¨nb¨z˝ ´ o o ıg uo o o csoportba ker¨ ltek k¨ l¨nb¨zzenek egym´st´l. K´t pont hasonl´s´g´t egy el˝re megadott u uo o a o e oa a o (t´vols´gszer˝ ) f¨ ggv´ny seg´ eg´vel szok´s ´rtelmezni. a a u u e ıts´ e a e Sorozatelemz´s : A sorozatelemz´sbe t¨bbf´le adatb´ny´szati feladat tartozik. Kereshet¨ nk e e o e a a u egym´shoz hasonl´ o (ak´r r´sz-) sorozatokat. Ezen k´ ul elemezhetj¨ k a sorozat alaa ıt´ a e ıv¨ u kul´s´t, ´s k¨ l¨nb¨z˝ regresszi´s m´dszerekkel pr´b´lhatjuk megj´solni a j¨v˝beli aa e uo o o o o o a o o o val´sz´ uleg el˝fordul´ esem´nyeket. o ın˝ o o e Elt´r´selemz´s : Azokat az elemeket, amelyek nem felelnek meg az adatb´zis altal´nos jele e e a ´ a lemz˝inek, tulajdons´gaik nagy m´rt´kben elt´rnek az altal´nost´l k¨l¨nc pontoknak neo a e e e ´ a o uo vezz¨ k. A legt¨bb adatb´ny´szati algoritmus az ilyen k¨ l¨nc pontoknak nem tulajdon´ u o a a uo ıt
A k¨zgazd´szok a tulajdons´g helyett ism´rvet, valamely tulajdons´g konkr´t ´rt´ke helyett ism´rv o a a e a e e e e v´ltozatot mondanak. a
1

´ 1. FEJEZET. BEVEZETES

7

nagy jelent˝s´get, legt¨bbsz¨r zajnak vagy kiv´telnek kezeli oket. Azonban az ´let egyoe o o e ˝ e re t¨bb ter¨ let´n mer¨ l fel az ig´ny, hogy ´ppen az ilyen k¨ l¨nc pontokat tal´ljuk meg. o u e u e e uo a Elt´r´selemz´s f˝bb alkalmaz´si ter¨ lete a m´sol´s-, koppint´skeres´s, tov´bb´ a csal´sok, ee e o a u a a a e a a a vissza´l´sek, v´ ee ırusok, hackert´mad´sok kisz˝ r´se. a a ue Webes adatb´ny´szat : Az Interneten ori´si adatt¨meg tal´lhat´, ´ az Interneten alapul´ a a ´ a o a o ıgy o inform´ci´-kinyer˝ algoritmusok is az adatb´ny´szat ter¨ let´hez tartoznak. A jegyzetben a o o a a u e sz´ lesz intelligensebb keres´sr˝l, oldalak rangsorol´s´r´l, illetve hasonl´ tartalm´ oldalak o e o aao o u megtal´l´s´r´l. aa a o El˝fordulhat, hogy az adatb´ny´szati rendszer, m´g megfelel˝en megv´lasztott param´terek o a a e o a e mellett is, t´ l sok szab´lyt, osszef¨ gg´st t´r fel. Az egyik legnehezebb k´rd´s az, hogy ezek u a ¨ u e a e e ´ k¨z¨ l melyek az ´rdekesek. Erdekess´gi mutat´kr´l altal´noss´gban nem sok mondhat´ el, o u e e o o ´ a a o mert a k¨ l¨nb¨z˝ felhaszn´l´si ter¨ leteken m´s-m´s minta lehet hasznos. Megk¨ l¨nb¨ztet¨ nk uo o o aa u a a uo o u szubjekt´ ´s objekt´ ´rdekess´gi mutat´kat. Egy minta mindenk´ppen ´rdekes, ha meglep˝, ıv e ıv e e o e e o azaz eddigi tud´sunknak ellentmond, vagy ujszer˝ , azaz tud´sunkat kieg´sz´ Ugyanakkor a ´ u a e ıti. egy inform´ci´ csak akkor ´rdekes, ha felhaszn´lhat´, azaz tudunk valamit kezdeni vele [160]. a o e a o Azt, hogy egy szab´ly mennyire meglep˝ – t¨bb-kevesebb sikerrel – tudjuk formaliz´lni. Az a o o a ujszer˝ s´gr˝l ´s a felhaszn´lhat´s´gr´l azonban csak a ter¨ let szak´rt˝je tud nyilatkozni. ´ ue o e a oa o u e o Annak ellen´re, hogy az adatb´ny´szat egy uj ter¨ let, a fentiekb˝l l´that´, hogy r´gi, m´r e a a ´ u o a o e a ismert probl´m´kat is mag´ba foglal. Gondoljunk itt arra, hogy klaszterez˝ algoritmusokat e a a o m´r a 60-as ´vekben is javasoltak, vagy arra, hogy az oszt´lyoz´s feladat´t f¨ ggv´ny appa e a a a u e roxim´ci´k´nt is felfoghatjuk, aminek irodalm´val t¨bb k¨nyvespolcot is meg lehetne t¨lteni a o e a o o o 2 . Teh´t az adatb´ny´szatban gyakran nem maga a probl´ma uj, hanem az adatok m´rete, a a a e ´ e tov´bb´ az a k¨vetelm´ny, hogy az egyes algoritmusok fut´si ideje olyan r¨vid legyen, hogy az a a o e a o eredm´nyek a gyakorlatban elfogadhat´ id˝n bel¨ l ´rkezzenek. Az alkalmaz´sokban nem ritk´k e o o u e a a a giga- s˝t terrab´jt nagys´g´ adathalmazok. A [49] ´ asban p´ld´ul egy besz´mol´t olvashao a a u ır´ e a a o tunk egy bank adatb´zis´nak elemz´s´r˝l adatb´ny´szati eszk¨z¨kkel, ahol az ugyfelek sz´ma a a eeo a a o o ¨ a el´rte a 190 milli´t az adatok m´rete pedig a 4 TB-ot. Ilyen m´retek mellett m´r kvadratikus e o e e a l´p´sig´ny˝ algoritmusokat sem engedhet¨ nk meg. L´tni fogjuk, hogy a legt¨bb adatb´ny´szati e e e u u a o a a algoritmus a teljes adatb´zist kev´s alkalommal olvassa v´gig. a e e Sk´l´zhat´ (scalable) ´s hat´kony (eﬃcient) algoritaa o e e musokat keres¨ nk, amelyek megbirk´znak nagy m´ret˝ u o e u Magyar kutat´k szerint a o adatb´zisokkal. Elv´rjuk, hogy az adatb´zis fontosabb ” a a a mobil puszt´tja a spermiumoı param´tereinek ismeret´ben az algoritmusok fut´si ideje kat.” e e a Forr´s : a http://www. megj´solhat´ legyen. Az ori´si mem´riam´retek miatt a origo.hu/tudomany/elet/ o o ´ a o e legt¨bb elemzend˝ adatb´zis – megfelel˝ atalak´ asokkal 20040628amobiltelefon.html o o a o ´ ıt´ – val´sz´ uleg elf´r a mem´ri´ban, de m´gis sokszor azt o ın˝ e o a e felt´telezz¨ k, hogy az adat a h´tt´rt´ron tal´lhat´. e u a e a a o Az adatb´zisok m´ret´nek n¨veked´se miatt egyre fontosabbak a p´rhuzamos´ a e e o e a ıthat´ algoo ritmusok (l´sd p´ld´ul part´ os algoritmus r´sz). Ezek az adatb´zist r´szekre osztj´k, majd az a e a ıci´ e a e a egyes r´szeket k¨ l¨n mem´ri´val ´s h´tt´rt´rral rendelkez˝ egys´gek dolgozz´k fel, ´s v´g¨ l egy e uo o a e a e a o e a e e u
Vannak olyan eredm´nyek is, amelyeket egym´st´l f¨ggetlen¨l megkaptak az adatb´ny´szat ´s a statisztika e a o u u a a e kutat´i is. P´ld´ul d¨nt´si f´k el˝all´ as´r´l ´ n´gy statisztikus egy k¨zismert k¨nyvet [25]. Ek¨zben egy jeles o e a o e a o´ ıt´ a o ırt e o o o adatb´ny´sz kutat´ J. Ross Quinlan d¨nt´si fa el˝all´ o szoftvert k´sz´ a a o o e o´ ıt´ e ıtett. A k´t kutat´sban sok k¨z¨s m´dszer e a o o o lelhet˝ fel. o
2

´ 1. FEJEZET. BEVEZETES

8

kit¨ ntetett egys´g egyes´ a r´szeredm´nyeket. Szint´n a m´retn¨veked´s az oka azon algoritu e ıti e e e e o e musok n´pszer˝ s´g´nek, amelyek fut´si ideje nagy m´rt´kben cs¨kkenthet˝ valamilyen el˝zetes e ue e a e e o o o inform´ci´k (p´ld´ul kor´bbi fut´si eredm´nyek) ismeret´ben (l´sd asszoci´ci´s szab´lyok kara o e a a a e e a a o a bantart´sa r´sz). a e

1.2. A tud´sfelt´r´s folyamata a a a
A tud´skinyer´s folyamata sor´n 6-10 f´zist szok´s elk¨ l¨n´ a e a a a u o ıteni [56, 73] att´l f¨ gg˝en, hogy o u o mely l´p´seket vonjuk ossze (tekinthetj¨ k p´ld´ul az 1.3 abr´t) : e e ¨ u e a ´ a
értelmezés és értékelés adatbányászat

tudás

csökkentés és transzformáció minták tisztítás

kiválasztás tisztított adat

transzformált adat

forrás adat

adat

1.3. abra. A tud´sfelt´r´s folyamata ´ a aa I. Az alkalmaz´si ter¨ let felt´r´sa ´s meg´rt´se, fontosabb el˝zetes ismeretek begy˝ jt´se, ´s a u aa e e e o u e e a felhaszn´l´si c´lok meghat´roz´sa. aa e a a II. C´ladatb´zis l´trehoz´sa : kiv´lasztani a haszn´lni k´ ant adatb´zist, (vagy annak csak e a e a a a ıv´ a egy r´sz´t), amib˝l a tud´st ki akarjuk nyerni. e e o a III. Adattiszt´ as : itt olyan alapvet˝ oper´ci´kat ´rt¨ nk, mint a t´ves bejegyz´sek elt´vol´ asa, ıt´ o a o e u e e a ıt´ hi´nyos mez˝k p´tl´sa, zajok sz˝ r´se stb. Zajon az adatba ´p¨ lt v´letlen hib´t ´rt¨ nk. a o o a ue e u e a e u Vannak zajok, amelyeket egyszer˝ felfedezni ´s jav´ u e ıtani. P´ld´ul sztring ´rt´k ott, ahol e a e e sz´mot v´runk, vagy felsorol´s t´ u attrib´ tumn´l ´rv´nytelen ´rt´k tal´lhat´. Sajnos a a a ıpus´ u a e e e e a o sok esetben a hiba ´szrev´tlen marad (p´ld´ul 0.53 helyett 0.35 ´rt´k g´pel´se). e e e a e e e e

´ 1. FEJEZET. BEVEZETES

9

IV. Adatintegr´ci´ : a feldolgoz´s sz´m´ra fontos, esetleg elosztott adatb´zisok egyes´ ese. a o a a a a ıt´ Az harmadik ´s negyedik egy¨ tt gyakran nevezik az adatok el˝feldolgoz´s´nak. A e u o aa k¨ l¨nb¨z˝ forr´sb´l vett adatok integr´ci´ja sor´n sok probl´m´ba utk¨zhet¨ nk. A uo o o a o a o a e a ¨ o u k¨ l¨nb¨z˝ oszt´lyok k¨ l¨nb¨z˝ m´don t´rolj´k adataikat, k¨ l¨nb¨z˝ konvenci´kat k¨vetuo o o a uo o o o a a uo o o o o nek, k¨ l¨nb¨z˝ m´rt´kegys´geket, els˝dleges kulcsokat ´s elnevez´st haszn´lhatnak ´s uo o o e e e o e e a e k¨ l¨nf´le hib´k lehetnek jelen. Az eg´sz c´get atfog´ adatintegr´ci´t adatt´rh´zban uo e a e e ´ o a o a a 3 t´rolj´k, mely egy speci´lis, az elemz´st t´mogat´ adatb´zis. a a a e a o a V. Adatt´r cs¨kkent´s : az adatb´zisb´l a c´l szempontj´b´l fontos attrib´ tumok kiemel´se. e o e a o e a o u e VI. Adatb´ny´szati algoritmus t´ anak kiv´laszt´sa : eld¨nteni, hogy a megoldand´ feladat a a ıpus´ a a o o klaszterez´s, vagy szab´ly-, illetve mintakeres´s, esetleg oszt´lyoz´s. e a e a a VII. A megfelel˝ adatb´ny´szati algoritmus meghat´roz´sa. El˝nyeinek, h´tr´nyainak, pao a a a a o a a ram´tereinek vizsg´lata, fut´si id˝- ´s mem´riaig´ny elemz´se. e a a o e o e e VIII. Az algoritmus alkalmaz´sa. a IX. A kinyert inform´ci´ ´rtelmez´se, esetleg visszat´r´s az el˝z˝ l´p´sekhez tov´bbi ﬁa o e e ee o o e e a nom´ asok c´lj´b´l. ıt´ e a o X. A megszerzett tud´s meger˝s´ ese : osszevet´s elv´r´sokkal, el˝zetes ismeretekkel. a o ıt´ ¨ e aa o Eredm´nyek dokument´l´sa ´s atad´sa a felhaszn´l´nak. Egy adatb´ny´szati elemz´s e aa e ´ a ao a a e eredm´nye akkor nem felel meg az elv´r´sainknak”, ha nem siker¨ l semmilyen uj, hasze aa u ´ ” nos ´s term´szetesen val´s osszef¨ gg´st felt´rni. Ennek nyilv´n t¨bb oka is lehet, a k¨vete e o ¨ u e a a o o kez˝kben k´t p´ld´t mutatunk [30]. o e e a 1. El˝fordulhat, hogy rosszul v´lasztottuk meg az elemz´shez (adatb´ny´szathoz) o a e a a haszn´lt algoritmust vagy ennek param´tereit, ´s egy m´sik elj´r´ssal (vagy m´s paa e e a aa a ram´terekkel) tal´lni fogunk valamilyen ´rdekes osszef¨ gg´st. Szeml´letesen sz´lva : e a e ¨ u e e o m´s oldalr´l r´n´zve az adathegyre, lehet, hogy l´tunk rajta valami ´rdekeset. a o a e a e 2. Term´szetesen az is lehets´ges, hogy az adatok egy´ltal´n nem rejtenek semmif´le e e a a e uj, a gyakorlatban hasznos´ ´ ıthat´ osszef¨ gg´st. Ekkor — sajnos — teljesen el¨lr˝l kell o¨ u e o o kezdeni a folyamatot, uj adatok gy˝ jt´s´vel. ´ u ee
A h´tk¨znapi” m˝k¨d´st t´mogat´ operat´ adatb´zis, ´s az adatt´rh´zak k¨z¨tti k¨l¨nbs´gre egy e o u o e a o ıv a e a a o o uo e ” szeml´letes p´lda az al´bbi [30]: Ha tudni szeretn´nk Kis J´nos aktu´lis sz´mlaegyenleg´t, akkor ezt egy opee e a e a a a e rat´ adatb´zis alapj´n pontosan ´s gyorsan meg tudjuk hat´rozni. Egy atfog´bb” k´rd´s — p´ld´ul: Hoıv a a e a ´ o e e e a ” ” gyan alakultak az ugyfelek bankban elhelyezett megtakar´ asai az elm´lt 12 h´napban?” — megv´laszol´sa ¨ ıt´ u o a a egy operat´ adatb´zis eset´n bonyolult lehet, ´s sok ideig tarthat. Egy adatt´rh´z az ut´bbi k´rd´sre gyors ıv a e e a a o e e v´laszt tud adni, t´mogatva ez´ltal a d¨nt´shoz´kat. A v´lasz azonban nem teljesen pontos: ha d´lut´n 4-kor a a a o e o a e a k´rdezz¨k le az ut´bbi 12 h´napbeli megtakar´ asokat, abban m´g nem biztos, hogy benne lesz Kis J´nos aznap e u o o ıt´ e a d´lel˝tt lek¨t¨tt bet´tje. Az adatt´rh´z adatai teh´t nem felt´tlen¨l abszol´t frissek, nyilv´n sz¨ks´ges azonban e o oo e a a a e u u a u e a periodikus friss´ es¨k. Adatt´rh´zak alkalmaz´sakor a trendek, folyamatok elemz´se a c´l. Az, hogy nem az ıt´ u a a a e e aktu´lisan legfrissebb adatokkal dolgozunk, altal´ban nem okoz gondot, felt´ve, hogy a legut´bbi friss´ es ota a ´ a e o ıt´ ´ nem k¨vetkezett be radik´lis v´ltoz´s. Ugyanakkor Kis J´nos nyilv´n nem or¨lne, ha a bet´t elhelyez´se ut´n o a a a a a ¨u e e a este lek´rdezve sz´ml´j´t nem l´tn´” a p´nz´t, mert a periodikus friss´ es csak hetente egyszer esed´kes: az o e a aa a a e e ıt´ e ˝ ” ig´nyeinek nyilv´n az operat´ adatb´zis felel meg. e a ıv a
3

´ 1. FEJEZET. BEVEZETES

10

A sikeres adatb´ny´szati projektekben az els˝ 5 l´p´s teszi ki az id˝- ´s p´nzr´ford´ asok a a o e e o e e a ıt´ legal´bb 80%-´t. Ha a c´lok nem kell˝k´ppen atgondoltak ´s a b´ny´szand´ adatok nem el´g a a e o e ´ e a a o e min˝s´giek, akkor k¨nnyen el˝fordulhat, hogy az adatb´ny´sz csak vakt´ban dolgozik ´s a oe o o a a a e kinyert inform´ci´nak tulajdonk´ppen semmi haszna sincs. A tud´sfelt´r´s sor´n elengedhea o e a aa a tetlen, hogy az adatb´ny´sz ´s az alkalmaz´si ter¨ let szak´rt˝je szorosan egy¨ ttm˝ k¨dj¨n, a a a e a u e o u u o o projekt minden f´zis´ban ellen˝rizz´k a betartand´ ir´nyvonalakat. N´zz¨ nk erre egy p´ld´t : a a o e o a e u e a ha adatb´ny´szati eszk¨z¨kkel siker¨ l kimutatni, hogy X betegs´ggel gyakran egy¨ tt j´r Y bea a o o u e u a tegs´g is, a kutat´orvos k´pes eld¨nteni azt, hogy ez val´ban ´ van-e : megvizsg´lhatja, hogy e o e o o ıgy a ugyanezen osszef¨ gg´s m´s adathalmaz eset´n is fenn´ll-e (esetleg direkt ebb˝l a c´lb´l gy˝ jt ¨ u e a e a o e o u adatot). Ha igen, akkor kider´ ıtheti azt, hogy az egyik betegs´g sor´n keletkezik-e olyan k´miai e a e anyag, vagy elszaporodott-e olyan k´rokoz´, mely hozz´j´rul a m´sik betegs´g kialakul´s´hoz. o o aa a e aa Ezek alapj´n azt mondhatjuk, hogy az adatb´ny´sz tippeket” ad a kutat´orvosoknak. Ezen a a a o ” tippek” jelent˝s´g´t nem szabad al´becs¨ ln¨ nk : ezek ovhatj´k meg a kutat´orvost att´l, hogy oe e a u u ´ a o o ” — szeml´letesen fogalmazva — rossz helyen tapogat´zzon”. Az adatb´ny´szat teh´t els˝ sore o a a a o ” ban uj, ´ eretes hipot´zisekkel j´rulhat hozz´ a k¨zeg´szs´g¨ gyi kutat´sokhoz. ´ ıg´ e a a o e e u a A k¨vetkez˝ val´s p´lda is az adatb´ny´sz ´s a kutat´orvos szerep´t szeml´lteti. Egy o o o e a a e o e e adatb´ny´sz az ´letm´dra ´s a megbeteged´sekre vonatkoz´ adatokat elemezve juthat arra a a e o e e o a k¨vetkeztet´sre, hogy a prosztatar´k osszef¨ gg a szenesed´sig s¨ t¨tt h´ s fogyaszt´s´val. Ezo e a ¨ u e uo u aa zel ir´nyt mutat” a kutat´orvosnak, aki a h´tt´rben rejl˝ k´miai reakci´kat ´s azok biol´giai a o a e o e o e o ” k¨vetkezm´nyeit t´rja fel. Ez a konkr´t esetben l´nyeg´ben ´ is t¨rt´nt : el˝bb t´rt´k fel a j´l o e a e e e ıgy o e o a a o ats¨ t¨tt h´ s fogyaszt´sa ´s a prosztatar´k gyakoris´ga k¨z¨tti osszef¨ gg´st, majd megtal´lt´k ´ uo u a e a a o o ¨ u e a a a h´ s s¨ t´skor keletkez˝ PhIP vegy¨ letet ´s kimutatt´k, hogy hat´s´ra prosztatar´k alakulhat u ue o u e a aa a ki [81]. Ez a jegyzet a 6. ´s 7. l´p´seket veszi szem¨ gyre : rendelkez´s¨ nkre all egy adatb´zis, tude e e u eu ´ a juk, milyen jelleg˝ inform´ci´ra van sz¨ ks´g¨ nk, ´s az adatb´ny´sz feladata, hogy ennek megu a o u e u e a a old´s´ra min´l gyorsabb ´s pontosabb algoritmust adjon. aa e e ´ Altal´nosabban k´tf´le adatb´ny´szati tev´kenys´get k¨ l¨n´ unk el : a e e a a e e u o ıt¨ Felt´r´s : A felt´r´s sor´n az adatb´zisban tal´lhat´ mint´kat keress¨ k meg. A mint´k a a aa a a a o a u a legt¨bbsz¨r az altal´nos trendeket/szok´sokat/jellemz˝ket ´ ak le, de vannak olyan alkalo o ´ a a o ırj´ maz´sok is (p´ld´ul csal´sfelder´ es), ahol ´ppen az altal´nost´l elt´r˝/nem v´rt mint´kat a e a a ıt´ e ´ a o eo a a keress¨ k. u El˝rejelz´s : Az el˝rejelz´sn´l a felt´rt mint´k alapj´n pr´b´lunk k¨vetkeztetni a j¨v˝re. o e o e e a a a o a o o o P´ld´ul egy elem ismeretlen ´rt´keit pr´b´ljuk el˝rejelezni az ismert ´rt´kek ´s a felt´rt e a e e o a o e e e a tud´s alapj´n. a a N´gy fontos elv´r´sunk van a megszerzett tud´ssal kapcsolatban : (1) legyen k¨nnyen e aa a o ´rthet˝, (2) ´rv´nyes, (3) hasznos ´s (4) ujszer˝ . Az ´rv´nyess´g eld¨nt´se a ter¨ let szak´rt˝je e o e e e ´ u e e e o e u e o mellett az adatb´ny´sz (esetleg statisztikus) feladata is. El˝fordulhat, hogy helyes modellt a a o adtunk, az algoritmus is j´l m˝ k¨d¨tt, m´gis a kinyert szab´ly nem fedi a val´s´got. Bonfero u o o e a oa roni t´tele arra ﬁgyelmeztet benn¨ nket, hogy amennyiben a lehets´ges k¨vetkeztet´sek sz´ma e u e o e a t´ l nagy, akkor egyes k¨vetkeztet´sek t´nyleges val´s´gtartalom n´lk¨ l igaznak mutatkoznak, u o e e oa e u tiszt´n statisztikai megfontol´sok alapj´n. Az egyik legjobb p´lda a val´s´gtartalom n´lk¨ li a a a e oa e u szab´ly kinyer´s´re az al´bbi megt¨rt´nt eset. Amerik´ban a Dow Jones atlag becsl´s´hez kea ee a o e a ´ ee resni kezdt´k azt a term´ket, amely ar´nak alakul´sa legink´bb hasonl´ e e ´a a a ıtott a Dow Jones atlag ´ alakul´s´hoz. A kapott term´k a bangladesi gyapot volt. aa e

´ 1. FEJEZET. BEVEZETES

11

Az adatok illetve a kinyert inform´ci´k megjelen´ es´nek m´dja legal´bb annyira fontos, a o ıt´ e o a mint az osszef¨ gg´sek meghat´roz´sa. A v´gfelhaszn´l´kat (akik altal´ban vezet˝k) jobban ¨ u e a a e ao ´ a o megragadja egy j´l elk´sz´ o e ıtett abra, mint k¨ l¨nb¨z˝ matematikai strukt´ r´k nyers t´lal´sa. A ´ uo o o ua a a megjelen´ es teh´t fontos r´sze az adatb´ny´szatnak. Ezt j´l igazolja, hogy nagy sikert k¨nyıt´ a e a a o o velnek el az olyan adatb´ny´szati szoftverek, amelyek adatb´ny´szati algoritmusokat nem is a a a a futtatnak, puszt´n az adatokat jelen´ meg intelligens m´don (h´romdimenzi´s, sz´ a ıtik o a o ınes, forgathat´ abr´k). Ezekn´l a rendszerekn´l az osszef¨ gg´seket, mint´zatokat, k¨z¨s tulajdons´ggal o´ a e e ¨ u e a o o a rendelkez˝ csoportokat maguk a felhaszn´l´k veszik ´szre. Az adatb´ny´szati szoftverekr˝l o ao e a a o r´szletesebben a 15. fejezetben olvashatunk. e

1.3. Adatb´ny´szat kontra statisztika a a
Neh´z deﬁni´lni, hogy egy feladat ´s annak megold´sa mikor tartozik a statisztie a e a ka ´s mikor az adatb´ny´szat fels´gter¨ lete al´. A statisztika t¨bb hangs´ lyt fektet hie a a e u a o u pot´zisek vizsg´lat´ra, m´ az adatb´ny´szatban a hipot´zisek megtal´l´s´nak m´dja all a e a a ıg a a e aa a o ´ k¨z´ppontban. Az adatb´ny´szat egy gyakorlatorient´lt ter¨ let, kevesebb s´ lyt kapnak (sajnos) o e a a a u u az elm´leti elemz´sek. Viszont k¨zponti k´rd´s egy algoritmus fut´si ideje ´s mem´riaig´nye. e e o e e a e o e Az adatb´ny´szati algoritmusok bemutat´sa sor´n kit´r¨ nk az adatstrukt´ r´lis ´s ak´r implea a a a eu ua e a ment´ci´s k´rd´sekre is. a o e e Sok kutat´ az adatb´ny´szatot nem k¨ l¨nb¨zteti meg a g´pi tanul´st´l. Elv´gre a g´pi tao a a uo o e a o e e nul´sn´l is adatok alapj´n tanul meg egy koncepci´t a g´p. Cinikusok szerint az adatb´ny´szat a a a o e a a nem m´s, mint statisztika plusz egy kis marketing. Val´ban, nincs ´les hat´r k¨zt¨ k. Ugy a o e a o u ´ altal´ban besz´lhet¨ nk adat elemz˝ technik´kr´l. Egyes adat elemz˝ technik´kat ink´bb ´ a e u o a o o a a adatb´ny´szati m´dszernek mondunk, m´sokat pedig a statisztik´hoz vagy a g´pi tanul´shoz a a o a a e a sorolunk. A 20. sz´zad m´sodik fel´t˝l egyre jellemz˝bb a tudom´nyra, hogy bizonyos klasszikus a a eo o a elm´letet kiragad ´s uj kutat´si ter¨ letnek ki´ltj´k ki. Ugyan´ van ezzel a marketing ; ugyanazt e e ´ a u a a ıgy a term´ket egyszer csak uj, hangzatosabb n´vvel kezdik el ´rt´kes´ e ´ e e e ıteni. A tudom´nyban is a a kutat´si feladatokat el kell adni a p´ly´zatokat b´ al´ zs˝ riknek ´s az uj n´vvel ell´tott a a a ır´ o u e ´ e a tudom´nyter¨ let uj ir´nyokat sugall ; az uj ir´nyzatok ´s ´lbeli kutat´sok pedig nagy t´mogat´st a u ´ a ´ a e e a a a kapnak. Ez a t´ny jelent˝sen hozz´j´rult az adatb´ny´szat elterjed´s´hez ´s az egyes adatelemz˝ e o aa a a ee e o feladatok ”adatb´ny´szati” c´ evel val´ ell´t´s´hoz. a a ımk´ o aaa Adatb´ny´szathoz soroljuk a klaszterz´s, oszt´lyoz´s, asszoci´ci´s szab´lykinyer´s ´s az a a e a a a o a e e id˝sorelemz´s nem klasszikus (pl. regresszi´sz´m´ as, sim´ as) feladatait. A k¨vetkez˝kben o e o a ıt´ ıt´ o o n´h´ny p´ld´n kereszt¨ l szeml´ltj¨ k az adatb´ny´szat ´s a statisztika k¨z¨tti k¨ l¨nbs´get ´s e a e a u e u a a e o o uo e e egyben a k´t ter¨ let rokons´g´t is [30]. e u a a I. Tegy¨ k fel, hogy egy adatb´zisban sokmilli´ ember DNS-szekvenci´it ´s tulajdons´gait u a o a e a t´roljuk. Egy jellegzetes statisztikai k´rd´s lehet az, hogy p´ld´ul a k´k szem˝ embea e e e a e u rek mekkora r´sz´re jellemz˝ egy adott DNS-szekvencia. Term´szetesen olyan k´rd´st e e o e e e is feltehet¨ nk, melynek megv´laszol´sa enn´l kiﬁnomultabb eszk¨zt´rat ig´nyel : ha azt u a a e o a e szeretn´nk tudni, van-e szigniﬁk´ns f¨ gg´s egy adott DNS-szekvencia megl´te ´s a e a u e e e k´k szem” tulajdons´g k¨z¨tt, statisztikai pr´b´t alkalmazhatunk ennek eld¨nt´s´re. e a o o o a o ee ” Egy adatb´ny´sz nem k´rdezne r´ egy konkr´t szekvencia ´s egy konkr´t tulajdons´g a a e a e e e a k¨z¨tti osszef¨ gg´sre, hanem egy altal´nosabb k´rd´st tenne fel, p´ld´ul azt, hogy mio o ¨ u e ´ a e e e a

´ 1. FEJEZET. BEVEZETES

12

1.4. abra. Egy jellegzetes adatb´ny´szati feladat : DNS-szekvenci´k elemz´se ´ a a a e

lyen osszef¨ gg´s van a tulajdons´gok ´s szekvenci´k k¨z¨tt, melyik tulajdons´g´rt melyik ¨ u e a e a o o a e szekvencia felel˝s ? o II. Egy m´sik p´lda az adatb´ny´szat ´s statisztika k¨z¨tti k¨ l¨nbs´gre az al´bbi : egy statisza e a a e o o uo e a tikai elemz´s sor´n megvizsg´lhatjuk, hogy a n˝k illetve f´rﬁak h´ny sz´zal´ka doh´nyzik, e a a o e a a e a fogyaszt rendszeresen nagy mennyis´gben alkoholt, van-e szigniﬁk´ns elt´r´s a k´t csoport e a ee e k¨z¨tt. Egy adatb´ny´szati elemz´s sor´n itt is altal´nosabb k´rd´st tenn´nk fel, p´ld´ul o o a a e a ´ a e e e e a azt, hogy milyen jellegzetes csoportok vannak az alkoholfogyaszt´sra ´s doh´nyz´sra a e a a n´zve ? Teh´t azt nem mondjuk meg el˝re, hogy az egyik csoportba a n˝k, a m´sikba e a o o a pedig a f´rﬁak tartoznak. Az adatb´ny´sz feladata, hogy ugy csoportos´ az embereket e a a ´ ıtsa (rekordokat), hogy a hasonl´k egy csoportba, a k¨ l¨nb¨z˝k pedig k¨ l¨nb¨z˝ csoportba o uo o o uo o o ker¨ ljenek. (Ez egy klaszterez´si feladat.) Az adatb´ny´szatban az ilyen feladatokat nem u e a a hosszas emberi munka ´s intu´ o ar´n oldjuk meg, hanem t¨reksz¨ nk a min´l nagyobb e ıci´ ´ a o u e fok´ automatiz´l´sra kiﬁnomult szoftverek alkalmaz´s´val. Eredm´nyk´nt k¨nnyen lehet, u aa aa e e o hogy nem a nemek szerinti csoportos´ ast kapjuk, hanem egy olyat, melyben ugyanazon ıt´ csoportokba f´rﬁak ´s n˝k is ker¨ ltek, akik — egy´b tulajdons´gaik alapj´n — hasonl´ak. 4 e e o u e a a o III. Az el˝bbi p´ld´ban term´szetesen m´s ir´nyba is altal´nos´ o e a e a a ´ a ıthatjuk” a statisztikai elemz´s e ” sor´n feltett k´rd´s¨ nket : lehet, hogy arra vagyunk k´ ancsiak, hogy mi a k¨ l¨nbs´g a e eu ıv´ uo e a f´rﬁak ´s a n˝k k¨z¨tt. Ismerj¨ k teh´t a k´t csoportot, de nem tudjuk, hogy mely e e o o o u a e tulajdons´gok vagy tulajdons´gkombin´ci´k jellemz˝ek egy-egy csoportra. Ekkor egy a a a o o
Ahhoz, hogy egy ilyen elemz´s sikeres legyen, nagyon fontos a hasonl´s´gi m´rt´k megfelel˝ megv´laszt´sa, e oa e e o a a valamint az elemz´sbe bevont attrib´tumok (adatt´bla-oszlopok) ugyes” kiv´laszt´sa. Ha p´ld´ul az alkohole u a ¨ a a e a ” fogyaszt´sra ´s doh´nyz´sra vonatkoz´ adatok mellett t´l sok” tov´bbi attrib´tumot vonunk be a vizsg´latba, a e a a o u a u a ” akkor lehet, hogy a csoportos´ as nem az alkoholfogyaszt´sra ´s doh´nyz´sra vonatkoz´ jellegzetes csoportokat ıt´ a e a a o ´ a tartalmazza, hanem altal´nos” csoportokat kapunk. ”
4

´ 1. FEJEZET. BEVEZETES

13

1.5. abra. D¨nt´si fa : n˝k ´s f´rﬁak k¨z¨tti k¨ l¨nbs´gek a Semmelweis Egyetem hallgat´inak ´ o e o e e o o uo e o k¨r´ben v´gzett felm´r´s alapj´n. oe e ee a oszt´lyoz´si feladattal allunk szemben, a csoportokat oszt´lyoknak nevezz¨ k. Ezt a a a ´ a u k´rd´st egy´bk´nt fel is tett¨ k a Semmelweis Egyetem hallgat´inak k¨r´ben v´gzett egyik e e e e u o oe e felm´r´s adatb´zis´n. Az eredm´ny az 1.5. abr´n l´that´. Ez egy d¨nt´si fa. A levelek az ee a a e ´ a a o o e oszt´lyoknak (n˝k illetve f´rﬁak) felelnek meg. A fa k¨zb¨ ls˝ csom´pontjaiban egy-egy a o e o u o o attrib´ tum (adatt´blabeli oszlop) neve l´that´. A fa egy csom´pontj´b´l kiindul´ agak az u a a o o a o o´ adott csom´ponthoz tartoz´ attrib´ tum egy-egy lehets´ges ´rt´k´nek felelnek meg. Egy o o u e e e e d¨nt´si fa azt mutatja meg, hogy ha nem ismern´nk, hogy egy rekord melyik oszt´lyba o e e a tartozik, akkor hogyan d¨nthetn´nk ezt el. P´ld´ul a fogamz´sg´tl´t szed˝ hallgat´k n˝k o e e a a a o o o o (pontosabban : azon rekordok, amelyek FOGAMZASGA attrib´ tuma 1” ´rt´k˝ , a n˝i u e e u o ” 5 hallgat´k oszt´ly´ba tartoznak). o a a

1.4. Sikeres alkalmaz´sok a
Az adat b´ny´szata” eredetileg statisztikusok altal haszn´lt kifejez´s, az adatok nem a a ´ a e ” kell˝k´ppen megalapozott felhaszn´l´s´ra, amely sor´n valaki helytelen k¨vetkeztet´st von le. o e aa a a o e Igaz ugyanis, hogy tetsz˝leges adathalmazban felfedezhet¨ nk valamilyen strukt´ r´t, ha el´g o u ua e sok´ig n´zz¨ k az adatot. Ism´t utalunk a lehets´ges k¨vetkeztet´sek nagy sz´m´b´l ered˝ a e u e e o e a a o o vesz´lyre. A helytelen k¨vetkeztet´sre az egyik legh´ e o e ıresebb p´lda az al´bbi : Az 50-es ´vekben e a e
A d¨nt´si fa ´p´ esekor altal´ban nem k¨vetelm´ny, hogy egy lev´lbeli osszes rekord ugyanazon oszt´lyba o e e ıt´ ´ a o e e ¨ a tartozzon, el´g, ha nagy r´sz¨k” azonos oszt´lyba tartozik. Ebben a konkr´t p´ld´ban az osszes fogamz´sg´tl´t e e u a e e a ¨ a a o ” szed˝ hallgat´ n˝ volt. o o o
5

´ 1. FEJEZET. BEVEZETES

14

David Rhine parapszichol´gus di´kokat vizsg´lt meg azzal a c´llal, hogy parapszichol´giai o a a e o k´pess´ggel rendelkez˝ket tal´ljon. Minden egyes di´knak 10 lefedett k´rtya sz´ et kellett mege e o a a a ın´ tippelne (piros vagy fekete). A k´ erlet eredm´nyek´nt bejelentette, hogy a di´kok 0,1%-a paıs´ e e a rapszichol´giai k´pess´ggel rendelkezik (a teljesen v´letlenszer˝ en tippel˝k k¨z¨tt a helyesen o e e e u o o o tippel˝k v´rhat´ sz´ma statisztikailag nagyj´b´l ennyi, hiszen annak val´sz´ us´ge, hogy valao a o a a o o ın˝ e 1 ki mind a t´ k´rty´t eltal´lja 21 = 1024 ). Ezekkel a di´kokkal ujra elv´gezte a k´ erletet, am ız a a a a ´ e ıs´ ´ 10 ez´ ttal a di´kok eredm´nye teljesen atlagos volt. Rhine k¨vetkeztet´se szerint az, aki parapsziu a e ´ o e chol´giai k´pess´ggel rendelkezik ´s err˝l nem tud, elveszti eme k´pess´g´t, miut´n tudom´st o e e e o e e e a a szerez r´la. o A fenti p´lda ellen´re m´ra az adatb´ny´szat sz´ elvesztette jelent´s´nek negat´ tartalm´t, e e a a a o ee ıv a a sz´mos sikeres alkalmaz´snak k¨sz¨nhet˝en. A teljess´g ig´nye n´lk¨ l felsorolunk bel˝l¨ k a a o o o e e e u ou n´h´nyat. e a – A bankok egyre gyakrabban alkalmaznak olyan automatikusan el˝all´ o´ ıtott d¨nt´si f´kat, o e a amelyek alapj´n egy program javaslatot tesz egy hitel meg´ el´s´r˝l. Ezt a k´relmez˝k a ıt´ e e o e o szem´lyes, tov´bb´ el˝zetes hitelfelv´teli ´s t¨rleszt´si adatai alapj´n teszi (oszt´lyoz´s) e a a o e e o e a a a [167]. Tesztek p´ld´ul igazolt´k, hogy a hitelb´ alat min˝s´ge javult az USA-ban, amikor e a a ır´ oe a bankok att´rtek a k¨telez˝en alkalmazott, ´ asban r¨gz´ ´ e o o ır´ o ıtett szab´lyok alkalmaz´s´ra a aa [167]. Ezeket a szab´lyokat pedig az adatb´ny´szat seg´ eg´vel all´ a a a ıts´ e ´ ıtott´k ossze. a ¨ – A v´s´rl´i szok´sok felder´ ese szupermarketekben, illetve nagy vev˝k¨rrel rendelkez˝ aa o a ıt´ o o o aruh´zakban hasznos lehet az aruh´z term´kt´rk´p´nek kialak´ as´n´l, akci´k, elad´shelyi ´ a ´ a e e e e ıt´ a a o a rekl´mok (Point of Sales, Point of Purchase), le´raz´sok szervez´s´n´l. . . (asszoci´ci´s a a a ee e a o szab´lyok). a – Az ember genot´ anak elemz´s´hez a g´nek nagy sz´ma miatt szint´n adatb´ny´szati ıpus´ ee e a e a a algoritmusok sz¨ ks´gesek. Az eddigi sikeres k´ erletek c´lja olyan g´ncsoportok felt´r´sa u e ıs´ e e aa volt, amelyek a cukorbetegs´g bizonyos v´ltozatai´rt felel˝sek. A teljes emberi g´nrendszer e a e o e felt´r´s´val ez a ter¨ let egyre fontosabb lesz. aaa u – Az on-line aruh´zak a j¨v˝ben egyre elfogadottabbak ´s elterjedtebbek lesznek. Mivel az ´ a o o e on-line kereskedelemben nem haszn´lhat´ak a megszokott szem´lyes marketing eszk¨z¨k a a o e o o forgalom (´s a proﬁt) szem´lyre szabott v´s´rl´si aj´nlatokkal n¨velhet˝. Az aj´nlatokat e e aa a a o o a az eddigi v´s´rl´si adatok ´s a rendelkez´sre all´ demogr´ﬁai adatok elemz´se alapj´n aa a e e ´ o a e a tehetj¨ k meg (epiz´dkutat´s, asszoci´ci´s szab´lyok). u o a a o a – A csillag´szatban az ´gitestek ori´si sz´ma miatt a hagyom´nyos klaszterez˝ algoritmusok a e ´ a a a o m´g a mai sz´m´ asi kapacit´sok mellett sem k´pesek racion´lis id˝n bel¨ l k¨ l¨nbs´get e a ıt´ a e a o u uo e tenni galaxisok, k¨zeli csillagok ´s m´s ´gi objektumok k¨z¨tt. Az ujabb, kiﬁnomultabb o e a e o o ´ algoritmusok fut´si ideje j´val kevesebb, ami lehet˝v´ teszi a klaszterez´st (klaszterez´s). a o o e e e – Utaz´s szervez´ssel kapcsolatos mint´k kinyer´s´vel hat´konyabban (´s ennek k¨veta e a ee e e o kezt´ben nagyobb nyeres´ggel) megszervezhet˝k a nagy k¨lts´gfaktor´ t´nyez˝k, pl. e e o o e u e o sz´llodai szob´k, rep¨ l˝jegyek le´raz´sa, vagy aremel´se (epiz´dkutat´s, gyakori minta). a a uo a a ´ e o a – Kiﬁnomult gy´rt´si folyamatok sor´n gyakran a be´ll´ asi param´terek ﬁnomhangol´s´ra a a a a ıt´ e aa van sz¨ ks´g. A k˝olaj ´s a f¨ldg´z sz´tv´laszt´sa az olajﬁnom´ as sz¨ ks´ges el˝felt´tele, u e o e o a e a a ıt´ u e o e de az elv´laszt´si folyamat kontroll´l´sa nem k¨nny˝ feladat. A British Petroleum a a aa o u

´ 1. FEJEZET. BEVEZETES

15

olajv´llalat a g´pi tanul´s technik´j´t haszn´lta a param´ter-be´ll´ as szab´lyainak mega e a aa a e a ıt´ a alkot´s´ra. Most ez t´ percet vesz ig´nybe, m´ kor´bban szak´rt˝k t¨bb, mint egy napi aa ız e ıg a e o o munk´j´t vette ig´nybe. aa e – A Westinghouse c´g nukle´ris t¨ zel˝anyag-cell´k gy´rt´sa sor´n utk¨z¨tt probl´m´kba, ´s e a u o a a a a ¨ o o e a e szint´n a g´pi tanul´s seg´ eg´vel hoztak l´tre folyamatkontroll´l´si szab´lyokat. Ezzel 10 e e a ıts´ e e aa a milli´ USD-t siker¨ lt megsp´rolniuk az 1984-es ´vben. A Tenessee allambeli R.R. Donelly o u o e ´ nyomdaipari c´g ugyanezt az otletet alkalmazta a retograv´ r nyomdag´pek ir´ny´ as´ra, e ¨ u e a ıt´ a ´ cs¨kkentve a hib´s param´ter-be´ll´ asok k¨vetkezt´ben keletkez˝ selejtes nyomatok ıgy o a e a ıt´ o e o sz´m´t ´vi 500-r´l 30-ra. a a e o – A v´ ol˝ programok az ismert v´ ırus¨ o ırusokat lenyomataik alapj´n detekt´lj´k, az ismeretlea a a neket pedig t¨bbnyire valamilyen heurisztikus m´don pr´b´lj´k kisz˝ rni. Oszt´lyoz´ alo o o a a u a o goritmusok felhaszn´l´s´val az ismert v´ aa a ırusok tulajdons´gai alapj´n olyan modellt lehet a a fel´ll´ a ıtani, ami j´l le´ a v´ o ırja ırusok tulajdons´gait [151, 152]. A modellt sikeresen alkala mazt´k uj ismeretlen v´ a ´ ırusok kisz˝ r´s´re (oszt´lyoz´s). uee a a Tov´bbi esettanulm´nyokr´l a 15.3.2 r´szben olvashatunk. a a o e A fentiekben a sikeres alkalmaz´sokat ismertett¨ k. A k¨vetkez˝ben tov´bbi alkalmaz´sokat a u o o a a mutatunk be. C´lunk, hogy szeml´ltess¨ k a diszcipl´ kiterjedts´g´t ´s aktu´lis all´s´t. e e u ına e e e a ´ aa – Az emberi mesters´ges megterm´keny´ es sor´n petesejtek sokas´g´t gy˝ jtik ossze a n˝i e e ıt´ a a a u ¨ o petef´szekb˝l. Ezeket a partner, vagy donor sperm´ival megterm´keny´ e o a e ıtve sz´mos embri´ a o fejl˝dik ki. K¨z¨ l¨ k n´h´nyat kiv´lasztanak, ´s az anyam´hbe ultetnek. A probl´m´t a o o uu e a a e e ¨ e a legink´bb ´letk´pes, legjobb t´ l´l´si es´lyekkel rendelkez˝ embri´k kiv´laszt´sa jelenti. a e e uee e o o a a A kiv´laszt´s az embri´k k¨r¨ lbel¨ l hatvan r¨gz´ a a o ou u o ıtett jellegzetess´g´n – a magzat more e fol´gi´j´n, oocita-, t¨ sz˝sejt- ´s spermamint´kon – alapszik. A jellemz˝k sz´moss´ga o aa u o e a o a a elegend˝en nagy ahhoz, hogy t´ l bonyolult legyen az embriol´gusoknak valamennyit o u o p´rhuzamosan megbecs¨ lni ´s osszef¨ gg´st tal´lni a m´ ltb´li esetek kezdeti jellemz˝i ´s a u e ¨ u e a u e o e azok kimenetele k¨z¨tt, azaz, hogy az embri´b´l v´g¨ l ´letk´pes csecsem˝ sz¨ letett-e o o o o e u e e o u vagy sem. Egy angol kutat´si projekt arra ir´nyul´ kutat´st folytat, hogy hogyan lehet a a a o a kiv´laszt´st g´pi tanul´ssal – az embri´k r¨gz´ a a e a o o ıtett adatait tan´ ohalmazk´nt haszn´lva – ıt´ e a megval´s´ o ıtani. ´ e – Az Uj-Z´landi tejgazdas´goknak minden ´vben kem´ny uzleti d¨nt´st kell meghozniuk : a e e ¨ o e ki kell v´lasztani, hogy a szarvasmarha allom´ny mely egyedeit tartj´k meg, ´s melyeket a ´ a a e ´rt´kes´ v´g´hidaknak. Tipikusan minden gazdas´g ot¨dik egyede ker¨ l m´sz´rsz´kre a e e ıtik a o a ¨o u e a e fej´si id´ny v´g´n, ahogy az ´lelmez´si tartal´kok kiapadnak. A d¨nt´st az egyes p´ld´nyok e e e e e e e o e e a teny´szadatai ´s m´ ltb´li tejtermel´kenys´gi mutat´ja befoly´solja. Tov´bbi kritikus fake e u e e e o a a torok az egyed kora (egy p´ld´ny kb. 8 ´vesen ´ri el produkt´ korszak´nak v´g´t), e a e e ıv a e e k´rt¨rt´nete, sz¨ l´si komplik´ci´k, nemk´ anatos jellemvon´sok (agresszivit´s, ker´ es o o e ue a o ıv´ a a ıt´ atugr´sa), illetve az, hogy a k¨vetkez˝ szezonban vemhes-e. T¨bb milli´ szarvasmar´ a o o o o ha egyedenk´nt t¨bb mint 700 tulajdons´g´t r¨gz´ ek az ´vek sor´n. A kutat´k azt e o a a o ıtett´ e a o vizsg´lj´k, hogyan haszn´lhat´ fel a g´pi tanul´s annak meg´llap´ as´ra, hogy a sikeres a a a o e a a ıt´ a farmerek mely faktorokat veszik sz´m´ asba a szelekt´l´sn´l. Ezzel nem a d¨nt´si folyamat a ıt´ aa a o e g´pes´ ese a c´ljuk, hanem a sikerstrat´gia kitanul´sa, ´s annak k¨zkinccs´ t´tele. e ıt´ e e a e o e e

´ 1. FEJEZET. BEVEZETES

16

1.5. Szabv´nyok a
Kezdetben sok adatb´ny´szati projektre jellemz˝ volt, hogy az adatb´ny´szok megkapt´k a a o a a a az adatokat ´s n´mi inform´ci´t az alkalmaz´si ter¨ letr˝l ´s cser´be v´rt´k t˝l¨ k a kincset e e a o a u o e e a a ou ´r˝ inform´ci´kat. A szoros egy¨ ttm˝ k¨d´s hi´nya azonban csak olyan inform´ci´khoz vezetett eo a o u u o e a a o amelyekkel az alkalmaz´si ter¨ let embererei nem sok mindent tudtak kezdeni. Az adatb´ny´szat a u a a elterjed´s´vel (´s a min˝s´gbiztos´ asi elv´r´sokkal) fell´pett az ig´ny, hogy legyen egy szabv´ny, ee e oe ıt´ aa e e a egy utmutat´ az adatb´ny´szati projektek lebonyol´ as´r´l. ´ sz¨ letett meg a CRISP-DM ´ o a a ıt´ a o Igy u (CRoss Industry Standard Process for Data Mining) [34], amely adatb´ny´szati eszk¨zt˝l ´s a a o o e felhaszn´l´si ter¨ lett˝l f¨ ggetlen¨ l le´ aa u o u u ırja, hogy mik´nt kellene kin´znie egy adatb´ny´szati proe e a a jektnek, illetve ismerteti a kulcsfontoss´g´ l´p´seket, ´s a potenci´lis vesz´lyeket. A CRISP-DM a u e e e a e szerint a tud´skinyer´s az 1.6 abra szerinti m´don j¨n l´tre. a e ´ o o e

1.6. abra. A tud´sfelt´r´s folyamata a CRISP-DM szerint ´ a aa Az adatb´ny´szati folyamat szabv´nyos´ asa mellett egyre nagyobb az ig´ny a folyamat a a a ıt´ e egyes l´p´seiben felmer¨ l˝ megold´sok, probl´m´k, eszk¨z¨k szabv´nyos´ as´ra. Ezek k¨z¨ l a e e uo a e a o o a ıt´ a o u legismertebbek : – az XML alap´ PMML (Predictive Modeling Markup Language), amely az adatb´ny´szati u a a eredm´nyek szabv´nyos le´ as´t szolg´lja, e a ır´ a a – a Microsoft analysis szerver adatb´ny´szati funkci´kkal kib˝v´ a a o o ıtett szabv´nya (OLE DB a for data mining),

´ 1. FEJEZET. BEVEZETES

17

– az ISO t¨rekv´sei multim´dia ´s alkalmaz´s speciﬁkus SQL t´ o e e e a ıpusok ´s a hozz´ tartoz´ e a o elj´r´sok deﬁni´l´s´ra (SQL/MM) aa aa a – java adatb´ny´szati API (JDMAPI) a a

1.6. Adatb´ny´szati rendszer architekt´ r´ja a a u a
Egy adatb´ny´szati rendszernek kapcsolatban kell lennie az adatb´zissal, a felhaszn´l´val a a a ao ´s esetleg valami tud´salap´ rendszerrel. Ezek alapj´n egy tipikus adatb´ny´szati architekt´ ra e a u a a a u az 1.7. abr´n l´that´. ´ a a o

grafikus felhasználói felület

minta kiértékelés

adatbányász motor

tudás bázis

Adatbázis vagy adattárház szerver adattisztítás adatintegráció " szurés

adatbázis

adat− tárház

1.7. abra. Tipikus adatb´ny´szati rendszer architekt´ r´ja ´ a a ua Adatb´zis, adatt´rh´z vagy m´s inform´ci´ rakt´r : Itt tal´lhat´k a t´nyleges adatok, a a a a a o a a o e ami lehet egy adatb´zis, vagy adatt´rh´z, ak´r egy munkalap vagy b´rmilyen t´rolt ina a a a a a form´ci´. Az adattiszt´ as ´s integr´ci´ k¨zvetlen¨ l az adatokon is elv´gezhet˝. a o ıt´ e a o o u e o Adatb´zis vagy adatt´rh´z szerver : A szerver felel˝s a felhaszn´l´ altal k´rt adat a a a o ao ´ e k´zbes´ es´´rt. e ıt´ ee Tud´s b´zis : A ter¨ letre jellemz˝, valamilyen szinten formaliz´lhat´ tud´s tal´lhat´ itt. Fona a u o a o a a o tos szerepe lehet ennek a keres´si t´r sz˝ k´ es´n´l, a kinyert mint´k ´rdekess´g´nek mege e u ıt´ e e a e e e hat´roz´s´n´l, k¨ l¨nb¨z˝ param´terek ´s k¨ sz¨bsz´mok meghat´roz´s´n´l. a a a a uo o o e e u o a a aa a Adatb´ny´sz motor : Az adatb´ny´sz motorban futnak a k¨ l¨nb¨z˝ adatb´ny´szati algorita a a a uo o o a a musok.

´ 1. FEJEZET. BEVEZETES

18

Minta ki´rt´kel˝ modul : Ez a modul felel˝s a kinyert minta vagy osszef¨ gg´sek e e o o ¨ u e ki´rt´kel´s´´rt a ter¨ letre jellemz˝ ´rdekess´gi mutat´k alapj´n. Sokszor l´tni fogjuk, e e e ee u o e e o a a hogy min´l jobban egybe tudjuk ´p´ e e ıteni az adatb´ny´szatot a minta ki´rt´kel´s´vel, ann´l a a e e ee a hat´konyabb ´s gyorsabb lehet a tud´sfelt´r´s. e e a aa Graﬁkus felhaszn´l´i fel¨let : Itt zajlik a kommunik´ci´ a felhaszn´l´ ´s az adatb´ny´szati ao u a o aoe a a rendszer k¨z¨tt. A felhaszn´l´ itt adhatja meg, hogy melyik adatb´zisban milyen jelo o ao a leg˝ osszef¨ gg´seket keres ´s ezen a r´tegen kereszt¨ l l´thatja a v´geredm´nyt. Az u ¨ u e e e u a e e osszef¨ gg´sek atl´that´, ´rtelmes t´lal´sa rendk´ ul fontos, hiszen ennek hi´nya elriaszt¨ u e ´ a o e a a ıv¨ a hatja a felhaszn´l´t az adatb´ny´szatt´l. ao a a o

1.7. Adatb´ny´szat ´s az etika a a e
Az internet sz´lesk¨r˝ terjed´s´vel, ´s a modern technik´k megjelen´s´vel a jogi szab´lyoz´s e ou ee e a ee a a sokszor k´ptelen l´p´st tartani. Ilyen ter¨ let az adatb´ny´szat is, mint felfut´ tudom´ny´g. e e e u a a o a a B´r a szem´lyes adatok v´delm´r˝l m´r sz¨ lettek jogszab´lyok, ezek nem minden esetben a e e eo a u a teljesk¨r˝ ek, illetve m´g ´ is sok etikai probl´m´t hagynak nyitva. Elmondhat´, hogy a ou e ıgy e a o t¨rv´ny nagyr´szt azt szab´lyozza, ami egyben etik´tlan is, ´ ebben a r´szben 6 ´lj¨ nk azo e e a a ıgy e e u zal a felt´telez´ssel, hogy minden t¨rv´nyesen t¨rt´nik az adatb´ny´szati projekt sor´n. e e o e o e a a a El˝sz¨r is sokak altal kifog´solt ter¨ let az adatok begy˝ jt´se. A mai ember l´pten-nyomon o o ´ a u u e e inform´ci´kat sz´r sz´t mag´r´l : minden uzletben kamer´k vannak elhelyezve, sz¨rf¨l az intera o o e ao ¨ a o o neten, b´rhol haszn´lhat hitelk´rty´t, t¨rzsv´s´rl´i k´rty´t. Ezen tev´kenys´gek sor´n rengeteg a a a a o aa o a a e e a adatb´zisban hagy mag´r´l inform´ci´t. A szem´lyes inform´ci´k begy˝ jt´s´n´l - a t¨rv´ny szea ao a o e a o u ee e o e rint - az ´rintetteket t´j´koztatni kell arr´l, hogy ki, milyen c´lb´l fogja azt feldolgozni. Ezt a e ae o e o c´lt az adatb´ny´szatn´l nem lehet el˝re azonos´ e a a a o ıtani, mert az elemz´s el˝tt nem tudjuk mege o mondani, hogy milyen inform´ci´kat fogunk kinyerni az adatb´zisb´l, ´s n´h´ny esetben m´g a o a o e e a e azt sem tudjuk garant´lni, hogy az eredm´ny egy´ltal´n felhaszn´l´sra ker¨ l. Ez is mutatja, a e a a aa u hogy az adatok begy˝ jt´s´re uj szab´lyoz´sokat kellene alkotni. Erre egy lehets´ges megold´s, u ee ´ a a e a ha az ´rintett azt d¨ntheti el, hogy – altal´nosan – adatb´ny´szati c´lra felhaszn´lhat´ak-e e o ´ a a a e a o ´ az adatai. Erezhet˝ azonban, hogy am´ az ugyf´l nincs tiszt´ban azzal, hogy az adatokb´l o ıg ¨ e a o mire tudnak egy´ltal´n k¨vetkeztetni, ´s mire tudj´k ezt a k¨vetkeztet´st felhaszn´lni, addig a a o e a o e a kev´sb´ fog ´lni azzal a lehet˝s´g´vel, hogy letiltsa adatainak felhaszn´l´s´t vagy t´rol´s´t. Az e e e oe e aa a a aa pedig m´g nyilv´nval´bb, hogy a c´geknek nem all ´rdek¨ kben onk´nt megosztani ezeket az e a o e ´ e u ¨ e inform´ci´kat az ugyf´llel, vagy ak´r a versenyt´rsakkal [126]. a o ¨ e a a Az oszt´lyoz´si feladatok kapcs´n m´sfajta mor´lis probl´m´k is fell´phetnek : egyr´szt a a a a a e a e e mag´t a m´dszertant t´madj´k az ellenz˝i, m´sr´szt k¨nnyen felhaszn´lhat´ diszkrimin´ci´ra. a o a a o a e o a o a o Sokan azt a hozz´all´st tartj´k aggaszt´nak, hogy el˝zetes szem´lyes ismerets´g n´lk¨ l sorola´ a a o o e e e u janak be egy´neket bizonyos csoportokba. P´ld´ul az amerikai allampolg´rok egy felm´r´s sor´n e e a ´ a ee a kifog´solt´k a hitelb´ alatban bevezetett automatikus d¨nt´shoz´st, mert ugy ´rzik, ´ kev´sb´ a a ır´ o e a ´ e ıgy e e foglalkoznak vel¨ k, szem´lytelenebb´ v´lt a rendszer, csak egy adathalmazk´nt tekintenek r´juk. u e e a e a A szem´lyes ismerets´g n´lk¨ li besorol´s sor´n fenn´ll a vesz´lye, hogy rossz eredm´nyt ad e e e u a a a e e a rendszer, f˝k´nt, ha kev´s attrib´ tummal dolgozunk. Pr´b´ljuk meg p´ld´ul az embereket o e e u o a e a gyerek-feln˝tt csoportokba besorolni, a kor attrib´ tum ismerete n´lk¨ l. A legk´zenfekv˝bb mego u e u e o old´s a tests´ lyuk ´s testmagass´guk szerint oszt´lyozni oket. Ez a m´dszer viszont sok esetben a u e a a ˝ o
6

Ezt a r´szt Huczman Zsuzsanna ´ e ırta.

´ 1. FEJEZET. BEVEZETES

19

t´ves eredm´nyhez vezet. A diszkrimin´ci´nak az asszoci´ci´s szab´lyok kinyer´se adhat teret. e e a o a o a e ´ e Erz´keny adatokat – mint p´ld´ul a vall´s, faji hovatartoz´s, szexu´lis ir´nyults´g – tilos fele a a a a a a dolgozni, egy egyszer˝ adatb´ny´szati algoritmussal viszont nagyon k¨nnyen megoldhat´nak u a a o o t˝ nik a v´s´rl´i szok´sokb´l a nemi hovatartoz´s, vagy ak´r egy megfelel˝ k´rd˝´ eset´ben a u aa o a o a a o e oıv e faji hovatartoz´s meg´llap´ asa. Az, hogy ezek az adatok ne ker¨ ljenek felhaszn´l´sra, a projekt a a ıt´ u aa vezet˝j´nek felel˝ss´ge. Az el˝bb eml´ oe o e o ıtettek k´nyesebb” ter¨ letek, de bel´thatjuk, hogy m´r e u a a ” az is diszkrimin´ci´nak sz´m´ ha egy bizonyos v´s´rl´i csoportot el˝ny¨kh¨z juttatunk egy a o a ıt, aa o o o o olyannal szemben, amely sokkal kevesebb proﬁtot ´ er elemz´seink alapj´n. A pozit´ diszkriıg´ e a ıv min´ci´ra j´ p´lda, amikor a telefonszolg´ltat´k aj´nd´kot aj´nlanak fel uj el˝ﬁzet˝ik sz´m´ra a o o e a o a e a ´ o o a a [183]. Ugyanakkor Eur´p´ban az automatikus d¨nt´si f´k alkalmaz´sa a hitelb´ alatban pont a o a o e a a ır´ diszkrimin´ci´ kik¨ sz¨b¨l´se a rendszerb˝l, hiszen a jogszab´ly szerint a matematikai h´tter´t a o u o oe o a a e az ugyf´l k´r´s´re fel kell fedni. (Ez az USA-ban” p´ld´ul nem k¨teless´ge a banknak, ´ ¨ e eee e a o e ıgy ” lehet˝s´ge van diszkrimin´lni.) oe a Tov´bbi etikailag megk´rd˝jelezhet˝, ´rdekes felvet´sek : a e o o e e – A k¨ l¨nc pontok kezel´se egy m´sik adatb´ny´szati ter¨ let, ahol felmer¨ l, hogy jog´ban uo e a a a u u a all-e b´rkinek meghat´rozni, hogy mi tekinthet˝ norm´lis viselked´snek, illetve el˝ker¨ lhet ´ a a o a e o u a relativit´selm´letb˝l ismert t´tel : miszerint a megﬁgyelt rendszer viselked´se a megﬁa e o e e gyel´s t´ny´t˝l is megv´ltozik. e e eo a – Haz´nkban az adatb´ny´szatot – annak ara miatt – f˝k´nt a marketing ter¨ let´n a a a ´ o e u e haszn´lj´k fel : c´lzott rekl´mok k¨ ld´s´re (direkt marketing) ; az akci´s term´kek mega a e a u ee o e hat´roz´s´ra gyakran vett term´kcsoportok alapj´n ; uj tarifacsomagok bevezet´s´re. Fela aa e a ´ ee mer¨ l a k´rd´s, hogy a szem´lyes adatokat, amiket elvileg az´rt t´rolnak pl. telefonu e e e e a szolg´ltat´ eset´n, hogy sz´ml´zni tudjanak [165], etikus-e proﬁtszerz´sre haszn´lni ? a o e a a e a – ha egy adatot kivesznek egy adott adathalmazb´l - az egy´n k´r´s´re, - aminek m´rete o e eee e pl. a v´s´rl´i kosarakb´l val´ adatb´ny´szat eset´n ak´r 109 rekord is lehet, ett˝l m´g aa o o o a a e a o e az elemz´s elv´gezhet˝, ´s az egy´n ´rdekeit nem s´rti, de o is r´szese lesz a k¨vete e o e e e e ˝ e o kezm´nyeknek, pl. direkt-marketing aj´nlatokat kaphat. e a V´g¨ l k´t p´lda az adatb´ny´szat etikai vonatkoz´saira : e u e e a a a Az emberi DNS altal hordozott inform´ci´ kinyer´se ti´ a o e pikusan adatb´ny´szati feladat. Rendk´ ul ´rz´keny adatr´l a a ıv¨ e e o A kr´nikus fert˝z´sek deo o e ” l´v´n sz´, az adatb´zis, amivel eddig az adatb´ny´szok presszi´t e e o a a a o ´s e skizofr´ni´t e a dolgoztak, nem egy konkr´t szem´ly DNS szekvenci´j´t okozhatnak – all´tj´k n´met e e aa ´ ı a e tartalmazt´k, hanem t¨bb r¨videbb szakaszb´l all´ DNS- kutat´k.” a o o o ´ o o Forr´s : a http: l´ncokat. Nemr´giben viszont egy kutat´ el˝allt a saj´t //hvg.hu/egeszseg/20070512_ a e o o´ a DNS-szekvenci´j´nak kulcs´val, vagyis felfedte, hogy mi van depresszio_skizofrenia.aspx aa a belek´dolva. Eddig ez technikailag ´s t¨rv´nyesen nehezen o e o e volt megval´s´ o ıthat´. Bel´thatjuk, hogy nem sok ´rtelme van o a e vizsg´lni, hogy t¨bb t¨red´k DNS milyen inform´ci´t hordoz, hiszen pont azon lenne a hangs´ ly, a o o e a o u hogy l´tez˝ el˝fordul´sokat ´s osszef¨ gg´seket lehessen vizsg´lni [110]. A kutat´ ezzel a l´p´s´vel e o o a e ¨ u e a o e ee nagyban hozz´j´rult a DNS-szerkezet megismer´s´hez, p´ld´j´b´l l´thatjuk, hogy n´ha a priaa ee e aa o a e vacy felad´sa kell egy-egy eredm´ny el´r´s´hez. a e eee Adatb´ny´szati projektekben egy´bk´nt is gyakori, hogy az adathalmaz, amin az elemz´st a a e e e el kellene v´gezni, annyira titkos, vagy ´rz´keny adatokat tartalmaz, hogy a c´gek nem is adj´k e e e e a

´ 1. FEJEZET. BEVEZETES

20

ki a kez¨ kb˝l. Ilyenek pl. a t´vk¨zl´si v´llalatok vagy bankok adatai, amik a konkurencia u o a o e a sz´m´ra nagy ´rt´kkel b´ a a e e ırnak. Ezekben az esetekben megold´s lehet, hogy a c´g maga gener´l a a e a rendelkez´s´re all´ adatokb´l egy uj adatb´zist, - amiknek nyilv´n bizonyos k¨vetelm´nyeknek ee ´ o o ´ a a o e eleget kell tenni¨ k - ´s ezt kapja meg a kutat´csoport elemz´sre. Itt a c´g felel˝ss´ge, hogy u e o e e o e ellen˝rizze, hogy az eredeti adathalmazban ugyanazok az osszef¨ gg´sek fenn´llnak-e, mint a o ¨ u e a vizsg´lt adathalmazban. a A m´sik p´lda az adatb´ny´szat ´s az etika utk¨z´s´re az a szinte m´r ut´pisztikus projekt, a e a a e ¨ o ee a o amit a NASA ´s a Northwest Airlines ind´ e ıtott el : a Washington Times 2002 nyar´n sz´molt a a be egy uj inform´ci´s technol´giai megval´s´ asr´l : A k´t szervezet” olyan alkalmaz´st fej´ a o o o ıt´ o e a ” lesztett, ´s uzemeltet, amely k´pes el˝rejelezni, megj´solni az utasok v´rhat´ viselked´s´t a e ¨ e o o a o ee rep¨ l˝t´ren, illetve a rep¨ l˝n. A technol´gia alapja egy k¨ l¨nleges m˝ szer ´s egy pszichol´gusok uo e uo o uo u e o seg´ eg´vel k´sz´ ıts´ e e ıtett program otv¨z¨tt alkalmaz´sa nagy adatb´zisokon. A kapu k´pes ´rz´kelni ¨ o o a a e e e a rajta athalad´ szem´ly elektrom´gneses agyhull´mait, a sz´ ´ o e a a ıvritmus´t, a pislog´s´t ´s a a aa e testh˝m´rs´klet´t : gyakorlatilag egy szuper hazugs´gvizsg´l´” berendez´s. Ezeket az adatoo e e e a ao e ” kat analiz´lva ´s osszevetve k¨ l¨nb¨z˝ adatb´zisokkal, mint p´ld´ul b˝ n¨ gyi nyilv´ntart´ssal, a e ¨ uo o o a e a u u a a a g´p jelez, ha kock´zatot ´rz´kel. Ilyenkor a biztons´gi or¨k m´g m´rlegelhetnek, mint ahogy e a e e a ˝o e e egy´bk´nt is tenn´k, ´ a rendszert v´d˝k arra hivatkozhatnak, hogy csak d¨nt´st´mogat´st e e e ıgy e o o e a a v´geznek. Az is mellett¨ k sz´l, hogy az Egyes¨ lt Allamokban a rep¨ l˝tereken a titkos megﬁe u o u ´ uo gyel´s v´gz´se nem t¨rv´nybe utk¨z˝ cselekedet. Az USA-ban a szem´lyes adatok v´delm´re e e e o e ¨ o o e e e kisebb hangs´ lyt fektetnek a terrort´mad´sok ota. A lakoss´g elfogadta azt a n´zetet, hogy a u a a ´ a e biztons´guk ´rdek´ben aldozz´k fel a szem´lyes adataikat. a e e ´ a e

1.8. Az adatb´ny´szat felt´telei a a e
Tagadhatatlan, hogy a sikertelen adatb´ny´szati projektek sz´ma nagy, ´s az adatb´ny´szat a a a e a a nagyon sok esetben nem v´ltotta be a hozz´ f˝ z¨tt rem´nyeket. Ennek oka egyr´szr˝l a a u o e e o az adatb´ny´szati szakemberhi´ny (a j´ adatb´ny´szati szakember ritka, mint a feh´r a a a o a a e holl´), m´sr´szr˝l az, hogy alapvet˝ felt´telek nem teljes¨ ltek a projektek sor´n. A sikeres o a e o o e u a adatb´ny´szati projekt egyik legfontosabb felt´tele az adatb´ny´sz ´s a ter¨ let szak´rt˝j´nek a a e a a e u e oe szoros egy¨ ttm˝ k¨d´se. A tov´bbi felt´telek az al´bbiak : u u o e a e a Nagy mennyis´g˝ adat : A nagy mennyis´g˝ adat a kinyert szab´lyok statisztikai jee u e u a lent˝s´g´t n¨veli. Min´l nagyobb az adatmennyis´g, ann´l biztosabban tudjuk kiz´rni oe e o e e a a bizonyos osszef¨ gg´sek esetis´g´t, azaz ann´l kisebb az es´lye, hogy a tal´lt osszef¨ gg´s ¨ u e e e a e a ¨ u e csak a v´letlen eredm´nye. Sajnos sok adatot sok´ig tart feldolgozni, s˝t az algoritmusok e e a o egy jelent˝s r´sze ´rz´keny arra, hogy az adatb´zis elf´r-e a mem´ri´ban. o e e e a e o a Sok attrib´tum : Ha az objektumokat le´ o attrib´ tumok sz´ma kicsi, akkor hagyom´nyos u ır´ u a a eszk¨z¨kkel (graﬁkonok, egyszer˝ t´bl´zatok, kis dimenzi´s, forgathat´, sz´ o o u a a o o ınes abr´k, . . . ) ´ a is fel tudjuk t´rni a tud´st. Kev´s attrib´ tum eset´n a kinyerhet˝ tud´s sem lehet t´ l a a e u e o a u sokf´le. Az adatb´ny´szat ereje akkor mutatkozik meg, amikor az attrib´ tumsz´m olyan e a a u a nagy, hogy a hagyom´nyos m´dszereknek nincs es´ly¨ k. a o e u Tiszta adat : Az adatok j´ min˝s´ge az adatb´ny´szat egyik alapfelt´tele. A zajok, a hib´s o oe a a e a bejegyz´sek j´ esetben csak nehez´ e o ıtik az adatb´ny´szatot (p´ld´ul amikor ismerj¨ k az a a e a u adatokban tal´lhat´ zaj, ill. bizonytalans´g fok´t), rosszabb esetben azonban hamis a o a a

´ 1. FEJEZET. BEVEZETES

21

eredm´nyekhez vezetnek. Az ilyen rossz min˝s´g˝ adatokra remek p´lda haz´nk orvoe oe u e a si adatb´zisa (rengeteg hib´s bejegyz´s, kit¨ltetlen mez˝, elt´r˝ m´rt´kegys´g alap´ bea a e o o eo e e e u jegyz´sek, sz¨veges bejegyz´sek), pedig az ezekb˝l kinyert inform´ci´k ´rt´kesek lenn´nek. e o e o a o e e e 7 A ”szem´thalmazban” val´ kutakod´st tr´f´san GIGO-nak (garbage in, garbage out ) nee o a ea vezik. Torz´ ıtatlan adat : Az adatb´ny´szat sikeress´ge m´ lhat az adatok nem megfelel˝ a a e u o 8 kiv´laszt´s´n. Ide tartoz´ fogalom az un. BIBO (bias in, bias out ), amely arra h´ a aa o ´ ıvja fel a ﬁgyelm¨ nket, hogy ha egy r´szsokas´g alapj´n akarunk k¨vetkeztetni az alapsokas´gra, u e a a o a akkor ﬁgyelembe kell venn¨ nk a r´szsokas´g kiv´laszt´s´nak szempontjait, illetve az abb´l u e a a aa o ad´d´ (esetleges) torz´ asokat. P´ld´ul, ha a lakoss´got az anyagi helyzet szerint akarjuk o o ıt´ e a a csoportokba sorolni, de csak nyugat-magyarorsz´gi adatok allnak rendelkez´s¨ nkre, akkor a ´ eu tudnunk kell, hogy a kapott eredm´ny (a csoportok le´ asa) torz lesz, hiszen a r´szsokas´g e ır´ e a atlag ´letsz´ ´ e ınvonala jobb az alapsokas´g´n´l. a e a Alkalmaz´si ter¨let akci´k´pess´ge : Gyakran el˝fordul, hogy a tud´st csak kinyerik, de a a u o e e o a felhaszn´l´sa elmarad. Gyakran a felhaszn´l´si ter¨ letek t´ l merevek, vagy a v´ltoztat´s aa aa u u a a t´ ls´gosan magas k¨lts´gekkel j´rna. A legt¨bb adatb´ny´szati esettanulm´nyban a tud´s u a o e a o a a a a kinyer´s´nek m´dj´r´l esik sz´, a tud´s felhaszn´l´s´r´l pedig ritk´n hallunk. ee o ao o a aa a o a A befektet´s megt´r¨l´s´nek (Return On Investment) m´rhet˝s´ge : Egy e e ue e e o e adatb´ny´szati projektr˝l akkor all´ a a o ´ ıthatjuk biztosan, hogy sikeres, ha a befektet´s e hat´s´t m´rni, vagy viszonylag pontosan becs¨ lni tudjuk. aa e u A jegyzet fejezeteiben a legkev´sb´ ismert, de napjainkban egyre nagyobb teret nyer˝ ter¨ lee e o u teket j´rjuk k¨r¨ l : a gyakori mint´k kinyer´s´t, az attrib´ tumok k¨z¨tti osszef¨ gg´sek mega ou a ee u o o ¨ u e hat´roz´s´t, a sorozatelemz´st, a klaszterez´st ´s a webes adatb´ny´szatot. Minden esetben a aa e e e a a az algoritmusok gyakorlati felhaszn´l´s´t p´ld´kon kereszt¨ l szeml´ltetj¨ k ; emellett megadjuk aa a e a u e u a probl´m´k form´lis deﬁn´ oit, ´s bemutatjuk a legismertebb, leghat´konyabb algoritmusoe a a ıci´ e e kat is. A jegyzet tov´bbi c´lja, hogy osszefoglalja az eddig nem, vagy csak kis hat´konys´ggal a e ¨ e a megoldott probl´m´kat, tov´bb´ a jelenlegi kutat´si ter¨ leteket. e a a a a u

7 8

szem´t be, szem´t ki e e torz´ as be, torz´ as ki ıt´ ıt´

2. fejezet Alapfogalmak, jel¨l´sek oe
Ebben a r´szben tiszt´zzuk a jegyzet sor´n haszn´lt fogalmak jelent´s´t. C´lszer˝ akkor e a a a ee e u atn´zn¨ nk e fejezet egyes r´szeit, amikor az olvas´s sor´n olyan r´szbe utk¨z¨ nk, ami nem ´ e u e a a e ¨ o u teljesen tiszta.

2.1. Halmazok, rel´ci´k, f¨ ggv´nyek, sorozatok a o u e
A halmaz k¨ l¨nb¨z˝ objektumok egy¨ ttese, amelyeket a halmaz elemeinek h´ uo o o u ıvunk. Ha x eleme a H halmaznak, akkor azt ´ jel¨lj¨ k : x ∈ H, a halmaz elemeinek sz´m´t (r¨videbıgy o u a a o ben elemsz´m´t) pedig |H|-val. A jegyzetben a term´szetes sz´mok halmaz´t ({0,1,. . . }) Na a e a a el jel¨lj¨ k, a val´s sz´mok halmaz´t R-el, az eg´sz sz´mok halmaz´t Z-vel, az ures halmazt o u o a a e a a ¨ (egyetlen elemet sem tartalmaz´ halmaz) ∅-val. K´t halmaz akkor egyezik meg, ha ugyanazok o e az elemeik. X r´szhalmaza Y -nak (X ⊆ Y ), ha X minden eleme Y -nak is eleme. Ha X ⊆ Y , e de X = Y , akkor X val´di r´szhalmaza Y -nak. A val´di jelz˝t gyakran fogjuk haszn´lni, ´s a o e o o a e val´di r´szhalmaz anal´gi´j´ra azt ´rtj¨ k rajta, hogy az egyenl˝s´get kiz´rjuk. Sajnos a supero e o aa e u oe a set angol sz´nak nincsen altal´nosan elfogadott ford´ asa, pedig sokszor szeretn´nk haszn´lni. o ´ a ıt´ e a Azt fogjuk mondani, hogy Y b˝vebb X-n´l, ha (X ⊆ Y ). A halmazm˝ veletek jel¨l´se ´s pontos o e u oe e jelent´s¨ k : metszet : X ∩Y ={z :z ∈X ´s z ∈Y }, uni´ : X ∪Y ={z :z ∈X vagy z ∈Y }, k¨ l¨nbs´g : eu e o uo e X \ Y = {z : z ∈ X ´s z ∈ Y }. e K´t halmaz (X, Y ) Descartes-szorzata (X ×Y ) az osszes olyan rendezett p´rb´l all´ halmaz, e ¨ a o ´ o amelynek az els˝ komponense (tagja) X-ben, a m´sodik Y -ban van. Az X, Y halmazokon o a ´rtelmezett bin´ris rel´ci´ az X × Y r´szhalmaza. Ha (x, y) eleme a φ rel´ci´nak, akkor azt e a a o e a o ´ is jel¨lhetj¨ k : xφy. A rel´ci´ r´szben rendez´s (vagy parci´lis rendez´s), ha reﬂex´v (x ıgy o u a o e e a e ı x), antiszimmetrikus (x y ´s y x felt´telekb˝l k¨vetkezik, hogy x = y), tranzit´ (x y e e o o ıv ´s y z felt´telekb˝l k¨vetkezik, hogy x z). Ha az el˝z˝ 3 felt´telben az antiszimmetrikus e e o o o o e helyett szimmetrikusat (x y-b˝l k¨vetkezik, hogy y x) mondunk, akkor ekvivalencia-rel´ci´r´l o o a o o besz´l¨ nk. A tov´bbiakban, tetsz˝leges rendez´s eset´n, ha x=y ´s x y, akkor azt ´ jel¨lj¨ k eu a o e e e ıgy o u x y. Legyen X r´szhalmaza X . A X halmaznak y ∈ X egy als´ korl´tja, ha y x minden e o a x ∈ X -re. Az y legnagyobb als´ korl´t, ha minden y als´ korl´tra y o a o a y. Az y maxim´lis als´ a o korl´tja X -nak, ha nem l´tezik olyan y-t´l k¨ l¨nb¨z˝ y als´ korl´t, amire y y . Hasonl´an a e o uo o o o a o ´rtelmezhet˝ a fels˝, legkisebb fels˝, minim´lis fels˝ korl´t fogalmak is. A e o o o a o a rendez´s teljes e rendez´s, ha minden x = y elemre x y, y x k¨z¨ l az egyik fenn´ll. Az (X, ) p´rost h´l´nak e o u a a ao nevezz¨ k, ha az X-en ´rtelmezett parci´lis rendez´s, ´s tetsz˝leges x, y ∈ X elemeknek l´tezik u e a e e o e 22

¨ ´ 2. FEJEZET. ALAPFOGALMAK, JELOLESEK

23

legnagyobb als´ (jel¨l´sben : x ∧ y) ´s legkisebb fels˝ korl´tjuk (x ∨ y). o oe e o a K¨zponti fogalom lesz a lexikograﬁkus rendez´s. N´zz¨ k el˝sz¨r ennek a matematikai deo e e u o o ﬁn´ oj´t. Legyen X ´s Y k´t halmaz, amelyeken ´rtelmezve van egy-egy parci´lis rendez´s ıci´ a e e e a e ( X , Y ). Azt mondjuk, hogy a (x1 , y1 ) ∈ X × Y lexikograﬁkusan megel˝zi (x2 , y2 ) ∈ X × o × Y p´rt, ha x1 X x2 , vagy x1 = x2 ´s y1 Y y2 . A lexikograﬁkus rendez´st tetsz˝leges sz´m´ a e e o a u halmaz Descartes-szorzat´ra is kiterjeszthetj¨ k rekurz´ m´don az al´bbiak alapj´n : X × Y × a u ıv o a a ×Z = X ×(Y ×Z). L´that´, hogy a lexikograﬁkus rendez´st Descartes szorzatokon ´rtelmezz¨ k, a o e e u vagy m´s sz´val olyan osszetett strukt´ r´kon, amelyeknek ugyanannyi tagjuk van (n-eseknek a o ¨ ua is h´ ak ezeket). Mi ezt szeretn´nk altal´nos´ ıvj´ e ´ a ıtani, hiszen p´ld´ul szavak sorba rendez´s´n´l is e a ee e el˝fordulnak elt´r˝ hossz´ s´g´ szavak. Ha a r¨videbb sz´ megegyezik a hosszabb sz´ els˝ fel´vel o eo ua u o o o o e (p´ld´ul komp ´s kompenz´l szavak), akkor megegyez´s alapj´n a r¨videbb sz´ el˝zi meg lexie a e a e a o o o kograﬁkusan a hosszabbikat. Ezek alapj´n mindenki tudja deﬁni´lni a lexikograﬁkus rendez´st a a e elt´r˝ sz´m´ halmazok Descartes szorzat´ra. A legt¨bb esetben a Descartes szorzat tagjainak eo a u a o halmaza ´s a rajtuk deﬁni´lt rendez´sek megegyeznek (pl. : X = Y ´s X = Y ). Ilyenre, adott e a e e rendez´s szerinti lexikograﬁkus rendez´sk´nt hivatkozunk. e e e Az X, Y halmazokon ´rtelmezett f bin´ris rel´ci´ f¨ggv´ny, ha b´rmely x ∈ X eset´n e a a o u e a e pontosan egy olyan y ∈ Y l´tezik, hogy (x, y) ∈ f . Ez jel¨l´sben f : X → Y , ´s, ha (x, y) ∈ f , e oe e akkor y = f (x). Az X halmazt a f ´rtelmez´si tartom´ny´nak h´ e e a a ıvjuk (vagy m´shogy : f az a X-en ´rtelmezett), Y -t az f k´phalmaz´nak, az f (X) halmazt pedig az f ´rt´kk´szlet´nek. Azt e e a e e e e a f¨ ggv´nyt, amely ugy kapunk, hogy el˝sz¨r a f , majd az g f¨ ggv´nyt alkalmazzuk g ◦ f -el u e ´ o o u e jel¨lj¨ k. Predik´tum egy f¨ ggv´ny, ha az ´rt´kk´szlete az {igaz, hamis} halmaz. Sz¨rjekt´v egy o u a u e e e e u ı f¨ ggv´ny, ha a k´phalmaza megegyezik az ´rt´kk´szlet´vel, injekt´v (vagy m´s n´ven egy-egy u e e e e e e ı a e ´rtelm˝ lek´pz´s), ha az ´rtelmez´si tartom´ny b´rmely k´t k¨ l¨nb¨z˝ elem´hez k¨ l¨nb¨z˝ e u e e e e a a e uo o o e uo o o ´rt´ket rendel ´s bijekt´v (m´sk´ppen a f¨ ggv´ny egy bijekci´ ), ha sz¨ rjekt´ ´s injekt´ is e e e ı a e u e o u ıv e ıv egyben.
n

Legyen H tetsz˝leges halmaz. Az f : H × · · · × H → H f¨ ggv´nyt n v´ltoz´s m˝veletnek o u e a o u nevezz¨ k. A H halmazon ´rtelmezett k´tv´ltoz´s u e e a o m˝ veletet asszociat´vnak nevezz¨ k, ha u ı u tetsz˝leges a, b, c ∈ H eset´n (a b) c = a (b c). A (H, ) p´rt f´lcsoportnak nevezz¨ k, ha o e a e u a H-n ´rtelmezett asszociat´ m˝ velet. A (H, ) f´lcsoport elemein a H elemeit ´rtj¨ k. Ha e ıv u e e u a (H, ) f´lcsoport elemei k¨z¨tt l´tezik olyan e elem, amelyre e a = a e = a minden a ∈ e o o e ∈ H elemre, akkor e-t egys´gelemnek h´ e ıvjuk ´s egys´gelemes f´lcsoport´l besz´l¨ nk. Ha egy e e e o eu egys´gelemes f´lcsoportban minden elemnek l´tezik inverze, akkor csoportr´l besz´l¨ nk. Az a e e e o eu ´ inverz´re (a−1 ) teljes¨ lj¨n, hogy a a−1 = a−1 a = e. A csoport Abel-csoport, ha a m˝ velet e u o u ´ kommutat´v (a b = b a) is. A (H, , +) h´rmas egy gy˝r˝, amennyiben (H, ) Abel csoport, ı a u u (H, +) f´lcsoport ´s a , + m˝ veletek disztribut´vek egym´sra n´zve, azaz (a+b) c = a c+b c. e e u ı a e A ´s a + m˝ veletek egys´gelemeit az 1 ´s a 0 szimb´lumok jel¨lik. Testnek h´ e u e e o o ıvjuk az olyan kommutat´ gy˝ r˝ t, ahol az 1 = 0 ´s a 0-´n k´ ul a H minden elem´nek van inverze. ıv u u e a ıv¨ e A H halmaz felett ´rtelmezett multihalmaznak vagy zs´knak nevezz¨ k azt a halmazt, amelye a u nek elemei olyan p´rok, amelyek els˝ tagja H egy eleme, m´sodik tagja pedig egy pozit´ eg´sz a o a ıv e sz´m. Egy multihalmazt szok´s ugy abr´zolni mintha olyan halmaz lenne, amely egy elemet a a ´ ´ a t¨bbsz¨r is tartalmazhat. Ilyenkor a p´r els˝ tagj´t annyiszor ´ o o a o a ırjuk le, amennyi a p´r m´sodik a a tagja. P´ld´ul a {(A,1), (C,3)}-at {A, C, C, C}-vel abr´zoljuk. A multihalmaz m´ret´n a p´rok e a ´ a e e a m´sodik tagjainak osszeg´t, elemsz´m´n pedig a p´rok sz´m´t ´rtj¨ k. a ¨ e a a a a a e u Sokat fogjuk haszn´lni a sorozat fogalm´t. Legyen S egy halmaz. Az f : N → S f¨ ggv´nyt a a u e az S felett ´rtelmezett sorozatnak h´ e ıvjuk. Le´ as´ra az f (0), f (1), . . . helyett a s 0 , s1 , . . . ır´ a

¨ ´ 2. FEJEZET. ALAPFOGALMAK, JELOLESEK

24

jel¨l´st fogjuk haszn´lni. V´ges sorozatok eset´ben az f ´rtelmez´si tartom´nya (´ltal´ban oe a e e e e a a a az {1,2,. . . ,n}) v´ges halmaz. V´ges sorozat hossza az ´rtelmez´si tartom´ny´nak elemsz´ma. e e e e a a a Az S = s1 , s2 , . . . sn , S = s1 , s2 , . . . sn sorozat konkaten´ci´j´n az s1 , s2 , . . . sn , s1 , s2 , . . . sn a oa sorozatot ´rtj¨ k, ´s S, S -el jel¨lj¨ k. e u e o u

2.2. Line´ris algebra a
Legyen H egy test, amelynek elemeit skal´roknak h´ a ıvjuk. A H felett ´rtelmezett vektort´r e e egy V halmaz (amelynek elemei a vektorok ) ´s k´t bin´ris oper´tor (vektor osszead´s : + ´s e e a a ¨ a e skal´rral val´ szorz´s : ·), amelyekre teljes¨ l n´h´ny axi´ma (1. u, v, w ∈ V -re u+(v +w) = (u+ a o a u e a o +v)+w, 2. u+v =v+u, stb.). A W ⊆V halmazt alt´rnek nevezz¨ k, ha z´rt a vektor¨sszead´s ´s e u a o a e skal´rszorz´s m˝ veletekre. Adott vektorhalmazt tartalmaz´ alterek metszet´t a vektorhalmaz a a u o e altal fesz´tett alt´rnek nevezz¨ k. Ha a halmazb´l nem t´vol´ ´ ı e u o a ıthatunk el elemet a fesz´ ıtett alt´r e megv´ltoztat´sa n´lk¨ l, akkor a vektorhalmazt line´risan f¨ggetlennek h´ a a e u a u ıvjuk. A V alt´r egy e b´zisa egy olyan line´risan f¨ ggetlen vektorhalmaz, amelynek fesz´ a a u ıtett altere V . A hagyom´nyoknak megfelel˝en az A m´trix i-edik sor´b´l k´pzett vektort A i -vel jel¨lj¨ k, a o a a o e o u T T 2 ||v||-vel a v vektor euklideszi norm´j´t ( aa e a a i vi ) ´s v w-vel a v , w vektorok skal´ris szorzat´t T ( i vi wi ).

2.3. Gr´felm´let a e
Ir´ny´tott gr´f egy G = (V, E) p´r, ahol V cs´csok (vagy pontok ) v´ges halmaza, E pedig a ı a a u e egy bin´ris rel´ci´ V -n. E elemeit ´leknek nevezz¨ k. Ha (u, v) ∈ E, akkor az u, v cs´ csok a a o e u u egym´s szomsz´dai. Ir´ny´tatlan gr´fr´l besz´l¨ nk, ha az E rel´ci´ szimmetrikus. A c´mk´zett a e a ı a o eu a o ı e (vagy s´lyozott) gr´fn´l a cs´ csokhoz, c´mk´zett ´l˝ (vagy ´ls´lyozott) gr´fn´l pedig az ´lekhez u a a u ı e eu e u a a e rendel¨ nk c´ eket. A c´ ezett ´l˝ gr´fot s´lyozott gr´fnak h´ u ımk´ ımk´ eu a u a ıvjuk, ha a c´ ek sz´mokkal ımk´ a kifejezhet˝ s´ lyokat jelentenek. A gr´f m´ret´n (|G|) a cs´ csok sz´m´t ´rtj¨ k. Egy cs´ cs fok´n o u a e e u a a e u u a a cs´ csot tartalmaz´ ´leket ´rtj¨ k. Ir´ny´ u oe e u a ıtott gr´fokn´l megk¨ l¨nb¨ztet¨ nk kifokot ´s befokot. a a uo o u e A G ir´ny´ a ıtatlan gr´f k-regul´ris, ha minden cs´ cs foka pontosan k. a a u A G = (V , E ) gr´f a G = (V, E) r´szgr´fja, ha V ⊆ V ´s E ⊆ E. A G = (V, E) gr´f a e a e a V ⊆ V altal fesz´tett r´szgr´fja (induced subgraph) az a G = (V , E ) gr´f, ahol E = {(u, v) ∈ ´ ı e a a ∈ E : u, v ∈ V }. A G1 (V1 , E1 ) izomorf a G2 (V2 , E2 ) gr´ﬀal, jel¨l´sben G1 ∼ G2 , ha l´tezik a oe e = φ : V1 → V2 bijekci´, amelyre (u, v) ∈ E1 eset´n (φ(u), φ(v)) ∈ E2 is fenn´ll. C´ ezett gr´fokn´l o e a ımk´ a a emellett megk¨vetelj¨ k, hogy az u cs´ cs c´ eje megegyezz´k a φ(u) c´ ej´vel minden u ∈ V 1 o u u ımk´ e ımk´ e re, c´ ezett ´l˝ gr´fn´l pedig az (u, v) c´ eje egyezzen meg a (φ(u), φ(v)) ´l c´ ej´vel. Ha ımk´ eu a a ımk´ e ımk´ e G ∼ G, akkor automorﬁzmusr´l besz´l¨ nk. o eu = A gr´fok abr´zol´s´nak elterjedt m´dja a szomsz´doss´gi m´trix (adjacency matrix) ´s a a ´ a aa o e a a e szomsz´doss´g lista. Az |G| × |G| m´ret˝ A szomsz´doss´gi m´trix a ij eleme 1 (´lc´ ezett e a e u e a a e ımk´ esetben az ´l c´ eje), ha a G gr´f i-edik cs´ cs´b´l indul ´l a j-edik cs´ csba, k¨ l¨nben e ımk´ a u a o e u uo 0. Term´szetesen a szomsz´doss´gi m´trixot a gr´fon k´ ul az hat´rozza meg, hogy melyik e e a a a ıv¨ a cs´ csot h´ u ıvjuk az els˝nek, m´sodiknak, ... A szomsz´doss´gi m´trixot teh´t a gr´f ´s az f : o a e a a a a e : V → {1, . . . , |V |} bijekci´ adja meg. Hurok´l n´lk¨ li, c´ ezett gr´fban a szomsz´doss´gi o e e u ımk´ a e a m´trix aii eleme az i cs´ cs c´ ej´t t´rolja. A szomsz´doss´gi lista |G| darab lista, ahol az a u ımk´ e a e a i-edik lista t´rolja az i-edik cs´ cs szomsz´dait. a u e

¨ ´ 2. FEJEZET. ALAPFOGALMAK, JELOLESEK

25

Az u cs´ csot az u cs´ ccsal osszek¨t˝ k-hossz´ uton cs´ csoknak egy olyan (v´ges) u u ¨ oo u ´ u e v0 , v1 , . . . , vk sorozat´t ´rtj¨ k, amelyre u = v0 , u = vk , ´s (vi−1 , vi ) ∈ E (i = 1,2, . . . , k). Egy a e u e ut egyszer˝, ha a benne szerepl˝ cs´ csok p´ronk´nt k¨ l¨nb¨z˝k. A v 0 , v1 , . . . , vk ut k¨r, ha ´ u o u a e uo o o ´ o v0 = vk , ´s az ut legal´bb egy ´lt tartalmaz. Egy gr´fot osszef¨gg˝nek h´ e ´ a e a ¨ u o ıvunk, ha b´rmely k´t a e cs´ csa osszek¨thet˝ uttal. A k¨rmenetes, ir´ny´ as n´lk¨ li gr´fot erd˝nek h´ u ¨ o o ´ o a ıt´ e u a o ıvjuk. Ha az erd˝ o osszef¨ gg˝, akkor pedig f´nak. Az olyan f´t, amely tartalmazza egy G gr´f minden cs´ cs´t, a ¨ u o a a a u a G fesz´t˝f´j´nak h´ ıoaa ıvjuk. A gy¨keres f´ban az egyik cs´ csnak kit¨ ntetett szerepe van. Ezt a cs´ csot gy¨k´rnek neo a u u u o e vezz¨ k. A gy¨k´rb˝l egy tetsz˝leges x cs´ csba vezet˝ (egy´rtelm˝ en meghat´rozott) ut altal u o e o o u o e u a ´ ´ tartalmazott b´rmely y cs´ csot az x os´nek nevez¨ nk. Azt is mondjuk ekkor, hogy x az y a u ˝ e u lesz´rmazottja. Ha x = y, akkor val´di osr˝l ´s val´di lesz´rmazottr´l besz´l¨ nk. Ha az uton x a o ˝ o e o a o eu ´ 1 ´len kereszt¨ l ´rhet˝ el y-b´l, akkor x az y gyereke ´s y az x sz¨l˝je. Ha k´t cs´ csnak ugyanaz e u e o o e uo e u a sz¨ l˝je, akkor testv´reknek mondjuk oket. uo e ˝ A G = (V, E) gr´f S, V \S v´g´s´n a V halmaz k´tr´szes part´ oj´t ´rtj¨ k. Az (u, v) ∈ E ´l a a a a e e ıci´ a e u e keresztezi az S, V \S v´g´st, ha annak egyik v´gpontja S-ben a m´sik V \S-ben van. Egy v´g´s a a e a a a s´lya – s´ lyozott gr´fok eset´ben – megegyezik a v´g´st keresztez˝ ´lek osszs´ ly´val. u u a e a a oe ¨ u a

2.4. Matematika logika 2.5. Val´sz´ us´gsz´m´ as o ın˝ e a ıt´
Felt´telezz¨ k, hogy az olvas´ tiszt´ban van a val´sz´n˝s´gi v´ltoz´, val´sz´ us´gi v´ltoz´ ele u o a o ı u e a o o ın˝ e a o oszl´s´nak, s˝r˝s´gf¨ggv´ny´nek, eloszl´sf¨ggv´ny´nek a val´sz´ us´gi v´ltoz´ v´rhat´ ´rt´k´nek a a u u e u e e a u e e o ın˝ e a o a oe e e 2 (E[X] = µ = x · p(x)) ´s sz´r´s´nak (D 2 [X] = σX = E[(X − µ)2 ]) vagy altal´nosan az n-edik e o a a ´ a centr´lis momentumok fogalm´val (D n [X] = E[(X − µ)n ]), tov´bb´ ismeri k´t val´sz´ us´gi a a a a e o ın˝ e v´ltoz´ k¨z¨tti kovarianci´t (Cov(X, Y ) = E[(X − µ)(Y − ν)) ´s korrel´ci´t (Corr(X, Y ) = a o o o a e a o = Cov(X,Y ) ). σX σY

2.5.1. Nevezetes eloszl´sok a
A k¨vetkez˝ nevezetes eloszl´sokkal fogunk tal´lkozni tanulm´nyaink sor´n. o o a a a a Binomi´lis eloszl´s a a Legyen (Ω, F, P) Kolmogorov-f´le val´sz´ us´gi mez˝, A ∈ F pozit´ val´sz´ us´g˝ esem´ny, e o ın˝ e o ıv o ın˝ e u e p = P(A) > 0. Hajtsunk v´gre n-szeres f¨ ggetlen k´ erletsorozatot ´s legyen X ´rt´ke annyi, e u ıs´ e e e ah´nyszor A bek¨vetkezett a k´ erletsorozatban. X-et ekkor n, p param´ter˝ binomi´lis ela o ıs´ e u a oszl´s´ val´sz´ us´gi v´ltoz´nak nevezz¨ k, jele X ∈ B(n, p). X eloszl´sa p k = P (X = k) = au o ın˝ e a o u a = n pk (1 − p)n−k , v´rhat´ ´rt´ke E(X) = np, sz´r´sa σ 2 (X) = np(1 − p). a oe e oa k k A Poisson-eloszl´s a binomi´lis eloszl´s hat´resete. lim n→∞,p→0,np=λ n pk q n−k = λ e−λ . A a a a a k k! Moivre-Laplace t´tel szerint, az n-ed rend˝ p param´ter˝ binomi´lis eloszl´s standardiz´ltja n e u e u a a a n k n−k minden hat´ron t´ l val´ n¨vel´se eset´n norm´lis eloszl´s´ : ∀x∈R:limn→∞ k−np <x k p q = a u o o e e a au √
npq

= Φ(x)

¨ ´ 2. FEJEZET. ALAPFOGALMAK, JELOLESEK Hipergeometrikus eloszl´s a

26

Tegy¨ k fel, hogy van N k¨ l¨nb¨z˝ elem¨ nk, amelyb˝l R darab rossz. A hipergeometrikus u uo o o u o eloszl´s adja meg annak az es´ly´t, hogy X darab rossz elem lesz, ha az N elemb˝l n darabot a e e o kivesz¨ nk v´letlenszer˝ en. Elemi kombinatorikus uton a val´sz´ us´g kisz´m´ u e u ´ o ın˝ e a ıthat´ (0 ≤ X ≤ n) : o P (X, N, R, n) =
R X N −R n−X N n

A fenti s˝ r˝ s´gf¨ ggv´nnyel rendelkez˝ diszkr´t val´sz´ us´gi eloszl´st h´ uue u e o e o ın˝ e a ıvjuk hipergeometrikus eloszl´snak. a Amennyiben n N , akkor a hipergeometrikus eloszl´st k¨zel´ a o ıthetj¨ k az n, R/N param´ter˝ u e u binomi´lis eloszl´ssal. a a Norm´lis eloszl´s a a χ2 eloszl´s a Legyenek ξ1 , ξ2 , . . . , ξn egym´st´l f¨ ggetlen, standard norm´lis eloszl´s´ val´sz´ us´gi a o u a au o ın˝ e n 2 2 v´ltoz´k. Ekkor az i=1 ξi val´sz´ us´gi v´ltoz´ eloszl´s´t n param´ter˝ χ eloszl´snak (χ2 ) a o o ın˝ e a o aa e u a n nevezz¨ k. u

2.5.2. Ferdes´g ´s lapults´g e e a
A ferdes´g egy eloszl´s szimmetri´j´t pr´b´lja megadni. Ha a ferdes´g nulla, akkor az ele a aa o a e oszl´s szimmetrikus (p´ld´ul norm´lis eloszl´sokn´l), ellenkez˝ esetben a v´rhat´ ´rt´kt˝l balra a e a a a a o a oe e o (negat´ ferdes´g eset´ben) vagy jobbra ny´ lik el”. A ferdes´gnek t¨bb mutat´j´t deﬁni´lt´k ; ıv e e u e o oa a a ” √ D 3 [X] ezek k¨z¨ l a legelterjedtebb a γ1 = (D2 [X])3/2 ), de szok´s m´g a β1 = γ1 -et is hasz´lni. o u a e a Szint´n nem az alapfogalmak k¨z´ tartozik a lapults´g fogalma, ami egy eloszl´s cs´ csoss´g´t e o e a a u a a D 4 [X] adja meg. A lapults´gnak is t¨bb elfogadott deﬁn´ oja l´tezik. Legelterjedtebb a β 2 = (D2 [X])2 a o ıci´ e (kurtosis proper), ´s a γ2 = β2 − 3 (kurtosis excess) ´rt´kek. A norm´lis eloszl´s β2 lapults´gi e e e a a a ´rt´ke h´rom, a norm´lisn´l laposabbak´ h´romn´l kisebb. A ferdes´get ´s a lapults´got annak e e a a a e a a e e a eld¨nt´s´n´l szokt´k haszn´lni, hogy egy adott minta sz´rmazhat-e norm´lis eloszl´sb´l. o ee e a a a a a o

2.5.3. Egyenl˝tlens´gek o e
Legyen X egy E[X] v´rhat´ ´rt´k˝ val´sz´ us´gi v´ltoz´. A Markov egyenl˝tlens´g szerint a oe e u o ın˝ e a o o e E[|X|] P(|X| ≥ a) ≤ a , ahol a > 0. A Hoeﬀding-korl´t a mintav´telz´ssel kapcsolatos all´ asok a e e ´ ıt´ alapja. 2.1. lemma. Legyen Xi , 1 ≤ i ≤ n µ v´rhat´ ´rt´k˝, f¨ggetlen, azonos eloszl´s´ val´sz´n˝s´gi a oe e u u a u o ı u e v´ltoz´k ´s a ≤ Xi ≤ b minden i-re. Ekkor tetsz˝leges λ > 0-ra fenn´ll a k¨vetkez˝ egyenl˝tlens´g : a o e o a o o o e P 1 n
i=1

Xi − µ ≥ λ

≤ 2e−2λ

2 n/(b−a)2

.

¨ ´ 2. FEJEZET. ALAPFOGALMAK, JELOLESEK

27

2.5.4. Entr´pia o
Legyen X egy diszkr´t val´sz´ us´gi v´ltoz´, amely ´rt´keit egy X halmazb´l veheti fel. Az e o ın˝ e a o e e o lX = − log2 p(X) val´sz´ us´gi v´ltoz´t az X entr´pias˝r˝s´g´nek nevezz¨ k. X entr´pi´j´t – o ın˝ e a o o u u e e u o aa H(X)-et – ezen v´ltoz´ v´rhat´ ´rt´k´vel deﬁni´ljuk : a o a oe e e a H(X) = − p(x) log2 p(x).
x∈X

Az entr´pia valamik´ppen a v´ltoz´ bizonytalans´g´t fejezi ki. Ha X elemsz´ma r¨gz´ o e a o a a a o ıtett ´s e az X v´ltoz´ csak egy ´rt´ket vehet fel (mert az egyik ´rt´k val´sz´ us´ge 1), akkor H(X) ´rt´ke a o e e e e o ın˝ e e e 0 (nincs bizonytalans´g), ha pedig X eloszl´sa egyenletes eloszl´st k¨vet, akkor az entr´pia a a a a o o maximum´t veszi fel, log2 (|X|)-t. a Legyen X ´s Y k´t diszkr´t ´rt´k˝ val´sz´ us´gi v´ltoz´. Az X-nek az Y felt´tellel vett e e e e e u o ın˝ e a o e felt´teles entr´pi´ja : e o a H(X|Y ) = − p(x, y) log2 p(x|y),
y∈Y x∈X

vagy egy kicsit atalak´ ´ ıtva kapjuk, hogy H(X|Y ) = − p(y)
y∈Y x∈X

p(x|y) log2 p(x|y).

Be lehet bizony´ ıtani, hogy H(X|Y ) = H(XY )−H(Y ), ami inform´lisan ugy lehet megfogalmaza ´ ni, hogy a felt´teles entr´pia megadja, hogy mennyi bizonytalans´g marad X-ben, ha elvessz¨ k e o a u az Y bizonytalans´g´t. a a A felt´teles entr´pia sz´mos tulajdons´ga k¨z¨ l mi csak az al´bbit fogjuk felhaszn´lni : e o a a o u a a 0 ≤ H(X|Y ) ≤ H(X).

2.6. Statisztika
A statisztik´ban altal´ban X1 , X2 , . . . , Xn f¨ ggetlen, azonos eloszl´s´ val´sz´ us´gi v´ltoz´k a ´ a u a u o ın˝ e a o vannak megadva, amiket mint´knak nevez¨ nk. Az eloszl´st nem ismerj¨ k pontosan, de rendela u a u kez´s¨ nkre allnak megﬁgyel´sek. eu ´ e Legyenek X1 , X2 , . . . , Xn f¨ ggetlen, azonos eloszl´s´ val´sz´ us´gi v´ltoz´k. Ekkor a u au o ın˝ e a o +···+Xn ¯ X = X1 +X2n val´sz´ us´gi v´ltoz´t empirikus k¨z´pnek, vagy minta´tlagnak, a s ∗2 = o ın˝ e a o o e a n 1 ¯ = n−1 n (Xi − X)2 val´sz´ us´gi v´ltoz´t pedig korrig´lt empirikus szor´sn´gyzetnek neo ın˝ e a o a a e i=1 vezz¨ k. u ∗2 o ın˝ e a o a A χ2 eloszl´s deﬁn´ oj´b´l k¨vetkezik, hogy az (n−1)s val´sz´ us´gi v´ltoz´ eloszl´sa χ2 , a ıci´ a o o n σ2 ∗2 amennyiben a s σ sz´r´s´ , norm´lis eloszl´s´ val´sz´ us´gi v´ltoz´k korrig´lt empirikus oau a au o ın˝ e a o a szor´sn´gyzet´t jel¨li a e e o 2.2. deﬁn´ o. Legyenek X ´s Y k´t olyan val´sz´n˝s´gi v´ltoz´, amelyek eloszl´sa rendre χ 2 ıci´ e e o ı u e a o a n X/n 2 ´s χm . Ekkor a Z = Y /m val´sz´n˝s´gi v´ltoz´ eloszl´s´t Fn,m eloszl´snak h´vjuk. e o ı u e a o a a a ı

¨ ´ 2. FEJEZET. ALAPFOGALMAK, JELOLESEK

28

2.6.1. Hipot´zisvizsg´lat e a
A hipot´zisvizsg´lat feladata mindig valamilyen all´ as helyess´g´nek vizsg´lata. Ezt az e a ´ ıt´ e e a all´ ast nullhipot´zisnek nevezz¨ k, jele H0 . A nullhipot´zis altal´ban egy val´sz´ us´gi v´ltoz´ ´ ıt´ e u e ´ a o ın˝ e a o valamely param´ter´re vagy a v´ltoz´ viselked´s´re vonatkoz´ all´ as. Az all´ as igazol´s´hoz e e a o ee o ´ ıt´ ´ ıt´ aa vagy elvet´s´hez k´ erletezget´sek, mint´k allnak rendelkez´s¨ nkre. Ha a mint´k alapj´n a nullee ıs´ e a ´ eu a a hipot´zist elvetj¨ k, holott az igaz, akkor els˝faj´ hib´t k¨vet¨ nk el. Ellenkez˝ esetben – amie u o u a o u o kor a nullhipot´zis hamis, de mi elfogadjuk – m´sodfaj´ hib´r´l besz´l¨ nk. Puszt´n mint´k e a u a o eu a a seg´ eg´vel nem tudunk teljesen biztos v´laszt adni. A gyakorlatban egy param´terrel (α) ıts´ e a e r¨gz´ az els˝faj´ hiba elk¨vet´s´nek megengedett val´sz´ us´g´t. Az 1 − α ´rt´ket a pr´ba o ıtik o u o ee o ın˝ e e e e o szintj´nek h´ e ıvjuk. ¨ Osszefoglalva teh´t, adott egy all´ as, egy param´ter (α) ´s mint´k sorozata. Feladatunk, a ´ ıt´ e e a hogy a mint´k alapj´n c´foljuk vagy igazoljuk az all´ ast ugy, hogy bizony´ a a a ´ ıt´ ´ ıthat´an α-n´l kisebb o a legyen annak val´sz´ us´ge, hogy az all´ as igaz, holott mi c´foljuk. A hipot´zisvizsg´latn´l a o ın˝ e ´ ıt´ a e a a mint´k eredm´nyeit felhaszn´lva kisz´m´ a e a a ıtunk egy un. pr´bastatisztika ´rt´ket, ´s ezt vetj¨ k ´ o e e e u ossze egy ismert eloszl´ssal. Az α-nak c´lszer˝ kis (0.1 ´s 0.01 k¨z¨tti) ´rt´ket v´lasztani 1 . ¨ a e u e o o e e a

2.6.2. Az F -pr´ba o
Az F -pr´ba arra szolg´l, hogy k´t f¨ ggetlen, norm´lis eloszl´s´ val´sz´ us´gi v´ltoz´ (X, Y ) o a e u a a u o ın˝ e a o sz´r´s´nak egyenl˝s´g´t eld¨nts¨ k. oaa oe e o u H0 : σ X = σ Y . Tudjuk, hogy X σ2 X ´s Y σ2 e X Y a nullhipot´zis fenn´ll, akkor az e a
(n −1)s∗2 (n −1)s∗2 Y

χ2 eloszl´s´ ak (nX − 1) illetve (nY − 1) param´terrel. Ha au e F= s∗2 X s∗2 Y

1 au pr´bastatisztika F -eloszl´s´ (nX − 1, nY − 1) param´terrel. Azonban F is F -eloszl´s´ (nY − o au e ∗ − 1, nX − 1) param´terrel, ez´rt a gyakorlatban F = max{F,1/F } ≥ 1 statisztik´t szok´s e e a a haszn´lni. a

2.6.3. A χ2 -pr´ba o
A χ2 pr´b´k az al´bbi t´telt haszn´lj´k fel. o a a e a a 2.3. t´tel. Legyen A1 , A2 , . . . , Ar egy teljes esem´nyrendszer (r ≥ 3), legyen pi = P(Ai ) > 0, i = e e =1, . . . , r. Ism´telj¨k a k´s´rletet n-szer egym´st´l f¨ggetlen¨l. Jel¨lje X i az Ai esem´ny bek¨vete u ı e a o u u o e o kez´s´nek sz´m´t. Bel´that´, hogy ekkor a e e a a a o
r

j=1

(Xj − npj )2 npj

val´sz´n˝s´gi v´ltoz´ eloszl´sa n → ∞ eset´n χ 2 eloszl´shoz konverg´l. o ı u e a o a e a a r−1
1

Gondolkozzunk el azon, hogy mi t¨rt´nne, ha α-nak nagyon kis ´rt´ket v´lasztan´nk! o e e e a a

¨ ´ 2. FEJEZET. ALAPFOGALMAK, JELOLESEK

29

A χ2 eloszl´s kvantiliseit f¨ ggv´ny-t´bl´zatokban megtal´lhatjuk. a u e a a a A χ2 -pr´ba legfontosabb alkalmaz´si ter¨ letei az (1.) illeszked´s-, (2.) f¨ ggetlens´g- ´s (3.)hoo a u e u e e mogenit´svizsg´lat. T´m´nkhoz a f¨ ggetlens´g-vizsg´lat tartozik hozz´, ´ a tov´bbiakban ezt a a e a u e a a ıgy a 2 r´szletezz¨ k. A χ pr´ba ir´nt ´rdekl˝d˝knek a [85] magyar nyelv˝ irodalmat aj´nljuk. e u o a e o o u a

2.6.4. F¨ ggetlens´gvizsg´lat u e a
Legyen A1 , A2 , . . . , Ar ´s B1 , B2 , . . . , Bs k´t teljes esem´nyrendszer. V´gezz¨ nk n k´ erletet. e e e e u ıs´ Nullhipot´zis¨ nk az, hogy az esem´nyrendszerek f¨ ggetlenek. e u e u H0 : P(Ai , Bj ) = P(Ai )P(Bj ), i = 1, . . . , r j = 1, . . . , s

Ha az esem´nyek val´sz´ us´gei adottak, akkor tiszta illeszked´s vizsg´lati feladatr´l besz´l¨ nk, e o ın˝ e e a o eu ahol H0 : P(Ai ∩ Bj ) = pi qj hiszen pi , qj ´rt´kek adottak. Jel¨lje kij az Ai ∩ Bj esem´ny bek¨vetkez´s´nek sz´m´t. Ekkor ki e e o e o ee a a kell sz´m´ a ıtanunk a r s (kij − npi qj )2 2 χ = npi qj i=1 j=1 un. pr´bastatisztika ´rt´ket. Jobban megvizsg´lva χ2 -et l´thatjuk, hogy az egy ´ o e e a a 2 (megﬁgyelt ´rt´k - v´rt ´rt´k) e e a e e jelleg˝ kifejez´s. Amennyiben χ2 kicsi, akkor a megﬁu e v´rt ´rt´k a e e gyelt ´rt´kek k¨zel vannak azokhoz, amit H0 fenn´ll´sa eset´n v´rtunk, teh´t a nullhipot´zist e e o a a e a a e elfogadjuk. e Hogy pontosan mit jelent az, hogy kicsi”, azt a 2.3-as t´tel alapj´n χ2 e a rs−1 ´s az α pa” 2 ram´ter hat´rozza meg. T´bl´zatb´l keress¨ k ki, hogy a χrs−1 eloszl´s hol veszi fel az 1 − α e a a a o u a ´rt´ket. Amennyiben ez nagyobb a fent kisz´m´ e e a ıtott χ2 ´rt´kn´l, akkor a nullhipot´zist elfogade e e e juk, ellenkez˝ esetben elvetj¨ k. o u A gyakorlatban sokkal t¨bbsz¨r fordul el˝ az az eset, amikor az esem´nyek val´sz´ us´geit o o o e o ın˝ e nem ismerj¨ k. Ekkor a val´sz´ us´geket az esem´nyek relat´ gyakoris´g´val becs¨ lj¨ k meg. u o ın˝ e e ıv a a u u s Jel¨lj¨ k az Ai esem´ny gyakoris´g´t ki. -vel, teh´t ki. = j=1 kij ´s hasonl´an Bj esem´ny gyao u e a a a e o e 2 koris´g´t k.j -vel. χ pr´b´k sor´n az adatok szeml´ltet´s´nek gyakran haszn´lt eszk¨ze az un. a a o a a e ee a o ´ kontingencia-t´bl´zat. Ez egy t¨bbdimenzi´s t´bl´zat, amely cell´iban a megfelel˝ esem´ny a a o o a a a o e bek¨vetkez´s´nek sz´ma tal´lhat´. Egy ilyen 2-dimenzi´s kontingencia-t´bl´zatot l´thatunk a o ee a a o o a a a k¨vetkez˝ abr´n. o o´ a B1 A1 A2 . . . Ar k11 k21 . . . kr1 k.1 B2 k12 k22 . . . kr2 k.2 ... ... ... .. . ... ... Bs k1s k2s . . . krs k.s k1. k2. . . . kr. n

¨ ´ 2. FEJEZET. ALAPFOGALMAK, JELOLESEK Az Ai ∩ Bj megﬁgyelt ´rt´ke kij , v´rt ´rt´ke H0 eset´n n · e e a e e e
r s

30 ki. k.j · . Ezek alapj´n χ2 ´rt´ke : a e e n n

χ2 =
i=1 j=1

(kij −

ki. k.j 2 ) n ki. k.j n

Mivel a f¨ ggetlens´g fenn´ll´sa eset´n r − 1 darab pi -t ´s s − 1 darab qj val´sz´ us´get kell u e a a e e o ın˝ e megbecs¨ lni, ´ a fenti H0 fenn´ll´sa eset´n χ2 u ıgy a a e = χ2 eloszl´s´ . au rs−1−(r+s−2) (r−1)(s−1) A χ2 eloszl´s k¨zel´ ese csak abban az esetben pontos, ha a kij ´rt´kek nagyok. Persze nincs a o ıt´ e e pontos szab´ly arra n´zve, hogy mennyire kell nagynak lennie. Azt szokt´k mondani, hogy a a e a kontingencia t´bl´zat elemeinek 90%-a nagyobb legyen otn´l. a a ¨ e

2.7. Algoritmus-elm´let e
Terjedelmi okok miatt csak felsorolni tudjuk azokat az algoritmusokat, amelyeket az olvas´nak ismernie kell. Ezek pedig : line´ris-, bin´ris keres´s, m´lys´gi-, sz´less´gi bej´r´s, Kruso a a e e e e e aa kal algoritmusa minim´lis s´ ly´ fesz´ ofa meghat´roz´s´hoz stb. Emellett felt´telezz¨ k, hogy a u u ıt˝ a aa e u az olvas´ tiszt´ban van az NP-teljess´g (vagy altal´nosabban a bonyolults´g) elm´let´nek alapo a e ´ a a e e jaival.

2.8. Adatstrukt´ r´k u a
Felt´telezz¨ k, hogy az olvas´ tiszt´ban van a lista (vektor) ´s a t¨mb fogalm´val. Az e u o a e o a adatb´ny´szatban tov´bbi k¨zkedvelt adatstrukt´ r´i az un. sz´fa (trie), vagy m´s n´ven preﬁxa a a o ua ´ o a e fa (preﬁx-tree), a piros-fekete fa, illetve a hash-t´bla. a

2.8.1. Sz´f´k oa
A sz´f´t eredetileg sz´t´r szavainak t´rol´s´n´l alkalmazt´k, annak ´rdek´ben, hogy gyorsan oa oa a aa a a e e el lehessen d¨nteni, hogy egy adott sz´ szerepel-e a sz´t´rban [41], [61]. A szavak az abc felett o o oa ´rtelmezett sorozatok, ´ altal´nosan azt mondhatjuk, hogy egy sz´fa egy adott v´ges eleme ıgy ´ a o e halmaz feletti sorozatok t´rol´s´ra ´s gyors visszakeres´s´re alkalmas adatstrukt´ ra. A sz´fa a aa e ee u o angol neve (trie, amit ugy ejt¨ nk, mint a try sz´t) a visszakeres´s angol ford´ as´b´l sz´rmazik ´ u o e ıt´ a o a (retrieval). A tov´bbiakban az alaphalmazt I-vel, az alaphalmaz felett ´rtelmezett, adott soa e rozatok halmaz´t sz´t´rnak h´ a oa ıvjuk. A 2.1 abr´n egy sz´f´t l´thatunk, mely az C, F C, F B, ´ a oa a CBP , F CAM P , F CABM sorozatokat t´rolja. a A sz´fa egy (lefel´) ir´ny´ o e a ıtott gy¨keres c´ ezett fa. Egy d-edik szint˝ pontb´l csak d+1-edik o ımk´ u o szint˝ pontba mutathat ´l. N´ha a hat´konys´g kedv´´rt minden pontb´l a pont sz¨ l˝j´re is u e e e a ee o uoe mutat ´l. A gy¨keret 0. szint˝ nek tekintj¨ k. A c´ ek az I-nek egy-egy elemei. Minden pont egy e o u u ımk´ elemsorozatot reprezent´l, amely a gy¨k´rb˝l ebbe a pontba vezet˝ ´leken tal´lhat´ elemekb˝l a o e o oe a o o all. Akkor tartalmazza a sz´fa az S sorozatot, ha van olyan pont, amely az S-t reprezent´lja. ´ o a Ha egy sorozatot tartalmaz egy sz´fa, akkor annak tetsz˝leges preﬁx´t is tartalmazza. o o e A preﬁx azonban nem biztos, hogy eleme a sz´t´rnak. Ezt a probl´m´t k´tf´lek´ppen lehet oa e a e e e

¨ ´ 2. FEJEZET. ALAPFOGALMAK, JELOLESEK
0

31

F C 3 A M 8 P 10 6 B 9 M 11 1 B 4

C 2 B 5 P 7

2.1. abra. P´lda sz´f´ra ´ e oa kik¨ sz¨b¨lni. Egyr´szr˝l megk¨ l¨nb¨ztet¨ nk elfogad´ ´s nem elfogad´ pontokat. Egy sorozau o o e o uo o u o e o tot akkor tartalmazza a sz´fa, ha van olyan elfogad´ allapot, amely a sorozatot reprezent´lja. o o´ a M´sr´szr˝l bevezethet¨ nk egy speci´lis elemet, amit minden sorozat v´g´re illeszt¨ nk, tov´bb´ a e o u a e e u a a sorozatot csak lev´l reprezent´lhat. e a A sz´f´nak k´t implement´ci´j´t k¨ l¨nb¨ztetj¨ k meg att´l f¨ gg˝en, hogy milyen technik´t oa e a oa uo o u o u o a alkalmazunk az ´lek t´rol´s´ra. Az un. t´bl´zatos implement´ci´ban (tabular implementation) e a aa ´ a a a o [61] minden ponthoz egy r¨gz´ o ıtett hossz´ s´g´ , mutat´kat tartalmaz´ vektort vesz¨ nk fel. Az ua u o o u i-edik mutat´ mutat az i-edik elemhez tartoz´ ´l v´gpontj´ra. Ha a pontnak nincs ilyen c´ ej˝ o oe e a ımk´ u ´le, akkor a mutat´ ´rt´ke NULL. A vektor hossza az I elemsz´m´val egyezik meg. e oe e a a A l´ncolt list´s implement´ci´ban [41] az ´leket egy l´ncolt list´ban t´roljuk. A lista elea a a o e a a a mei ´lc´ e ımke, gyermekmutat´ p´rok. A l´ncolt lista k¨vetkez˝ elem´re mutat´ mutat´kat mego a a o o e o o sp´rolhatjuk, ha egy vektort alkalmazunk, aminek hossza megegyezik a pont ´leinek sz´m´val, o e a a ´s elemei szint´n c´ e e ımke, mutat´ p´rok. Ez az´rt is j´ megold´s, mert egy l´p´ssel tudunk o a e o a e e tetsz˝leges index˝ elemre l´pni (a c´ o u e ımke, mutat´ p´r mem´riasz¨ ks´glet´nek ismeret´ben), ´s o a o u e e e e nem kell a mutat´kon kereszt¨ l egyes´vel l´pegetn¨ nk. o u e e u Sz´f´k eset´ben a legfontosabb elemi m˝ velet annak eld¨nt´se, hogy egy adott pontnak oa e u o e van-e adott c´ ej˝ ´le, ´s ha van, akkor ez hova mutat. T´bl´zatos implement´ci´n´l ezt a ımk´ u e e a a a o a feladatot egy l´p´sben megoldhatjuk a megfelel˝ index˝ elem megvizsg´l´s´val. L´ncolt list´s, e e o u aa a a a illetve v´ltoz´ hossz´ s´g´ vektor eset´n a megold´s lassabb m˝ velet. A vektor minden p´rj´t a o ua u e a u a a ellen˝rizn¨ nk kell, hogy a p´r c´ eje megegyezik-e az adott c´ evel. A hat´konys´got n¨velo u a ımk´ ımk´ e a o hetj¨ k, ha a p´rokat c´ ek szerint rendezve t´roljuk, ´s bin´ris keres´st v´gz¨ nk. u a ımk´ a e a e e u ´ Erdemes osszehasonl´ ¨ ıtanunk a k´t vektoros implement´ci´ban a pontok mem´riaig´ny´t. e a o o e e Amennyiben a mutat´k, ´s a c´ ek is 4 b´jtot foglalnak, akkor a t´bl´zatos implement´ci´ban o e ımk´ a a a a o egy pont mem´riaig´nye (a vektor fejl´c mem´riaig´ny´t˝l eltekintve) |I|·4 b´jt, a list´s impleo e e o e eo a a ment´ci´´ n·2·4 b´nt, ahol n az adott pontb´l indul´ ´lek sz´ma, amire igaz, hogy 0 ≤ n ≤ |I|. a oe a o oe a Ha a sz´fa pontjai olyanok, hogy kev´s ´l¨ k van, akkor a list´s implement´ci´nak lesz kevesebb o e eu a a o mem´ri´ra sz¨ ks´ge, sok ´ln´l azonban t´bl´zatos implement´ci´ a jobb megold´s. A k´t techo a u e e e a a a o a e nik´t otv¨zhetj¨ k ak´r egy adott sz´f´n bel¨ l is [156], [187] : ha a pont ´leinek sz´ma meghalad a ¨ o u a oa u e a egy korl´tot (´ltal´ban I/2-t), akkor t´bl´zatos implement´ci´t haszn´lunk, ellenkez˝ esetben a a a a a a o a o maradunk a list´s megold´sn´l. a a a Megeml´ unk k´t sz´fa lesz´rmazottat. Ezek a nyesett sz´f´k (pruned trie) ´s a PATRIıt¨ e o a oa e

¨ ´ 2. FEJEZET. ALAPFOGALMAK, JELOLESEK

32

CIA f´k. Mindk´t fa abban k¨ l¨nb¨zik az eredeti sz´f´t´l, hogy kiiktatj´k az olyan utakat a a e uo o oao a f´b´l, amelyekben nincsen el´gaz´s. A nyesett f´n´l ezt kiz´r´lag lev´lhez vezet˝ utakkal teszik, a o a a a a ao e o PATRICIA f´kn´l ez a korl´toz´s nem all fenn. a a a a ´ Halmazokat tartalmaz´ sz´f´k o oa Amennyiben a sz´fa hat´kony adatstrukt´ ra sorozatok t´rol´s´ra, ´s gyors visszakeres´s´re, o e u a aa e ee akkor ugyanez mondhat´ el elemhalmazok eset´re is. Ha teh´t elemhalmazok adottak ´s az o e a e a feladat, hogy gyorsan meg´llap´ a ıtsuk, hogy egy elemhalmaz szerepel-e a megadottak k¨z¨tt, o o akkor el´g deﬁni´lnunk az elemeken egy teljes rendez´st, ami alapj´n a halmazokat sorozatokk´ e a e a a alak´ ıthatjuk. K¨ l¨nb¨z˝ rendez´sek k¨ l¨nb¨z˝ sorozatokat all´ uo o o e uo o o ´ ıtanak el˝, amelyek k¨ l¨nb¨z˝ sz´f´kat o uo o o oa eredm´nyeznek. Erre mutat p´ld´t a k¨vetkez˝ abra, ahol k´t olyan sz´f´t l´thatunk, amee e a o o ´ e oa a lyek a AB, ABC elemhalmazokat t´rolj´k. Az els˝ sz´fa az ABC szerint cs¨kken˝ sorrendet a a o o o o haszn´l (C B A), m´ a m´sodik ennek ellenkez˝j´t. a ıg a oe
0 A 1 C B 2 3 3 1 A 4 0 B C 2 A

2.2. abra. P´lda : k¨ l¨nb¨z˝ rendez´st haszn´l´ sz´f´k ´ e uo o o e ao oa Egy sz´fa mem´riaig´nye ar´nyos a sz´fa pontjainak sz´m´val, ´ jogos az az ig´ny, hogy o o e a o a a ıgy e azt a teljes rendez´st v´lasszuk, amely a legkevesebb pont´ , azaz minim´lis m´ret˝ sz´f´t adja. e a u a e u oa Ez az un. minim´lis sz´fa el˝all´ as´nak feladata. Sajnos ez egy neh´z feladat. ´ a o o´ ıt´ a e 2.4. t´tel. A minim´lis sz´fa probl´ma NP-neh´z . e a o e e Eredetileg a feladatot n-esekre bizony´ ıtott´k, de ebb˝l k¨vetkezik, hogy halmazokra is a o o ´rv´nyes. Legyen ugyanis az alaphalmaz I. Ekkor minden halmazt felfoghatunk, mint egy |I| e e hossz´ bin´ris ´rt´keket tartalmaz´ vektort. u a e e o A fenti p´ld´t szeml´lve az embernek az az ´rz´se t´mad, hogy az a rendez´s adja a legkevee a e e e a e sebb cs´ cs´ sz´f´t, amelyeben az elemek a halmazokban val´ el˝fordul´sok sz´m´nak ar´ny´ban u u oa o o a a a a a cs¨kken˝ sorba vannak Rendezve. Ugyanis a gyakori elemek fognak a halmazok kapott sorozao o tok elej´re ker¨ lni, ´s ezek az elemek, mivel gyakoriak sok sorozat elej´n lesznek megtal´lhat´k. e u e e a o A sz´fa a k¨z¨s preﬁxeket csak egyszer t´rolja, ´ akkor lesz a sz´fa m´rete v´rhat´an a o o o a ıgy o e a o legkisebb, ha min´l t¨bb sorozatnak van k¨z¨s preﬁxe. Az el˝z˝ abra is ezt sugallta. e o o o o o´ Sajnos a fenti m´don kapott sz´fa nem felt´tlen¨ l adja a legkevesebb pontot tartalmaz´ o o e u o sz´f´t. Ezt a legegyszer˝ bben egy ellenp´ld´val tudjuk bizony´ oa u e a ıtani. Legyenek a halmazaink a k¨vetkez˝ek : AB, AC, CZ, BCZ, BZ, Z. A Z elem gyakoris´ga 4, a B, C-´ 3 ´s az A elem´ 2. o o a e e e Ha felrajzoljuk ezen gyakoris´gok alapj´n kapott rendez´s (Z > B > C > A, de a C, B elemek a a e sorrende tetsz˝leges lehet) szerinti sz´f´t, akkor a bal oldali sz´f´t kapjuk. Ha az A ´s B, C o oa oa e elemek sorrendj´t felcser´lj¨ k, akkor eggyel kevesebb pontot tartalmaz´ sz´f´t kapunk (jobb e e u o oa oldal).

¨ ´ 2. FEJEZET. ALAPFOGALMAK, JELOLESEK
T
Z C 5 C 8 7 6
DESC

33
TOP T

0 B 1 B 4 2 A

C 3 A 7 3 C 1 B C 4 Z

0

A 2 C B 5 6

2.3. abra. Ellenp´lda arra, hogy az el˝fordul´s szerinti cs¨kken˝ sorrend adja a minim´lis ´ e o a o o a m´ret˝ sz´f´t e u oa Patr´ ıcia-f´k a Egy ir´ny´ a ıtott utat l´ncnak h´ a ıvunk, ha minden pontj´nak csak egy gyereke van. A Patr´ a ıciafa a sz´f´b´l sz´rmaztathat´ ugy, hogy a sz´fa nem b˝v´ oa o a o´ o o ıthet˝ l´ncait egy-egy ´ll´ vonjuk ossze. o a e e ¨ Az uj ´l a l´nc utols´ pontj´ba mutat, c´ eje a l´nc ´leinek c´ eib˝l all´ sorozat. Ha a ´ e a o a ımk´ a e ımk´ o ´ o l´nc¨sszevon´st csak a lev´lben v´gz˝d˝ l´ncokra hajtjuk v´gre, akkor un Patr´ a o a e e o o a e ´ ıcia* f´t kapunk. a Ha a sz´fa sok l´ncot tartalmaz, akkor a Patr´ o a ıcia-fa sokkal hat´konyabb. Ellenkez˝ esetben e o viszont t¨bb mem´ri´t haszn´l, mivel a c´ eket vektorokban t´roljuk, ami egyetlen elem o o a a ımk´ a t´rol´sa eset´n nem c´lravezet˝ a nagy t¨bbletk¨lts´g miatt. a a e e o o o e

2.8.2. Piros-fekete f´k a
A piros-fekete (RB-tree vagy symmetric binary B-trees) f´k a kiegyens´ lyozott bin´ris f´k a u a a (balanced binary tree) egy t´ ıpusa. Minden cs´ csnak sz´ van, hagyom´nyosan piros vagy fekete. u ıne a Speci´lis forgat´sokat haszn´l´ besz´ r´s m˝ velet biztos´ a a ao ua u ıtja, hogy b´rmely a gy¨k´rb˝l lev´lbe a o e o e vezet˝ ut hossza ne legyen nagyobb, mint a legr¨videbb ilyen ut hossz´nak k´tszerese. Egy o ´ o ´ a e piros-fekete fa a k¨vetkez˝ tulajdons´gokkal rendelkezik : o o a I. Minden cs´ csnak a sz´ piros vagy fekete. u ıne II. Minden lev´l sz´ fekete. e ıne III. Minden piros cs´ csnak mindk´t ﬁa fekete. u e IV. B´rmely k´t, azonos cs´ csb´l indul´, lev´lig vezet˝ uton ugyanannyi fekete cs´ cs van. a e u o o e o´ u A fentiekb˝l k¨vetkezik, hogy b´rmely n bels˝ cs´ ccsal rendelkez˝ piros-fekete fa magass´ga o o a o u o a legfeljebb 2 lg(n + 1). A bizony´ as ´s a fa ´p´ es´nek menete megtal´lhat´ az irodalomban (pl. ıt´ e e ıt´ e a o [101]).

2.8.3. Hash-t´bla a
A hash-t´bla magyar elnevez´se has´ o-t´bla ( ), de mi ezt a sz´t nem fogjuk haszn´lni. A a e ıt´ a o a hash-t´bla elemek gyors elhelyez´s´re ´s visszakeres´s´re haszn´lt adatstrukt´ ra. A t´bl´zatnak a ee e ee a u a a cell´i vannak, amibe elemeket helyezhet¨ nk. Minden cell´nak van egy c´ a u a ıme (vagy indexe). A hash-t´bl´s t´rol´sban k¨zponti szerepet t¨lt be az elemeken ´rtelmezett un. hash-f¨ggv´ny, ami a a a a o o e ´ u e

¨ ´ 2. FEJEZET. ALAPFOGALMAK, JELOLESEK

34

megadja az elem hash-´rt´k´t. Egy elemet arra a c´ e e e ımre helyez¨ nk be a hash-t´bl´ban, amelyet u a a a hash-´rt´ke megad. El˝fordulhat, hogy k¨ l¨nb¨z˝ elemekhez a hash-f¨ ggv´ny ugyanazokat a e e o uo o o u e hash-´rt´ket rendeli. Ezt utk¨z´snek h´ e e ¨ o e ıvjuk. A hash-t´bl´kr´l onmag´ban fejezeteket lehet ´ a a o ¨ a ırni, ennyi bevezet˝ azonban el´g ahhoz, hogy meg´rts¨ k a jegyzet tov´bbi r´szeit. o e e u a e

2.9. Sz´m´ og´p-architekt´ r´k a ıt´ e u a
Sok kutat´ alkalmazza a k¨ ls˝ t´ras modellt az algoritmus´nak hat´konys´g´nak o u o a a e a a vizsg´latakor. M´ra az ori´si mem´riam´reteknek k¨sz¨nhet˝en a legt¨bb adatb´zis elf´r a a a ´ a o e o o o o a e mem´ri´ban, valamilyen sz˝ rt form´ban. Ilyen esetekben az elemz´shez haszn´lt modell leo a u a e a egyszer˝ s¨dik az egyszer˝ bb k¨zvetlen hozz´f´r´s˝ (RAM-) modellre (amely Neumann-modell uo u o aeeu [178] n´ven is ismert, mivel a magyar sz¨ let´s˝ Neumann J´nos javasolta el˝sz¨r ezt az archie u eu a o o tekt´ r´t.). A programokat olyan modern processzorokon futtatj´k, amely sokkal kiﬁnomultabb ua a a RAM-modelln´l. A modell t´ lzott egyszer˝ s´ ese ahhoz vezet, hogy az elemz´seknek seme u u ıt´ e mi k¨ze nincs a val´s´ghoz. Az uj modell uj elv´r´sokat t´maszt az algoritmusokkal szemben. o oa ´ ´ aa a Ezekr˝l egy kiv´l´ attekint´s olvashat´ a [120] tanulm´nyban. A modern processzorok legfono ao ´ e o a tosabb saj´toss´ga a t¨bbszint˝ mem´ria ´s a cs˝vezet´kes (pipeline-) feldolgoz´s. a a o u o e o e a

2.9.1. T¨bbszint˝ mem´ria, adatlokalit´s o u o a
A mem´ria nem egyelten nagy blokk, sokkal ink´bb k¨ l¨nb¨z˝ m´ret˝ , k´sleltet´s˝ o a uo o o e u e eu mem´ri´kb´l all´ hierarchikus rendszer. Min´l nagyobb a mem´ria m´rete, ann´l t¨bb id˝ o a o ´ o e o e a o o kell a hozz´f´r´shez. A hierarchia elemei, m´ret szerint cs¨kken˝ sorrendben a k¨vetkez˝k : aee e o o o o regiszterek, p´r kilob´jtos els˝szint˝ gyors´ ot´r, p´r megab´jtos m´sodszint˝ gyors´ ot´r, a a o u ıt´ a a a a u ıt´ a esetleges harmadszint˝ gyors´ ot´r, rendszermem´ria ´s merevlemez. Az adatot a rendszeru ıt´ a o e mem´ri´b´l a m´sodszint˝ gyors´ ot´rba, a m´sodszint˝ b˝l az els˝szint˝ gyors´ ot´rba bloko a o a u ıt´ a a u o o u ıt´ a konk´nt m´solhatjuk. A blokkm´ret egy Pentium 4-es processzor eset´n 128 b´jt. e a e e a A blokkonk´nti feldolgoz´s m´s megvil´g´ asba helyezi az algoritmusok vizsg´lat´t : egyete a a a ıt´ a a len bit el´r´s´hez ´s beolvas´s´hoz egy lass´ mem´ri´b´l ugyanannyi id˝ kell, mint a bitet eee e aa u o a o o tartalmaz´ teljes blokk el´r´s´hez ´s beolvas´s´hoz. M´sik adat el´r´se ugyanebben a blokkban o eee e aa a ee viszont nem ig´nyli m´r a hozz´f´r´st a lass´ mem´ri´hoz. ´ rendk´ ul fontos k¨vetelm´nny´ e a aee u o a Igy ıv¨ o e e v´lik adatlokalit´s, azaz hogy az adatok, amelyeket id˝ben egym´shoz k¨zel dolgozunk fel, a a a o a o mem´ri´ban is k¨zel legyenek egym´shoz. o a o a Az adatot feldolgoz´sakor be kell hozni a regiszterekbe. El˝fordulhat, hogy m´r eleve ott a o a van, mert az el˝z˝ m˝ veletekhez sz¨ ks´g volt r´. A korl´tozott sz´m´ regiszterek miatt azonban o o u u e a a a u sokkal val´sz´ ubb, hogy az egyik gyors´ ot´rban vagy a rendszermem´ri´ban helyezkedik el. o ın˝ ıt´ a o a S˝t, az is lehet, hogy a merevlemezen tal´lhat´, ha az algoritmus mem´riaig´nye annyira nagy, o a o o e hogy lapoz´sra van sz¨ ks´g. Ha a m´sodszint˝ gyors´ ot´rban vagy a rendszermem´ri´ban a u e a u ıt´ a o a helyezkedik el a k´ ant adat, akkor az adathozz´f´r´s un. cache miss-t okoz. Am´ ez az adat ıv´ aee ´ ıg beker¨ l a regiszterekbe, a processzor v´grehajthat m´s m˝ veleteket (ezer alapm˝ velet, p´ld´ul u e a u u e a osszead´s elv´gz´s´re k´pes ez id˝ alatt), ennek ellen´re a teljes´ enye messze elmaradhat ¨ a e ee e o e ıtm´ ilyenkor a maxim´list´l. Teh´t az adatstrukt´ ra, algoritmus p´r tervez´sekor t¨rekedn¨ nk kell a o a u a e o u a min´l jobb adatlokalit´sra a cache miss-ek elker¨ l´se ´rdek´ben. e a ue e e

¨ ´ 2. FEJEZET. ALAPFOGALMAK, JELOLESEK

35

2.9.2. Cs˝vezet´kes feldolgoz´s, el´gaz´s-el˝rejelz´s o e a a a o e
A programoz´k altal haszn´lt m˝ veleteket a ford´ o mikroutas´ asok sorozat´ra bontja. A o ´ a u ıt´ ıt´ a m˝ veleteket nem k¨ l¨n-k¨ l¨n, egym´s ut´n hajtjuk v´gre, hanem p´rhuzamosan dolgozzuk u uo uo a a e a fel oket, cs˝vezet´k haszn´lat´val. Sajnos azonban az adatf¨ gg˝s´g ´s a felt´teles ugr´sok so˝ o e a a u oe e e a kat rontanak a p´rhuzamos feldolgoz´s hat´konys´g´n. Adatf¨ gg˝s´gr˝l akkor besz´l¨ nk, ha a a e a a u oe o eu egy utas´ as egy el˝z˝ utas´ as eredm´ny´t˝l f¨ gg. El´gaz´s-el˝rejelz´sn´l megj´soljuk a felt´tel ıt´ o o ıt´ e eo u a a o e e o e kimenet´t, ´s bet¨ltj¨ k a cs˝vezet´kbe az ennek megfelel˝ utas´ asokat. Ha a j´sl´s hamise e o u o e o ıt´ o a nak bizonyul, akkor a cs˝vezet´ket ki kell ur´ o e ¨ ıteni, ´s be kell t¨lteni a helyes utas´ asokat. e o ıt´ Ezt a probl´m´t gyakran kik¨ sz¨b¨lhetj¨ k k¨ l¨nb¨z˝ technik´k alkalmaz´s´val, (mint p´ld´ul e a u o o u uo o o a aa e a k´d´trendez´ssel) amelyet automatikusan elv´gez a ford´ o. Sz´m´ asig´nyes algoritmus tero a e e ıt´ a ıt´ e vez´sekor azonban nek¨ nk kell ugyeln¨ nk az adatf¨ ggetlens´gre ´s az el´gaz´s-el˝rejelz´sre. e u ¨ u u e e a a o e A cs˝vezet´kes feldolgoz´s lehet˝v´ teszi, hogy egy orajel alatt t¨bb m˝ veletet is o e a o e ´ o u elv´gezz¨ nk. A fent eml´ e u ıtett probl´m´k miatt azonban a processzor atlagos teljes´ enye messze e a ´ ıtm´ nem ´ri el az optimumot. A felesleges felt´telek ronthatj´k a hat´konys´got. Az el´gaz´se e a e a a a el˝rejelz´s intelligens olyan szempontb´l, hogy ha egy felt´tel kimenete sohasem v´ltozik, akkor o e o e a a processzor ezt ﬁgyelembe veszi ´s a k´s˝bbiekben ennek megfelel˝en j´sol. ´ a mindig igaz e eo o o Igy (vagy hamis) felt´telek nem befoly´solj´k a hat´konys´got. e a a e a

3. fejezet El˝feldolgoz´s, hasonl´s´gi f¨ggv´nyek o a o a u e
Ebben a fejezetben a legfontosabb el˝feldolgoz´si m˝ veleteket ismertetj¨ k, majd r´t´r¨ nk o a u u aeu arra, hogy milyen elterjedt m´rt´kek vannak elemek k¨z¨tti hasonl´s´gra. Mindenek el˝tt azt e e o o oa o kell tiszt´znunk, hogy milyen t´ u attrib´ tumok l´teznek matematikus szemmel. a ıpus´ u e Jel¨lj¨ k az A attrib´ tum k´t ´rt´k´t a-val ´s a -vel. o u u e e e e e I. A kateg´ria t´pus´ (nominal ) attrib´ tumn´l az attrib´ tum ´rt´kei k¨z¨tt csak azonoss´got o ı u u a u e e o o a tudunk vizsg´lni. Teh´t csak azt tudom mondani, hogy a = a vagy azt, hogy a = a . A kaa a teg´ria t´ u attrib´ tum egy speci´lis esete a bin´ris attrib´tum, ahol az attrib´ tum csak o ıpus´ u a a u u k´t ´rt´ket vehet fel. A kateg´ria t´ u attrib´ tumokat az irodalom n´ha felsorol´s (enue e e o ıpus´ u e a merated) vagy diszkr´t t´ e ıpusnak is h´ ıvja. M´sodlagos jelent´s¨ k miatt a tanulm´nyban a eu a ezeket az elnevez´seket nem haszn´ljuk. P´ld´ul a felsorol´s t´ e a e a a ıpus eml´ es´n´l a legt¨bb inıt´ e e o formatikusnak a C++, java, C#-beli felsorol´s t´ u v´ltoz´ jut esz´be, amelyek mindig a ıpus´ a o e egy´rtelm˝ megfeleltet´sben allnak egy eg´sz sz´mmal. e u e ´ e a II. A sorrend t´pus´ (ordinal ) attrib´ tumokn´l az ´rt´keket sorba tudjuk rendezni, azaz az ı u u a e e attrib´ tum ´rt´ken teljes rendez´st tudunk megadni. Ha teh´t a = a , akkor m´g azt is u e e e a e tudjuk, hogy a > a ´s a < a k¨z¨ l melyik igaz. e o u III. Ha az eddigiek mellett meg tudunk adni egy + f¨ ggv´nyt, amivel az elemek csoportot u e alkotnak, akkor intervallum t´pus´ (interval scale) attrib´ tumr´l besz´l¨ nk. ı u u o eu IV. Ha egy intervallum t´ u attrib´ tumn´l meg lehet adni z´rus ´rt´ket, vagy pontosabban ıpus´ u a e e e az attrib´ tum elemei gy˝ r˝ t alkotnak, akkor az attrib´ tum ar´ny sk´l´j´ (ratio scale). u uu u a aau Az ar´ny sk´l´j´ attrib´ tumot gyakran fogjuk val´s attrib´ tumnak h´ a aau u o u ıvni, hiszen a gyakorlati esetek t¨bbs´g´ben az ar´ny sk´l´j´ attrib´ tumok megad´s´hoz val´s sz´mokat o e e a aau u aa o a haszn´lunk. Azonban ne felejts¨ k el az ar´ny sk´l´j´ attrib´ tum eredeti deﬁn´ oj´t, illeta u a aau u ıci´ a ve azt, hogy az ar´ny sk´l´j´ attrib´ tumok nem felt´tlen¨ l val´s sz´mokat tartalmaznak. a aau u e u o a P´ld´ul egy ugyfeleket le´ o adatb´zisban vannak bin´ris (pl. : b¨ ntetett el˝´let˝ -e), kategorikus e a ¨ ır´ a a u oe u (pl. : vall´s, csal´di allapot) ´s intervallum (pl. : ´vsz´m) t´ u attrib´ tumok is. a a ´ e e a ıpus´ u Furcsa m´d nem mindig trivi´lis, hogy egy attrib´ tum milyen t´ u. P´ld´ul az id˝j´r´s o a u ıpus´ e a oaa jellemz´s´re haszn´lt naps¨t´ses, bor´s, es}s ´rt´kekre mondhatjuk, hogy ez egy kateg´ria ee a u e u o e e o attrib´ tum elemei. Ugyanakkor ´rezz¨ k, hogy a bor´s valahol a naps¨t´ses ´s az es}s k¨z¨tt u e u u u e e o o o helyezkedik el, ´ ink´bb sorrend t´ unak mondan´nk az attrib´ tumot. ıgy a ıpus´ a u 36

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK

37

Az intervallum t´ u attrib´ tumok megad´s´ra is sz´mokat haszn´lunk, amelyekn´l ıpus´ u aa a a e ´rtelme van a k¨ l¨nbs´g sz´m´ as´nak, de a h´nyados k´pz´snek nincs t´ l sok. Tulajdonk´ppen e uo e a ıt´ a a e e u e azt, hogy egy attrib´ tum eset´ben mikor besz´l¨ nk intervallum ´s mikor ar´ny sk´l´j´ t´ u e eu e a a a u ıpusr´l o az d¨nti el, hogy egy´rtelm˝ -e a z´rus pont deﬁni´l´sa. Gondoljuk meg, hogy p´ld´ul az o e u e aa e a ´vsz´mokn´l h´ny fajta null´t ismer¨ nk. Hasonl´ a helyzet a h˝m´rs´klet eset´ben (Fahrenheit e a a a a u o o e e e kontra Celsius).

3.1. El˝feldolgoz´s o a
3.1.1. Hi´nyz´ ´rt´kek kezel´se a oe e e
Az adatb´ny´szati algoritmusok csak olyan elemeket tudnak kezelni, amelyeknek minden a a attrib´ tuma adott. A val´ ´let adatb´zisain´l ez nem mindig all fenn, k¨nnyen lehet, hogy u o e a a ´ o bizonyos cell´kat nem t¨lt¨tt ki az adatot beg´pel˝ szem´ly. Sok oka lehet a hi´nyos mez˝knek. a o o e o e a o P´ld´ul az orvos bizonyos teszteken nem v´gzett el a p´ciensen, mert nem tal´lta sz¨ ks´gesnek. e a e a a u e Persze t¨r¨lhetj¨ k azokat az elemeket, amelyek tartalmaznak hi´nyz´ attrib´ tumokat, de oo u a o u lehet, hogy ekkor annyira lecs¨kken az adatb´zis m´rete, hogy az alkalmatlan lesz az elemz´sre, o a e e vagy legal´bbis adott konﬁdencia mellett keveset tudunk mondani az osszef¨ gg´sekr˝l. A a ¨ u e o hi´nyz´ ´rt´keket tartalmaz´ elemek hasznos inform´ci´t tartalmazhatnak, ne dobjuk el oket, a oe e o a o ˝ ha nem musz´j. a A hi´nyz´ cell´kat fel kell t¨lten¨ nk valamilyen ´rt´kkel, vagy a hi´nyz´st mint k¨ l¨n atta o a o u e e a a uo rib´ tum´rt´k kell kezeln¨ nk. Ez ut´bbit teszi p´ld´ul a C4.5 nev˝ d¨nt´si f´kat el˝all´ o m´dszer u e e u o e a u o e a o´ ıt´ o [141] is. Sokf´lek´ppen helyettes´ e e ıthetj¨ k a hi´nyz´ ´rt´keket. Ha a hi´nyz´ attrib´ tum kateg´ria u a o e e a o u o t´ u, akkor vehet¨ nk egy alap´rtelmezett ´rt´ket, vagy az attrib´ tum leggyakrabban ıpus´ u e e e u el˝fordul´ ´rt´k´t. L´trehozhatunk egy elem helyett sok uj teljes elemet ugy, hogy a hi´nyz´ o oe e e e ´ ´ a o attrib´ tum hely´re az osszes lehets´ges ´rt´ket be´ u e ¨ e e e ırjuk. Intervallum attrib´ tumok eset´n szok´s u e a az atlagot vagy a medi´nt v´lasztani. ´ a a Ha oszt´lyoz´si feladattal van dolgunk, akkor a fenti ´rt´kek sz´m´ as´n´l szor´ a a e e a ıt´ a a ıtkozhatunk csak az adott oszt´lyba tartoz´ elemekre. S˝t ezt a gondolatot vihetj¨ k tov´bb ´s az a o o u a e ´rt´kek sz´m´ as´n´l tekinthetj¨ k csak azokat az elemeket (ha vannak ilyenek), amelyek e e a ıt´ a a u attrib´ tumainak ´rt´kei megegyeznek a hi´nyz´ ´rt´ket tartalmaz´ elem attrib´ tumainak u e e a o e e o u ´rt´keivel. Itt ´rdemes gondosan elj´rni ´s csak a fontos attrib´ tumokat vizsg´lni (gondoljuk e e e a e u a meg, ha a vizsg´latn´l nem z´rjuk ki az azonos´ o attrib´ tumot, akkor egyetlen elemet sem a a a ıt´ u fogunk ﬁgyelembe venni).

3.1.2. Attrib´ tum transzform´ci´k u a o
Normaliz´l´s aa Normaliz´l´son azt ´rtj¨ k, hogy az attrib´ tum elemeit egy m´sik intervallum elemeivel aa e u u a helyettes´ uk ugy, hogy a helyettes´ ıtj¨ ´ ıtett ´rt´kek eloszl´sa megegyezzen az eredeti ´rt´kek ele e a e e oszl´s´val. Tegy¨ k fel, hogy az A attrib´ tum a1 , a2 , . . . , al ´rt´keket vesz fel. Az aj , j = 1, . . . , l aa u u e e o u aa e o ´rt´k norm´j´t aj -vel jel¨lj¨ k. Normaliz´l´sra k´t m´dszer terjedt el. e e aa
j A Min-max normaliz´l´s : Itt egy sima line´ris transzform´ci´t v´gz¨ nk : aj = maxA −minA , ahol aa a a o e u

a −min

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK

38

minA (maxA ) jel¨li az A attrib´ tum legkisebb (legnagyobb) ´rt´k´t. Minden elem a [0,1] o u e e e intervallumba fog esni. Standard normaliz´l´s (z-score normalization) : ai = aa atlaga, σA pedig a sz´r´sa. A hagyom´nyos sz´r´s ( ´ oa a oa
Pl |a −¯| a ¯ ai −A , σA Pl

¯ ahol A az A attrib´ tum u
¯
2

i=1 (ai −A)

l

) helyett az abszol´ t u

sz´r´st is haszn´lni szokt´k ( i=1 l i ). Ennek el˝nye, hogy cs¨kkenti az atlagt´l t´vol oa a a o o ´ o a es˝ pontok (k¨ l¨nc¨k, outlier-ek) hat´s´t. o uo o aa

3.1.3. Mintav´telez´s e e
Az adatb´ny´szati algoritmusok altal´ban er˝forr´s-ig´nyesek. Ha a bemeneti adathalmaza a ´ a o a e nak csak egy kis szelet´t, kis mint´j´t dolgozzuk fel, akkor hamarabb kapunk eredm´nyt. A e aa e mintav´telez´s k¨vetkezm´nye, hogy az ´ kapott eredm´ny nem biztos, hogy pontos, azaz e e o e ıgy e lehet, hogy nem azt az eredm´nyt kapjuk, mint amikor a teljes adathalmazt dolgozzuk fel. e Vannak esetek, amikor a pontos eredm´nyn´l fontosabb a gyors adatfeldolgoz´s. Ilyen eseteke e a ben nagyon hasznos egy olyan mintam´ret meghat´roz´sa, amin´l az algoritmus gyors, de a e a a e hib´z´s val´sz´ us´ge kicsi. a a o ın˝ e A hiba m´rt´k´r˝l csak abban az esetben tue e eo dunk b˝vebben nyilatkozni, ha tudjuk, milyen jelleg˝ o u Az Elevit hat´konys´g´t igazol´ e a a o ” osszef¨ gg´s´ket nyer¨ nk ki. Most azt a speci´lis esetet klinikai vizsg´latok k¨zel t´zezer ¨ u ee u a a o ı n´zz¨ k meg, amikor elemek el˝fordul´s´nak val´sz´ us´g´t magyar kismama bevon´s´val e u o aa o ın˝ e e a a akarjuk k¨zel´ o ıteni a relat´ gyakoris´gukkal. Gyako- v´gezt´k. A vizsg´latok sor´n ıv a e e a a ri mint´k, asszoci´ci´s szab´lyok, χ2 alap´ f¨ gget- az Elevit szed´s´vel kilencvenk´t a a o a u u e e e lens´gvizsg´latn´l ez az eset all fenn. e a a ´ sz´zal´kkal cs¨kkent az idegrenda e o Tegy¨ k fel, hogy elemek halmaz´b´l egy tetsz˝leges szeri fejl˝d´si rendelleness´gek u a o o o e e x elem el˝fordul´s´nak val´sz´ us´ge p ´s m meg- el˝fordul´sa.” Forr´s : Baba Pao aa o ın˝ e e o a a ﬁgyel´s/minta all rendelkez´s¨ nkre. A mintav´telez´s tika X. ´vfolyam 10. sz´m, 44. e ´ eu e e e a hib´zik, amennyiben x relat´ gyakoris´ga elt´r p-t˝l, pon- oldal, 2007. okt´ber : a ıv a e o o tosabban a mintav´telez´s hib´ja : e e a hiba(m) = P rel. gyakoris´g(x) − p ≥ a .

Jel¨lje Xi azt a val´sz´ us´gi v´ltoz´t, ami 1, ha x-et v´lasztottuk egy i-edik h´ z´sn´l, k¨ l¨nben o o ın˝ e a o a u a a uo 0, ´s legyen Y = m Xi . Mivel a h´ z´sok egym´st´l f¨ ggetlenek, az Y eloszl´sa m, p param´ter˝ e u a a o u a e u i=1 bin´ris eloszl´st k¨vet. Ezt felhaszn´lva : a a o a Y hiba(m) = P −p ≥ = P Y −m·p ≥ m· m = P Y −E Y ≥ m· = P Y ≥ m · (E[X] + ) + P Y ≤ m · (E[X] − ) A m´sodik egyenl˝s´gn´l kihaszn´ltuk, hogy a binomi´lis eloszl´s v´rhat´ ´rt´ke m · p. a oe e a a a a o e e Tetsz˝leges eloszl´s eset´n a v´rhat´ ´rt´k´t˝l val´ elt´r´s val´sz´ us´g´re t¨bb ismert korl´t o a e a oe e eo o ee o ın˝ e e o a is l´tezik [161]. A Csernov-korl´t (amely a Hoeﬀding korl´t egy speci´lis esete) a k¨vetkez˝ket e a a a o o adja : 2 P Y ≥ m · (E[X] + ) ≤ e−2 m

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK ´s e P Y ≤ m · (E[X] − ) ≤ e−2 amib˝l megkapjuk, hogy : o P(hiba(m)) ≤ 2 · e−2 1 2 ln . 2 2 δ
2m

39

2m

.

Amennyiben a hibakorl´tot δ-val jel¨l¨m, akkor az al´bbinak kell igaznak lennie, hogy a oo a m≥

Ha p´ld´ul azt szeretn´nk, hogy a mintav´telez´s sor´n tetsz˝leges elem minta, – illetve e a e e e a o el˝fordul´s´nak val´sz´ us´ge – 0.01-n´l nagyobb elt´r´s val´sz´ us´ge kisebb legyen 1%o aa o ın˝ e a ee o ın˝ e n´l, akkor a minta m´rete legal´bb 27000 kell legyen. A 3.1 t´bl´zatban adott elt´r´s- ´s a e a a a ee e val´sz´ us´gkorl´tokhoz tartoz´ minim´lis mintam´ret tal´lhat´. o ın˝ e a o a e a o δ 0.05 0.01 0.01 0.01 0.001 0.001 0.001 |M|

0.01 1060 0.01 27000 0.001 38000 0.0001 50000 0.01 2700000 0.001 3800000 0.0001 5000000

3.1. t´bl´zat. A minim´lis minta m´rete r¨gz´ a a a e o ıtett , δ mellett ´ Gyan´ s, hogy a v´gs˝ k´pletben nem szerepel p. Erezz¨ k, hogy a p ﬁgyelmen k´ ul hagy´sa u e o e u ıv¨ a nem baj, ha nagy v´rhat´ ´rt´kekkel dolgozunk, de mi van kis val´sz´ us´gek eset´n ? P´ld´ul = a oe e o ın˝ e e e a =0.05 ´s δ=0.01 eset´n 1060 m´ret˝ mint´t kell venn¨ nk. Ha p egy ezred, akkor azt v´rjuk, hogy e e e u a u a csak egyszer fordul el˝ a mint´ban x. M´r ebben az esetben is a relat´ gyakoris´g (1/1060 = o a a ıv a = 0.000943) t¨bb, mint ot sz´zal´kkal t´r el a t´nyleges val´sz´ us´gt˝l, azaz minden esetben o ¨ a e e e o ın˝ e o hib´zni fogunk. Vagy m´sk´pp mondva, a hiba val´sz´ us´ge 1, (nem pedig 0.01). a a e o ın˝ e Minek vacakolunk mi mindenf´le Csernov-korl´ttal amikor ismerj¨ k Y s˝ r˝ s´gf¨ ggv´ny´t, e a u uue u e e ´ tetsz˝leges intervallumra meg tudjuk mondani az el˝fordul´s val´sz´ us´g´t : ıgy o o a o ın˝ e e
min{ mp+m ,m}

P Y −m·p ≥ m·

= 1−

i=max{ mp−m ,0}

m i p (1 − p)m−i i

= 1 + F (max{ mp − m , 0}, m, p) − F (min{ mp + m , m} − 1, m, p), ahol F (x, m, p)-vel az (m, p) param´ter˝ binomi´lis eloszl´s eloszl´sf¨ ggv´ny´t jel¨lj¨ k. Sajnos e u a a a u e e o u a fenti k´plet alapj´n nem tudunk sz´p z´rt k´pletet adni a minta m´ret´nek als´ korl´tja ´s e a e a e e e o a e az , δ p´ros k¨z¨tti kapcsolatra. a o o

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK
0.25 Binom(100, 0.3) Binom(100, 0.03)

40

0.2

0.15

0.1

0.05

0

0

20

40

60

80

100

3.1. abra. K¨ l¨nb¨z˝ p param´ter˝ binomi´lis eloszl´sok ´ uo o o e u a a

Mit gondolunk ? R¨gz´ o ıtett m ´s eset´n kis vagy nagy p eset´n lesz kicsi a hiba (mivel a e e e binomi´lis eloszl´s szimmetrikus, ez´rt szor´ a a e ıtkozzunk p ≤ 0.5 esetekre) ? A bevezet˝ p´lda azt o e sugallja, hogy min´l kisebb a p, ann´l nagyobb mint´t kell venni. Ez sajnos nem ´ van. e a a ıgy Amennyiben p≤ , akkor a mp−m ≤0 ´s ´ a hiba 1−F ( mp+m , m, p)-re egyszer¨ s¨dik. e ıgy uo Ez viszont null´hoz tart, amennyiben p → 0, hiszen a mp . 1 − F ( mp + m , m, p) ≤ 1 − F ( m , m, p) = P(X ≥ m ) ≤ m Az utols´ elgyenl˝tlens´gn´l a Markov egyenl˝tlens´get haszn´ltuk fel. Az eredm´ny ellentmond o o e e o e a e elv´r´sainknak, hiszen eszerint kis val´sz´ us´geket kisebb mint´val tudunk j´l k¨zel´ aa o ın˝ e a o o ıteni. Na, ´s mi van p≥ eset´n ? Tov´bbra is igaz, hogy a p n¨vel´s´vel n¨vekszik a hiba ? A v´lasz e e a o ee o a igenl˝. Ezt az all´ ast csak szeml´ltetni fogjuk. Vess¨ nk egy pillant´st a 3.1 abr´ra, amelyen o ´ ıt´ e u a ´ a k´t, k¨ l¨nb¨z˝ p param´ter˝ binomi´lis eloszl´st l´thatunk. e uo o o e u a a a K´t dolgot vehet¨ nk ´szre. A kisebb p-hez tartoz´ maxim´lis val´sz´ us´g nagyobb. A nagy e u e o a o ın˝ e val´sz´ us´gek a v´rhat´ ´rt´k kisebb k¨rnyezet´ben tal´lhat´k. Az ´szrev´teleink altal´nosan o ın˝ e a oe e o e a o e e ´ a is igazak. A m´sodik ´szrev´tel p´ld´ul a sz´r´ssal van kapcsolatban. A kisebb p param´ter˝ a e e e a oa e u eloszl´s sz´r´sa kisebb. Legyen a k´t param´ter p ´s q ´s legyen p < q < 0.5. Ekkor a oa e e e e mp(1 − p) = σp <σq = mq(1 − q) p − p2 <q − q 2 0 <(q − p)(1 − p − q) A kisebb val´sz´ us´gekn´l a v´rhat´ ´rt´k sz˝ kebb k¨rnyezet´ben vannak a nagy o ın˝ e e a o e e u o e val´sz´ us´gek, ez´rt a v´rhat´ ´rt´k ± m k¨rnyezet´n k´ uli pontok val´sz´ us´ginek osszege o ın˝ e e a oe e o e ıv¨ o ın˝ e ¨ kisebb, azaz a hiba kisebb ! A k¨vetkez˝ abr´kon az ´rvel´st t´masztjuk al´. A 3.2 abr´n a hib´t abr´zoljuk a minta o o ´ a e e a a ´ a a ´ a m´rete ´s a val´sz´ us´g f¨ ggv´ny´ben r¨gz´ e e o ın˝ e u e e o ıtett mellett. L´tjuk, hogy ha n¨vekszik p (vagy a o cs¨kken m), akkor cs¨kken a hiba val´sz´ us´ge. o o o ın˝ e A 3.3 abr´n megint a mintav´telez´s hib´j´t abr´zoltuk, de most az mellett a minta m´rete ´ a e e aa ´ a e is r¨gz´ o ıtve van. Itt m´g jobban l´tszik, hogy ahogy cs¨kken p ugy n˝ a hiba is. e a o ´ o Ha ezekn´l a param´terekn´l a Csernov-korl´tot alkalmazzuk, akkor azt kapjuk, hogy a hiba e e e a val´sz´ us´ge kisebb 1.2-n´l. Ez el´g semmitmond´. o ın˝ e e e o Id´zz¨ k fel a kiindul´ k´rd´st : Mit gondolunk ? R¨gz´ e u o e e o ıtett m ´s eset´n kis vagy nagy p e e eset´n lesz kicsi a hiba ? H´t, nem mondhatjuk, hogy a v´rt v´lasz kaptuk. Az ember valami´rt e a a a e

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK

41

P(|Y/m - p| > 0.035 ) error 1 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1 0

1 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1 0

0.5 0.45

0.4 0.35

0.3 0.25 p

0.2 0.15

0.1 0.05

0 500 450

300 400 350

250 200

150 100 m

50

0

3.2. abra. A mintav´telez´s hib´ja a minta m´ret´nek ´s az el˝fordul´s val´sz´ us´g´nek ´ e e a e e e o a o ın˝ e e f¨ ggv´ny´ben u e e

1.4

P(|Y/200 - p| > 0.035 ) 2 * exp(-2 * 0.0352 * 200)

1.2

1

0.8

error
0.6 0.4 0.2 0

0

0.05

0.1

0.15

0.2

0.25 p

0.3

0.35

0.4

0.45

0.5

3.3. abra. A mintav´telez´s hib´ja az el˝fordul´s val´sz´ us´g˝ nek f¨ ggv´ny´ben ´ e e a o a o ın˝ e u u e e

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK
1 error = 1 - P(1/(1+0.035) < (Y/1500)/p < 1+0.035 )

42

0.9

0.8

error

0.7

0.6

0.5

0.4

0

0.05

0.1 p

0.15

0.2

0.25

3.4. abra. A mintav´telez´s hib´ja az el˝fordul´s val´sz´ us´g´nek f¨ ggv´ny´ben relat´ ´ e e a o a o ın˝ e e u e e ıv hibam´r´s eset´ben ee e

oszt¨n¨sen ragaszkodik ahhoz a v´laszhoz, hogy kisebb val´sz´ us´g mellett nagyobb lesz a ¨ o o a o ın˝ e hiba. Elemez´seink azonban pont az ellenkez˝j´t adta. Meg kell b´k´ln¨ nk ezzel, vagy tehet¨ nk e oe e e u u valamit a zavar´ v´lasz ellen ? o a T´rj¨ nk vissza a hiba deﬁn´ oj´hoz : hiba(m) = P rel. gyakoris´g(x) − p ≥ , azaz hib´t e u ıci´ a a a k¨vet¨ nk el, ha a relat´ gyakoris´g ´s a t´nyleges val´sz´ us´g k¨z¨tti k¨ l¨nbs´g nagyobb egy o u ıv a e e o ın˝ e o o uo e adott konstansn´l, amelyet -nal jel¨lt¨ nk. A relat´ gyakoris´gnak a val´sz´ us´g egy r¨gz´ a o u ıv a o ın˝ e o ıtett k¨rnyezet´ben kell lennie. o e Szerencs´s az, hogy a hib´t a relat´ gyakoris´g ´s a val´sz´ us´g k¨ l¨nbs´g´vel m´rj¨ k ? Ez e a ıv a e o ın˝ e u o e e e u alapj´n p´ld´ul ugyanakkora hib´t k¨vet¨ nk el, ha p = 0.8 eset´n a relat´ gyakoris´g 0.81 ´s a e a a o u e ıv a e ha p = 0.01 eset´n a relat´ gyakoris´g nulla, azaz az esem´ny nem k¨vetkezett be egyszer sem. e ıv a e o Az embernek az az ´rz´se van, hogy az els˝ esetben kisebbet hib´ztunk. e e o a A fenti ´rvel´s alapj´n c´lszer˝ bb a hib´t a val´sz´ us´g ´s a relat´ gyakoris´g h´nyados´val e e a e u a o ın˝ e e ıv a a a m´rni. Jobban ´rdekel minket az, hogy h´ny sz´zal´kkal nagyobb vagy kisebb a relat´ gyakoe e a a e ıv ris´g a val´sz´ us´gn´l, mint az abszol´ t k¨ l¨nbs´g. Ha elfogadjuk ezt az ´rvel´st, akkor a hib´t a o ın˝ e e u uo e e e a a k¨vetkez˝k´ppen deﬁni´ljuk : o o e a hiba(m) = P rel. gyakoris´g(x)/p ≥ 1 + a = 1−P + P rel. gyakoris´g(x)/p ≤ a 1 1+

1 < rel. gyakoris´g(x)/p < 1 + a 1+

Enn´l a deﬁn´ on´l m´r igaz lesz – nagyvonalakban – hogy min´l kisebb az el˝fordul´s e ıci´ a a e o a val´sz´ us´ge, ann´l nagyobb lesz a hiba, teh´t ann´l nagyobb mint´t kell venn¨ nk. Ezt o ın˝ e a a a a u t´masztja al´ a 3.4 abra is. a a ´ Az abra mutatja, hogy t´nyleg csak nagyvonalakban igaz, hogy kisebb p-kn´l nagyobb a ´ e e hiba. Szigor´ an v´ve ugyanis ez nem igaz. Ennek oka, hogy a binomi´lis eloszl´s diszkr´t eloszl´s u e a a e a ´s ez´rt ahogy cs¨kkentj¨ k a p-t ´s ugy tol´dik nem hib´t jelent˝ intervallum a nulla pont fel´ e e o u e ´ o a o e ´s fordulhat el˝ az, hogy egy ujabb pont beker¨ l az intervallumba. P´ld´ul = 0.035 ´s m = e o ´ u e a e = 1500 eset´ben a [pm/(1+ ), pm(1+ )] intervallumba nem esik eg´sz ´rt´k p = 0.007 eset´ben e e e e e (hiszen a nem hib´t jelent˝ intervallum [10.1,10.9]), m´ p = 0.006 eset´n igen (ekkor a vizsg´lt a o ıg e a intervallum [8.7,9.3]).

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK

43

Az adatb´ny´sz cikkekben mintav´telez´s eset´n a Csernov-korl´tos megk¨zel´ essel a a e e e a o ıt´ t´masztj´k al´, hogy az altaluk haszn´lt minta mi´rt el´g nagy. Most m´r tudjuk, hogy ez a a a ´ a e e a az elemz´s meglehet˝sen elnagyolt. Egyr´szt a hiba deﬁn´ oja sem t´ l j´, m´sr´st a Csernove o e ıci´ u o a e korl´t alkalmaz´sa sem ad pontos eredm´nyt. a a e Jobb megold´s a hib´t a val´sz´ us´g ´s a relat´ gyakoris´g h´nyados´b´l sz´rmaztatni a a o ın˝ e e ıv a a a o a ´s Csernov-korl´t helyett a binomi´lis eloszl´st haszn´lni. Mivel a v´geredm´ny nem egy z´rt e a a a a e e a k´plet lesz, ez´rt a hiba vagy a sz¨ ks´ges mintam´ret kisz´m´ asa bonyolultabb. e e u e e a ıt´ A binomi´lis eloszl´s sem a legpontosabb eredm´nyt adja. Az elemz´s sor´n ugyanis a a e e a felt´telezt¨ k, hogy az esem´ny bek¨vetkez´s´nek val´sz´ us´ge ismert. A val´s´gban a mint´t e u e o ee o ın˝ e oa a egy nagy alaphalmazb´l vessz¨ k. P´ld´ul a n´pszavaz´st megel˝z˝ k¨zv´lem´ny-kutat´sokban o u e a e a o o o e e a a mint´t a feln˝tt lakoss´gb´l vessz¨ k, amely egy v´ges halmaz. Ha ugy tessz¨ k fel a k´rd´st, a o a o u e ´ u e e hogy egy M alaphalmazb´l mekkora m mint´t kell venn¨ nk, hogy a mint´ban az x relat´ gyao a u a ıv koris´ga kis m´rt´kben t´rjen el az x M -beli relat´ gyakoris´g´t´l, akkor a binomi´lis eloszl´s a e e e ıv a ao a a helyett hipergeometrikus eloszl´st kell haszn´lnunk. a a

3.2. Hasonl´s´gi m´rt´kek o a e e
Az adatb´ny´szatban gyakran sz¨ ks´g¨ nk lesz arra, hogy attrib´ tumokkal le´ elemek a a u e u u ırt k¨z¨tt hasonl´s´got deﬁni´ljunk. Term´szetesen elv´rjuk, hogy ha min´l ink´bb t¨bb azonos o o oa a e a e a o ´rt´k szerepel az attrib´ tumaik k¨z¨tt ann´l hasonl´bbak legyenek az elemek. A gyakorlate e u o o a o ban hasonl´s´gi m´rt´k helyett k¨l¨nb¨z˝s´gi m´rt´kkel dolgozunk, amely a hasonl´s´g inveroa e e uo o o e e e oa ze (min´l hasonl´bbak, ann´l kev´sb´ k¨ l¨nb¨z˝k). Elv´rjuk, hogy k´t elem k¨ l¨nb¨z˝s´g´t e o a e e uo o o a e uo o o e e (d(x, y)) ki lehessen fejezni egy pozit´ val´s sz´mmal, tov´bb´ egy elem onmag´t´l ne ıv o a a a ¨ ao k¨ l¨nb¨zz¨n, szimmetrikus legyen (d(x, y) = d(y, x)), ´s teljes¨ lj¨n a h´romsz¨g egyenl˝tlens´g uo o o e u o a o o e (d(x, y)≤d(x, z)+d(y, z)). Teh´t a k¨ l¨nb¨z˝s´g metrika legyen. K´t elem k¨ l¨nb¨z˝s´ge helyett a uo o o e e uo o o e gyakran mondunk majd k´t elem t´vols´g´t. e a a a A k¨vetkez˝kben sorra vessz¨ k, hogyan deﬁni´ljuk a t´vols´got k¨ l¨nb¨z˝ t´ u atto o u a a a u o o o ıpus´ rib´ tumok eset´ben, ´s azt, hogy mik´nt lehet egyes attrib´ tumok fontoss´g´t (s´ ly´t) u e e e u a a u a ´ megn¨velni. Altal´nosan igaz az, hogy ha az attrib´ tum elemein teljes rendez´st tudunk deo a u e ﬁni´lni (sorrend, intervallum, ar´ny-sk´l´zott), akkor tetsz˝leges a 1 ≤ a2 ≤ a3 ´rt´kek eset´n a a aa o e e e d(a1 , a3 ) ≥ max{d(a1 , a2 ), d(a2 , a3 )}.

3.2.1. Bin´ris attrib´ tum a u
Egy bin´ris attrib´ tum olyan kateg´ria t´ u attrib´ tum, amely k´t ´rt´ket vehet fel (pl. : a u o ıpus´ u e e e 0 ´s 1). Hogyan hat´rozzuk meg x ´s y elemek hasonl´s´g´t, ha azok m darab bin´ris atte a e oa a a rib´ tummal vannak le´ ? K´sz´ uk el a k¨vetkez˝ osszefoglal´ t´bl´zatot. u ırva e ıts¨ o o¨ o a a 1 0 1 q s q+s 0 r t r+t q+r s+t m

P´ld´ul az 1-es sor 0-s oszlop´hoz tartoz´ ´rt´k azt jelenti, hogy r darab olyan attrib´ tum van, e a a oe e u amelyek az x elemn´l 1-et, y-n´l 0-´t vesznek fel. e a a

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK

44

Ez alapj´n deﬁni´lhatjuk az un. invari´ns ´s vari´ns hasonl´s´got. Az invari´ns hasonl´s´got a a ´ a e a oa a oa olyan esem´nyekn´l haszn´ljuk, amikor a bin´ris attrib´ tum k´t ´rt´ke ugyanolyan fontos (szime e a a u e e e metrikus attrib´ tum), teh´t mindegy, hogy melyiket k´doljuk 0-val, illetve 1-essel. Ilyen attu a o rib´ tum p´ld´ul egy ember neme. Az´rt kapta ez a hasonl´s´g az invari´ns jelz˝t, mert nem u e a e oa a o v´ltozik az ´rt´ke, ha valaki m´shogy k´dolja az attrib´ tumokat (teh´t k´dol´s invari´ns). A a e e a o u a o a a legegyszer˝ bb invari´ns hasonl´s´g az elt´r˝ attrib´ tumok relat´ sz´ma : u a oa eo u ıv a d(x, y) = r+s . m

Aszimmetrikus attrib´ tum eset´ben a k´t lehets´ges ´rt´k nem egyenrang´ . Ilyen attrib´ tum u e e e e e u u lehet p´ld´ul egy orvosi vizsg´lat eredm´nye. Nagyobb s´ lya van annak a t´nynek, hogy valaki e a a e u e fert˝z¨tt beteg, mint annak, hogy nem az. A konvenci´knak megfelel˝en 1-essel k´doljuk a o o o o o l´nyeges (´ltal´ban ritka) kimenetet. A legegyszer˝ bb vari´ns hasonl´s´gi m´rt´k a Jaccarde a a u a oa e e koeﬃciens komplementere : q r+s d(x, y) = 1 − = , m−t m−t ahol nem tulajdon´ ıtunk jelent˝s´get a nem jelent˝s kimenetek egyez´s´nek. oe o ee Amennyiben szimmetrikus ´s aszimmetrikus ´rt´kek is szerepelnek a bin´ris attrib´ tumok e e e a u k¨z¨tt, akkor azokat vegyes attrib´ tumk´nt kell kezelni (l´sd a 3.2.5-os r´szt). o o u e a e

3.2.2. Kateg´ria t´ o ıpus´ attrib´ tum u u
´ Altal´nos esetben a kateg´ria t´ u attrib´ tum nem csak kett˝, hanem v´ges sok k¨ l¨nb¨z˝ a o ıpus´ u o e uo o o ´rt´ket vehet fel. Ilyen attrib´ tum p´ld´ul az ember szeme sz´ csal´di allapota, vall´sa stb. e e u e a ıne, a ´ a A legegyszer˝ bb hasonl´s´g a nemegyez´sek relat´ sz´ma : u oa e ıv a d(x, y) = u , m

ahol m a kateg´ria t´ u attrib´ tumok sz´ma, u pedig azt adja meg, hogy ezek k¨z¨ l mennyi o ıpus´ u a o u nem egyezett. Term´szetesen a kateg´ria t´ u attrib´ tumok sem felt´tlen¨ l szimmetrikusak, e o ıpus´ u e u mert lehet, hogy az alap´rtelmezett ´rt´kek egyez´se nem igaz´n fontos. A Jaccard-koeﬃciens e e e e a komplementer´t kateg´ria t´ u attrib´ tumokra is fel´ e o ıpus´ u ırhatjuk.

3.2.3. Sorrend t´ ıpus´ attrib´ tum u u
Sorrend t´ u attrib´ tum p´ld´ul az iskolai v´gzetts´g : 8 altal´nos, befejezett k¨z´piskola, ıpus´ u e a e e ´ a o e ´retts´gi, f˝iskolai diploma, egyetemi diploma, doktori c´ Vannak ar´ny sk´l´j´ attrib´ tumok, e e o ım. a aau u amelyeket ink´bb sorrend t´ u attrib´ tumnak kezel¨ nk. P´ld´ul a Forma 1-es versenyeken a ıpus´ u u e a sem az egyes k¨r¨k fut´si ideje sz´m´ hanem az, hogy ki lett az els˝, m´sodik ... oo a a ıt, o a A sorrend t´ u attrib´ tumokat altal´ban eg´sz sz´mokkal helyettes´ – tipikusan 1 ´s M ıpus´ u ´ a e a ıtik e k¨z¨tti eg´sz sz´mokkal. Ha t¨bb sorrend t´ u attrib´ tumunk van, amelyek a fontos allapotok o o e a o ıpus´ u ´ x−1 sz´m´ban elt´rnek, akkor c´lszer˝ mindegyiket a [0,1] intervallumba k´pezni a M −1 m˝ velettel. a a e e u e u ´ mindegyik egyenl˝ s´ llyal szerepel majd a v´gs˝ hasonl´s´gi m´rt´kben. Ezut´n alkalmazIgy o u e o oa e e a hatjuk valamelyik intervallum t´ u hasonl´s´got. ıpus´ oa

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK

45

3.2.4. Intervallum t´ ıpus´ attrib´ tum u u
Az intervallum t´ u attrib´ tumokat altal´ban val´s sz´mok ´ ak le. Ilyen attrib´ tumra ıpus´ u ´ a o a ırj´ u p´lda egy ember s´ lya, magass´ga, egy orsz´g ´ves atlagh˝m´rs´klete stb. Tekinthet¨ nk ugy egy e u a a e ´ o e e u ´ elemre, mint egy pontra az m-dimenzi´s vektort´rben. Az elemek k¨z¨tti k¨ l¨nb¨z˝s´get a veko e o o uo o o e toraik k¨ l¨nbs´g´nek norm´j´val (hossz´val) deﬁni´ljuk (d(x, y) = ||x−y||). Legterm´szetesebb uo e e aa a a e tal´n az Euklideszi-norma, de alkalmazhatjuk a Manhattan-norm´t is. Mindk´t m´rt´k a a a e e e Minkowski-norma speci´lis esete. a Euklideszi-norma : L2 (z) = |z1 |2 + |z2 |2 + · · ·+ |zm |2

Manhattan-norma : L1 (z) = |z1 | + |z2 | + · · ·+ |zm | Minkowski-norma : Lp (z) = (|z1 |p + |z2 |p + · · · + |zm |p )1/p A p = ∞ eset´n k´t vektor t´vols´ga megegyezik a koordin´t´inak a legnagyobb elt´r´s´vel e e a a aa eee (L∞ (z) = max{|zi |}). i Hab´r az elemek le´ as´ban m´r csak sz´mok szerea ır´ a a a pelnek, a h´tt´rben megb´ j´ m´rt´kegys´geknek nagy szea e uo e e e Az ide´lis kork¨l¨nbs´g f´rj ´s a uo e e e ” rep¨ k van. Gondoljuk meg, ha m´ter helyett millim´terben feles´g k¨z¨tt hat ´v. Egy sv´d u e e e o o e e sz´molunk, akkor sokkal nagyobb ´rt´kek fognak szerepelni kutat´s szerint ilyen esetben van a e e a az elemek le´ as´ban, ´s ´ a k¨ l¨nbs´gek is megn˝nek. A maxim´lis lehet˝s´g az ut´dok ır´ a e ıgy uo e o a o e o nagy ´rt´kk´szlet˝ attrib´ tumoknak nagyobb hat´suk van sz¨let´s´re.” e e e u u a u e e Forr´s : a http: a hasonl´s´g ´rt´k´re, mint a kis ´rt´kk´szlet˝ eknek. Jo- //hvg.hu/egeszseg/20070913_ oa e e e e e e u gos teh´t az egyes attrib´ tumok normaliz´l´sa, azaz transz- idealis_korkulonbseg.aspx a u aa form´ljuk oket pl. a [0,1] intervallumba, majd ezen transza ˝ form´lt attrib´ tumok alapj´n sz´m´ a u a a ıtsuk a t´vols´gokat a a (3.1.2 r´sz). e Gyakran el˝fordul, hogy a k¨ l¨nb¨z˝s´g meg´llap´ as´n´l bizonyos attrib´ tumokra nagyobb o uo o o e a ıt´ a a u s´ lyt szeretn´nk helyezni. P´ld´ul k´t ember osszehasonl´ as´n´l a hajsz´ u e e a e ¨ ıt´ a a ınnek nagyobb szerepe van, mint annak, hogy melyik l´bujja a legnagyobb. Ha ﬁgyelembe vessz¨ k az attrib´ tumok a u u s´ lyait, akkor p´ld´ul az Euklideszi-t´vols´g ´ m´dosul : u e a a a ıgy o d(x, y) = w1 |x1 − y1 |2 + w2 |x2 − y2 |2 + · · ·+ wm |xm − ym |2 ,

ahol wi -vel jel¨lt¨ k i-edik attrib´ tum s´ ly´t ´s legyen m wi = 1. o u u u a e i=1 El˝fordulhat, hogy olyan attrib´ tummal van dolgunk, amely ´rt´keit nemline´ris l´pt´kben o u e e a e e abr´zoljuk (nemline´ris n¨veked´s˝ attrib´ tumnak szok´s h´ ´ a a o eu u a ıvni ezeket). P´ld´ul a bakt´rium e a e popul´ci´k n¨veked´s´t vagy algoritmusok fut´si idej´t exponenci´lis sk´l´n ´rdemes abr´zolni. a o o ee a e a aa e ´ a Az ilyen attrib´ tumokn´l nem c´lszer˝ k¨zvetlen¨ l intervallum alap´ hasonl´s´got alkalmazni, u a e u o u u oa mert ez ori´si k¨ l¨nb¨z˝s´geket eredm´nyez azokon a helyeken, ahol kis k¨ l¨nb¨z˝s´get v´runk. ´ a uo o o e e uo o o e a K´t megk¨zel´ es k¨z¨tt szok´s v´lasztani. Egyr´szt haszn´lhatjuk az intervallum alap´ e o ıt´ o o a a e a u hasonl´s´got, de nem az attrib´ tum eredeti ´rt´k´n, hanem annak logaritmus´n. M´sr´szt oa u e e e a a e diszkretiz´lhatjuk az ´rt´keket, ´s vehetj¨ k csak a sorrendet a hasonl´s´g alapj´ul. a e e e u oa a

3.2.5. Vegyes attrib´ tumok u
Az el˝z˝ r´szekben azt tekintett¨ k at, hogyan deﬁni´ljuk a hasonl´s´got k´t elem k¨z¨tt o o e u ´ a oa e o o adott t´ u attrib´ tumok eset´n. Mit tegy¨ nk akkor, ha egy objektum le´ as´n´l vegyeıpus´ u e u ır´ a a

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK

46

sen adottak a k¨ l¨nb¨z˝ t´ u – intervallum, bin´ris, kateg´ria stb. – attrib´ tumok ? Csou o o o ıpus´ a o u portos´ ıtsuk az egyes attrib´ tumokat t´ u ıpusuk szerint, ´s hat´rozzuk meg a k´t elem hae a e sonl´s´g´t minden csoportra n´zve. A kapott hasonl´s´gokat k´pezz¨ k a [0,1] intervallumba. oa a e oa e u Minden attrib´ tumnak feleltess¨ nk meg egy dimenzi´t a t´rben, ´ k´t elem hasonl´s´g´hoz u u o e ıgy e oa a hozz´rendelhet¨ nk egy vektort a vektort´rben. A hasonl´s´g ´rt´k´t feleltess¨ k meg a vektor a u e oa e e e u hossz´nak. a Ennek a megk¨zel´ esnek a h´tr´nya, hogy ha p´ld´ul egyetlen kateg´ria t´ u attrib´ tum o ıt´ a a e a o ıpus´ u van, akkor az ugyanolyan s´ llyal fog szerepelni, mint ak´r t´ bin´ris attrib´ tum osszesen. u a ız a u ¨ C´lszer˝ ez´rt az egyes attrib´ tumt´ e u e u ıpusok altal szolg´ltatott ´rt´keket s´ lyozni a hozz´juk ´ a e e u a tartoz´ attrib´ tumok sz´m´val. o u a a

3.2.6. Speci´lis esetek a
Egyre t¨bb olyan alkalmaz´s ker¨ l el˝, ahol a fent deﬁni´lt altal´nos hasonl´s´gok nem o a u o a ´ a oa ragadj´k meg j´l k´t elem k¨ l¨nb¨z˝s´g´t. A teljess´g ig´nye n´lk¨ l bemutatunk k´t olyan a o e uo o o e e e e e u e esetet, amikor speci´lis t´vols´gf¨ ggv´nyre van sz¨ ks´g. a a a u e u e Elemsorozatok hasonl´s´ga o a Elemsorozaton egy v´ges halmazb´l vett elemek sorozat´t ´rtj¨ k. P´ld´ul a magyar nyelven e o a e u e a ´rtelmezett szavak elemsorozatok. N´zz¨ k az S = abcde sorozatot. Legt¨bben azt mondan´nk, e e u o a hogy a bcdxye sorozat jobban hasonl´ S-re, mint az xxxddd sorozat. Nem ezt kapn´nk, ha ıt a a poz´ okban megegyez˝ elemek relat´ sz´m´val deﬁni´ln´nk a hasonl´s´got. ıci´ o ıv a a a a oa Egy elterjedt m´rt´k az elemsorozatok hasonl´s´g´ra az un. szerkeszt´si t´vols´g. K´t e e oa a ´ e a a e sorozatnak kicsi a szerkeszt´si t´vols´ga, ha az egyik sorozatb´l kev´s elem t¨rl´s´vel ill. e a a o e o ee besz´ r´s´val megkaphatjuk a m´sikat. Pontosabban, k´t sorozat szerkeszt´si t´vols´ga adja uaa a e e a a meg, hogy legkevesebb h´ny besz´ r´s ´s t¨rl´s m˝ velettel kaphatjuk meg az egyik sorozatb´l a ua e o e u o a m´sikat. A szerkeszt´si t´vols´g alapj´n csoportos´ a e a a a ıthatunk dokumentumokat, weboldalakat, DNS sorozatokat, vagy kereshet¨ nk illeg´lis m´solatokat. u a a Bez´rt sz¨g alap´ hasonl´s´g a o u o a Vannak alkalmaz´sok, ahol nem a vektorok k¨ l¨nbs´g´nek a hossza a l´nyeges, hanem a a uo e e e vektorok altal bez´rt sz¨g. P´ld´ul dokumentumok hasonl´s´g´val kapcsolatban sz´mos ok´ a o e a oa a a fejt´st olvashatunk, hogy mi´rt jobb sz¨gekkel dolgozni, mint a t´vols´gokkal. Eml´keztet˝ul a e e o a a e o¨ koszinusz-m´rt´k pontos k´plete : e e e d(x, y) = arccos xT y . ||x|| · ||y||

3.2.7. Dimenzi´cs¨kkent´s o o e
Az adatb´ny´szati alkalmaz´sokban az adathalmaz m´rete altal´ban nagy. Felmer¨ l a a a a e ´ a u k´rd´s, hogy lehet-e ezt a nagy adathalmazt egy kisebb m´ret˝ vel helyettes´ e e e u ıteni ugy, hogy ´ a kisebb adathalmaz valamilyen szempont szerint h˝ en reprezent´lja a nagy adathalmazt. u a Term´szetesen az adatb´ny´szati feladatt´l f¨ gg az, hogy mit jelent pontosan a h˝ repree a a o u u zent´ci´. a o

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK

47

Ebben a r´szben dimenzi´-cs¨kkent´sr˝l lesz sz´, melynek sor´n az objektumok sok atte o o e o o a rib´ tummal val´ le´ as´t szeretn´nk helyettes´ u o ır´ a e ıteni kevesebb attrib´ tumot haszn´l´ le´ assal. u a o ır´ Hasonl´s´gtart´ dimenzi´-cs¨kkent´sr˝l fogunk besz´lni, ami azt jelenti, hogy tudunk adni egy o a o o o e o e olyan hasonl´s´gi deﬁn´ ot az uj le´ asban, ami j´ becsl´se az eredeti hasonl´s´gnak. oa ıci´ ´ ır´ o e oa n m M k M

Az eredeti adathalmazt reprezent´l´ adathalmazt az m×n-es M m´trixszal jellemezz¨ k, az ao a u uj le´ ast pedig az m×k-s M m´trixszal. Az n nagyon nagy lehet (az interneten egy¨ tt el˝fordul´ ´ ır´ a u o o 9 sz´p´rok keres´s´n´l p´ld´ul 10 k¨r¨ li volt az ´rt´ke), ami azt jelenti, hogy az adatb´zis nem o a ee e e a ou e e a biztos, hogy elf´r a mem´ri´ban. Ezt a probl´m´t szeretn´nk megker¨ lni azzal, hogy az M -et az e o a e a e u M m´trixszal helyettes´ uk ugy, hogy k n annyira, hogy M elf´rjen a mem´ri´ban. Ez´ltal a ıtj¨ ´ e o a a lehet˝v´ v´lik olyan algoritmusok futtat´sa, amelyek felt´telezik, hogy az adatokat le´ o m´trix o e a a e ır´ a a gyors el´r´s˝ mem´ri´ban tal´lhat´. eeu o a a o K´t speci´lis feladatot t´rgyalunk. Az els˝ben az attrib´ tumok val´s sz´mok ´s k´t objektum e a a o u o a e e k¨ l¨nb¨z˝s´g´n (hasonl´s´g inverze) az Euklideszi t´vols´gukat ´rtj¨ k. A m´sodik esetben az uo o o e e oa a a e u a attrib´ tumok csak bin´risak lehetnek, ´s k´t objektum hasonl´s´g´t a Jaccard-koeﬃciens (l´sd u a e e oa a a 3.2.1 r´sz) adja meg. e Szingul´ris felbont´s a a A szingul´ris felbont´s az elm´leti szempontb´l egyik legt¨bbet vizsg´lt, klasszikus lia a e o o a ne´ris algebrai eszk¨z¨ket haszn´l´ dimenzi´-cs¨kkent´si elj´r´s. Ennek alkalmaz´sa ut´n nyert a o o ao o o e aa a a M m´trix soraib´l j´l k¨zel´ a o o o ıthet˝ az euklideszi t´vols´g, illetve az attrib´ tumok vektoraib´l o a a u o sz´m´ a ıtott skal´ris szorzattal m´rt hasonl´s´g. Ut´bbi megegyezik a koszinusz m´rt´kkel, ha a e oa o e e a m´trix sorai norm´ltak. Ebben a szakaszban n´h´ny jel¨l´s ´s alapvet˝ fogalom ut´n deﬁa a e a oe e o a ni´ljuk a szingul´ris felbont´st, igazoljuk a felbont´s l´tez´s´t, majd megmutatjuk, hogy mik´nt a a a a e ee e haszn´lhat´ a felbont´s dimenzi´-cs¨kkent´sre. Megjegyezz¨ k, hogy a szakasz nem mutat a a o a o o e u gyakorlatban numerikus szempontb´l j´l alkalmazhat´ m´dszert a felbont´s kisz´m´ as´ra. Kio o o o a a ıt´ a sebb adathalmaz eset´n altal´nos line´ris algebrai programcsomag (Matlab, Octave, Maple) e ´ a a haszn´lata javasolt, m´ nagyobb adatb´zisokn´l az adatok saj´toss´g´t kihaszn´l´ szingul´ris a ıg a a a a a ao a felbont´ program (SVDPack) haszn´lata aj´nlott. o a a Egy U ∈ Rn×n m´trixot ortogon´lisnak nevez¨ nk, ha oszlopai ortogon´lis rendszert alkota a u a T T nak, azaz U U = In , ahol In az n × n m´ret˝ egys´gm´trixot, ´s U az U transzpon´ltj´t e u e a e a a −1 −1 T jel¨li. M´sk´ppen mondva U invert´lhat´ ´s U inverz´re U = U teljes¨ l. M´trix ortogoo a e a oe e u a nalit´s´nak szeml´letes t´rgyal´s´hoz sz¨ ks´g¨ nk lesz a vektorok hossz´nak altal´nos´ as´ra, a aa e a aa u e u a ´ a ıt´ a 2 norma fogalm´ra. Egy v∈Rn vektor v 2 -vel jel¨lt 2-norm´j´t a v 2 = a o aa oe i vi egyenl˝s´ggel de2 T ﬁni´ljuk. Egyszer˝ en l´that´, hogy v 2 = v v teljes¨ l. A 2-norma altal´nos´ asa a tetsz˝leges a u a o u ´ a ıt´ o M ∈ Rm×n m´trix eset´n ´rtelmezett M F Frobenius-norma, amelynek deﬁn´ oja M F = a e e ıci´ =
m i=1 n j=1 2 Mi,j .

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK

48

Σm×n Um×m

| Mm×n =  u1 |



   |   . . . um  ·   |  



σ1

..

. σr 0 .. . 0



   T  — v1 —     . .  ·   .  T  — vn — 

T Vn×n

3.5. abra. A szingul´ris felbont´s sematikus v´zlata. ´ a a a Visszat´rve az ortogonalit´s szeml´letes jelent´s´re, egy ortogon´lis m´trix altal reprezent´lt e a e ee a a ´ a line´ris transzform´ci´ra ugy gondolhatunk, mint egy forgat´sra, amely a vektorok hossz´t nem a a o ´ a a v´ltoztatja. A szeml´let alapja, hogy tetsz˝leges U ∈ Rn×n ortogon´lis m´trix ´s x ∈ Rn vektor a e o a a e eset´n e Ux 2 = x 2 teljes¨ l. Az azonoss´g az al´bbi elemi l´p´sekb˝l k¨vetkezik : U x 2 =(U x)T (U x)=xT (U T U )x= u a a e e o o 2 = xT x = x 2 . Hasonl´an bel´that´, hogy tetsz˝leges X ∈ Rm×n m´trix eset´n ´s U ∈ Rm×m o a o o a e e 2 n×n illetve V ∈ R ortogon´lis m´trixok eset´n igaz, hogy a a e U XV T
F

= X

F

.

A r¨vid bevezet˝ ut´n r´t´r¨ nk a szingul´ris felbont´s deﬁn´ oj´ra. Egy nem sz¨ ks´gszer˝ en o o a aeu a a ıci´ a u e u m×n n´gyzetes M ∈ R e m´trix szingul´ris ´rt´k felbont´s´n (singular value decomposition, SVD) a a e e a a az olyan M = U ΣV T szorzatt´ bont´st ´rtj¨ k, ahol U ∈ Rm×m , V ∈ Rn×n ortogon´lis m´trixok, tov´bb´ a Σ m´trix a a e u a a a a a ◦ M -mel megegyez˝ m´ret˝ ´s a bal fels˝ sarokb´l 45 -ban lefele elhelyezked˝ σ1 ≥σ2 ≥. . .≥σr >0 o e ue o o o pozit´ sz´mokat csupa 0 k¨vet ´s a t¨bbi elem szint´n 0. A σi sz´mokat szingul´ris ´rt´keknek ıv a o e o e a a e e nevezz¨ k, ´s a σi = 0 v´laszt´ssal terjesztj¨ k ki az i > r esetre. A felbont´sb´l l´that´, hogy u e a a u a o a o rang(M ) = rang(Σ) = r. Az U ´s a V oszlopait bal-, illetve jobboldali szingul´ris vektoroknak e a mondjuk. A jel¨l´sek attekint´se a 3.5. abr´n l´that´. oe ´ e ´ a a o 3.1. t´tel. Tetsz˝leges M ∈ Rm×n m´trixnak l´tezik szingul´ris ´rt´k felbont´sa, azaz l´teznek e o a e a e e a e m×m n×n U ∈R , V ∈R ortogon´lis m´trixok, melyekkel a a M = U ΣV T , ahol Σ ∈ Rm×n , Σ= Σ+ 0 0 0 ,

tov´bb´ Σ+ egy r × r m´ret˝ diagon´lis m´trix, amelynek f˝atl´j´ban a σ 1 ≥ σ2 ≥ . . . ≥ σr > 0 a a e u a a o´ o a sz´mok helyezkednek el sorrendben. a

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK

49

Bizony´t´s: Az M T M m´trix szimmetrikus, ez´rt ortogon´lis transzform´ci´val diagonaıa a e a a o liz´lhat´ ´s saj´t´rt´kei val´sak. Tov´bb´ pozit´ szemideﬁnit, mert tetsz˝leges x ∈ R n×n vektor a oe ae e o a a ıv o eset´n xT M T M x=(M x)T (M x)= M x 2 ≥0, ez´rt a saj´t´rt´kek nem negat´ e e ae e ıvak. A saj´t´rt´kek ae e 2 2 2 2 legyenek σ1 ≥σ2 ≥. . .≥σr >0. Az ezekhez tartoz´ saj´tvektorokb´l alkotott ortogon´lis m´trixot o a o a a jel¨lje V , ekkor o Σ+ 2 0 V T MT MV = . 0 0 A m´trixot k´t r´szre osztva V = (Vr V2 ), ahol Vr ∈ Rn×r a pozit´ saj´t´rt´khez tartoz´ a e e ıv ae e o saj´tvektorokat tartalmazza. Vagyis a VrT M T M Vr = Σ+ 2 . Vezess¨ k be az u Ur = M Vr Σ+ −1 jel¨l´st, ekkor oe M = Ur Σ+ VrT . Az Ur vektorai ortogon´lis vektorrendszert alkotnak, ezt tetsz˝legesen kieg´sz´ a o e ıtve U = (U r U2 ) ortogon´lis m´trixsz´ a a a Σ+ 0 M =U V T. 0 0

Most megmutatjuk, hogy szingul´ris felbont´s seg´ eg´vel hogyan lehet dimenzi´a a ıts´ e o cs¨kkent´st v´grehajtani. Eml´keztet¨ nk r´, hogy az M m´trix n-dimenzi´s sorvektorai objeko e e e u a a o tumokat jellemeznek. Dimenzi´-cs¨kkent´skor az n attrib´ tumot szeretn´nk k < n dimenzi´j´ o o e u e ou vektorokkal jellemezni ugy, hogy k¨zben az objektumok euklideszi t´vols´ga vagy skal´ris szor´ o a a a zattal m´rt hasonl´s´ga csak kis m´rt´kben v´ltozzon. A m´trixszorz´s elemi tulajdons´ga, e oa e e a a a a hogy a szingul´ris felbont´s az al´bbi form´ban is ´ a a a a ırhat´. o
r

M = U ΣV

T

=
i=1

T σi u i v i ,

T ahol ui vi a bal- illetve a jobboldali szingul´ris vektorokb´l k´pzett di´dszorzat, azaz egy oszlopa o e a T ´s egy sorvektor szorzatak´nt fel´ m×n m´ret˝ 1-rang´ m´trix. L´that´, hogy az u i vi di´dok e e ırt e u u a a o a monoton cs¨kken˝ σi s´ llyal szerepelnek az osszegben. Innen ad´dik az otlet, hogy k < r eset´n o o u ¨ o ¨ e csak az els˝ k legnagyobb s´ ly´ di´d osszeg´vel k¨zel´ uk az M m´trixot. Azaz o u u a ¨ e o ıts¨ a k

Mk =
i=1

T σi ui vi = Uk Σk VkT ,

ahol Uk = (u1 u2 . . . uk ) ´s Vk = (v1 v2 . . . vk ), valamit Σk egy k × k m´ret˝ diagon´lis m´trix, e e u a a melynek f˝atl´j´ban a σ1 , σ2 , . . . , σk ´rt´kek vannak. K¨nnyen l´that´, hogy Mk sorai egy ko´ o a e e o a o dimenzi´s alt´rben helyezkednek el, hiszen rang(Mk ) = rang(Σk ) = k. Sokkal m´lyebb eredm´ny o e e e a k¨vetkez˝, melynek bizony´ as´t mell˝zz¨ k. o o ıt´ a o u

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK

50

3.2. t´tel. Legyen M egy legal´bb k rang´ m´trix ´s legyen M k a fenti m´don sz´m´tott e a u a e o a ı k¨zel´t´se. Ha a k¨zel´t´s hib´j´t Frobenius-norm´val m´rj¨k, akkor a k-rang´ m´trixok k¨z¨l o ıe o ıe aa a e u u a o u az Mk m´trix a lehet˝ legjobban k¨zel´ti M -et, azaz a o o ı M − Mk
F

=

N : rang(N )=k

min

M −N

F

.

Tov´bb´ a k¨zel´t´s hib´ja a σi szingul´ris ´rt´kekkel kifejezhet˝: a a o ıe a a e e o
r 2 σi . i=k+1

M − Mk

F

=

Az Mk m´trix sorai az M -´hez hasonl´an n m´ret˝ ek, de most m´r egy k-dimenzi´s alt´rnek a e o e u a o e T az elemei. Ennek az alt´rnek egy b´zis´t alkotj´k a Vk sorai, ´s az e a a a e M = U k Σk m´trix k-dimenzi´s sorvektorai e b´zisban fejezik ki az Mk sorait. Teh´t a dimenzi´-cs¨kkent´s a o a a o o e eredm´nye, hogy az M m´trix n-dimenzi´s sorait a vet´ es ut´n az M m´trix k-dimenzi´s e a o ıt´ a a o soraival k¨zel´ uk. A VkT sorainak ortogonalit´s´b´l k¨nnyen bel´that´, hogy az Mk , illetve o ıtj¨ aa o o a o az M soraib´l sz´m´ o a ıtott euklideszi t´vols´gok ´s skal´ris szorzatok is megegyeznek. Teh´t a a e a a a k¨zel´ es alatt torz´ as kiz´r´lag az M -b˝l Mk -ba t¨rt´n˝ vet´ es sor´n t¨rt´nik, melynek o ıt´ ıt´ ao o o e o ıt´ a o e m´rt´ke a 3.2. t´tel alapj´n fel¨ lr˝l becs¨ lhet˝. e e e a u o u o Minhash alap´ lenyomat u A k¨vetkez˝kben az adathalmaz sok oszlopot ´s m´g t¨bb sort tartalmaz. C´lunk a sorok o o e e o e sz´m´nak cs¨kkent´se. A feladatot a k¨vetkez˝ abra szeml´lteti. a a o e o o´ e n

m

M

M k Az M m´trix bin´ris ´s k´t oszlop (vektor) hasonl´s´g´t a Jaccard-koeﬃciens adja meg. a a e e oa a Kicsit ´rthetetlenebb m´don fel´ e o ırva a Jaccard ´rt´ket : e e di,j = mi (mj )T , ||mi ||2 + ||mj ||2 − mi (mj )T

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK

51

hiszen az mi (mj )T bin´ris vektorok eset´ben az azonos poz´ okban l´v˝ 1-esek sz´m´t adja a e ıci´ e o a a meg, ||mi ||2 pedig a vektor egyeseinek sz´m´t. Felt´telezz¨ k, hogy a bin´ris vektorok ritk´k a a e u a a azaz, ha r-el jel¨lj¨ k a sorokban az 1-esek atlagos sz´m´t, akkor r n. o u ´ a a Az M m´trixot az M lenyomatm´trix´nak fogjuk h´ a a a ıvni. A lenyomatm´trixnak nem kell a bin´risnak lennie, de azt term´szetesen most is elv´rjuk, hogy a mem´riaig´nye j´val kevesebb a e a o e o legyen, mint az M mem´riaig´nye. Tov´bbi kik¨t´s, hogy az adatok sorfolytonosan vannak o e a oe t´rolva, azaz el˝sz¨r kiolvashatjuk az els˝ sort, majd a m´sodikat, ´s ´ tov´bb. a o o o a e ıgy a Ez a helyzet all fel hasonl´ weboldalak kisz˝ r´s´n´l, koppint´sok, kal´zm´solatok fel´ o uee e a o a der´ es´n´l, hasonl´ tulajdons´g´ felhaszn´l´k keres´s´n´l stb. Tov´bb´ ezt a m´dszert alkalıt´ e e o a u ao ee e a a o mazhatjuk, amikor hasonl´ elad´s´ term´kp´rokat keres¨ nk. Amennyiben a term´keket kis o au e a u e t´telben ´rt´kes´ e e e ıtik, akkor az asszoci´ci´s szab´lyokat kinyer˝ technik´k (l´sd 8 fejezet) nem a o a o a a alkalmazhat´ak. o Gondolkozzunk el azon, hogy m˝ k¨dik-e az al´bbi algoritmus. V´lasszunk ki n´h´ny sort u o a a e a v´letlenszer˝ en ´s tekints¨ k ezeket lenyomatoknak. K´t lenyomat hasonl´s´g´nak v´rhat´ e u e u e oa a a o ´rt´ke meg fog egyezni az oszlopaik hasonl´s´g´val. Ez alapj´n azt mondhatn´nk, hogy a sorok e e oa a a a egy v´letlenszer˝ en v´lasztott halmaza j´ lenyomat. e u a o A fentiek ellen´re ez az egyszer˝ m´dszer nagyon rossz eredm´nyt adna. Ennek oka az, hogy e u o e a m´trixunk nagyon ritka (r n), teh´t egy oszlopban a legt¨bb elem 0, ´ nagy val´sz´ us´ggel a a o ıgy o ın˝ e a legt¨bb lenyomat is csupa 0 elemb˝l allna. o o ´ A minhash alap´ lenyomat egy elem´t a k¨vetkez˝k´ppen all´ u e o o e ´ ıtjuk el˝. V´letlenszer˝ en pero e u mut´ljuk meg a sorokat, majd v´lasszuk az j-edik oszlopok hash ´rt´k´nek (h) azt a legkia a e e e sebb sorindexet, ahol 1-es szerepel a j-edik oszlopban. A v´letlen permut´ci´ term´szetesen e a o e csak elm´leti megk¨zel´ es, diszken tal´lhat´ nagy adatb´zis eset´n t´ l lass´ m˝ velet. Ehee o ıt´ a o a e u u u lyett sorsoljunk ki minden sorhoz egy v´letlen hash ´rt´ket. Amennyiben feltehetj¨ k, hogy a e e e u 16 1 m´trix sorainak sz´ma 2 -n´l kisebb, akkor a sz¨ let´snapi paradoxon alapj´n v´lasszunk 32 a a a u e a a bit sz´less´g˝ egyenletes eloszl´s´ v´letlen sz´mot. Az algoritmus t´nyleges implement´l´sa e e u au e a e aa sor´n teh´t egyes´vel olvassuk a sorokat, v´letlen sz´mot gener´lunk, ´s minden oszlopnak a a e e a a e folyamatosan friss´ uk azt a v´ltoz´j´t, ami megadja a legkisebb, 1-est tartalmaz´ sorindexet. ıtj¨ a oa o Mivel egy lenyomatnak k darab eleme van, ez´rt minden oszlophoz k darab v´letlen sz´mot e e a all´ ´ ıtunk el˝, ´s k darab hash ´rt´ket t´rol´ v´ltoz´t tartunk karban. Vegy¨ k ´szre, hogy a o e e e a o a o u e lenyomat el˝all´ ashoz egyszer megy¨ nk v´gig a m´trixon. o´ ıt´ u e a K´t lenyomat hasonl´s´g´t a p´ronk´nt egyez˝ lenyomatok sz´m´nak k-hoz vett ar´nya e oa a a e o a a a adja meg, azaz |{ : Mi, = Mj, }| dij = , k ahol Mi, az M m´trix i-edik oszlop´nak -edik elem´t jel¨li. a a e o Be fogjuk bizony´ ıtani, hogy dij j´ becsl´se dij -nek abban az ´rtelemben, hogy ha i ´s j o e e e oszlopok nagyon hasonl´k, akkor azok lenyomatai is nagy val´sz´ us´ggel hasonl´k. Ehhez a o o ın˝ e o k¨vetkez˝ ´szrev´telt haszn´ljuk fel. o oe e a
A sz¨let´snap paradoxonnal kapcsolatos k´rd´s a k¨vetkez˝ : Mekkora a val´sz´ us´ge annak az u e e e o o o ın˝ e ” esem´nynek, hogy emberek egy v´letlenszer˝en v´lasztott r f˝s csoportj´ban van legal´bb k´t szem´ly, akik egy e e u a o a a e e (365)·r! r napon unneplik a sz¨let´snapjukat?”. Elemi kombinatorikus uton a v´lasz meghat´rozhat´ : p r = 1 − 365r ≈ ¨ u e ´ a a o −r 2 o e ´ ıt´ u o ≈ 1−exp 3·365 . A feladat k¨vetkezm´nye az az all´ as, miszerint 2n elemnek 22n elem˝ halmazb´l kell egyenletes eloszl´s szerint v´letlenszer˝en egyes´vel kulcsot sorsolni, hogy kicsi (exp(−3)<0.05) legyen annak val´sz´ us´ge, a e u e o ın˝ e hogy k´t elem ugyanazt a kulcsot kapja. e
1

˝ ´ ´ ´ ¨ ´ 3. FEJEZET. ELOFELDOLGOZAS, HASONLOSAGI FUGGVENYEK 3.3. ´szrev´tel. Tetsz˝leges (i, j) oszlopp´rra igaz, hogy e e o a P[Mi, = Mj, ] = dij .

52

Bizony´t´s: Csak akkor lehet a k´t lenyomat azonos, ha a legal´bb az egyik oszlopban az 1ıa e a est tartalmaz´ indexek k¨z¨ l olyan sor kapta a legkisebb v´letlen sz´mot, amelyn´l mindk´t o o u e a e e oszlopban 1-es szerepel. Ennek val´sz´ us´ge ´ppen dij , amennyiben a permut´ci´ egyenletesen o ın˝ e e a o sz´rja sz´t az egyeseket. o e

´ Es most a hasonl´s´g meg˝rz´s´vel kapcsolatos all´ as : oa o ee ´ ıt´ a 3.4. t´tel. Legyenek 0<δ <1, ´s >0 val´s sz´mok. Amennyiben k >− ln δ/2 , akkor δ-n´l kisebb e e o a 2 2 a val´sz´n˝s´ge annak, hogy a lenyomat ´s az eredeti hasonl´s´g k¨l¨nbs´ge -n´l nagyobb. o ı u e e o a uo e a Bizony´t´s: Tekints¨ k az i, j oszlopokat. Deﬁni´ljuk Xl val´sz´ us´gi v´ltoz´t, ami 1 Mi, = Mj, ıa u a o ın˝ e a o eset´n, k¨ l¨nben 0. Legyen Y = X1 + . . . + Xk . e uo Xl binomi´lis eloszl´s´ ´s az el˝z˝ekben kimondott ´szrev´tel miatt E[X l ] = p = P(Mi, = a aue o o e e Irjuk fel Y -re = Mj, ) = dij . A lenyomatok hasonl´s´g´nak deﬁn´ oj´b´l ad´dik, hogy dij = Y . ´ oa a ıci´ a o o k 2.5.3 -es t´tel´t : e e 2 P |Y − E[Y ]| > k ≤ 2e−2 k amib˝l ad´dik, hogy o o P |dij − dij | > ≤ 2e−2
2k

4. fejezet Gyakori elemhalmazok
A gyakori elemhalmazok kinyer´se az adatb´ny´szat eltulajdon´ e a a ıthatatlan ter¨ lete. A feladat u v´s´rl´i szok´sok kinyer´s´n´l mer¨ lt fel r´szfeladatk´nt. A nagy proﬁtot els˝sorban a gyakran aa o a ee e u e e o egy¨ tt v´s´rolt term´kek, term´khalmazok jelentik, ´ ezek kinyer´se jelentette az els˝ l´p´st u aa e e ıgy e o e e a feladat megold´s´n´l. aa a Egyes alkalmaz´sokban a gyakori r´szstrukt´ r´k, gyakori mint´k meghat´rz´s´n´l elema e ua a a aa a halmazok helyett sorozatok, gy¨keres f´k, c´ ezett gr´fok vagy bool-formul´kat kerestek. A o a ımk´ a a k¨vetkez˝ fejezetben bemutatjuk a gyakori mint´k b´ny´szat´nak absztrakt modellj´t, majd o o a a a a e egyes´vel vessz¨ k a k¨ l¨nb¨z˝ t´ u mint´kat ´s megvizsg´ljuk, hogy milyen technik´k alkale u u o o o ıpus´ a e a a mazhat´k. o A gyakori elemhalmazok b´ny´szata nagyon n´pszer˝ kutat´si ter¨ let. A publik´lt algorita a e u a u a musokkal k¨nyveket lehetne megt¨lteni. Ebben a jegyzetben csak a legh´ o o ıresebb algoritmusokat ´s otleteket ismertetj¨ k. e ¨ u

4.1. A gyakori elemhalmaz fogalma
Legyen I = {i1 , i2 , . . . , im } elemek halmaza ´s T = t1 , . . . , tn az I hatv´nyhalmaza fee a lett ´rtelmezett sorozat, azaz tj ⊆ I. A T sorozatot bemeneti sorozatnak h´ e ıvjuk, amelynek tj elemei a tranzakci´k . Az I ⊆ I elemhalmaz fed´se megegyezik azon tranzakci´k o e o sorozat´val, amelyeknek r´szhalmaza az I. Az I elemhalmaz t´mogatotts´ga a fed´s´nek a e a a ee elemsz´m´val egyezik meg (jel¨l´sben supp(I)). Az I gyakori, amennyiben t´mogatotts´ga a a oe a a ou nem kisebb egy el˝re megadott konstansn´l, amelyet hagyom´nyosan min supp-pal jel¨l¨ nk, o a a ´s t´mogatotts´gi k¨sz¨bnek h´ e a a u o ıvunk. A gyakori elemhalmazok keres´se sor´n adott egy e a I elemhalmaz, T bemeneti sorozat, min supp t´mogatotts´gi k¨ sz¨b, feladatunk mega a u o hat´rozni a gyakori elemhalmazokat ´s azok t´mogatotts´g´t. Az egyszer˝ s´g kedv´´rt a e a a a ue ee a halmazt jel¨l˝ kapcsos z´r´jeleket (s˝t az elemek hat´rol´ vessz˝t) gyakran elhagyoo ao o a o o juk, teh´t p´ld´ul az {A, C, D}, {B, C, E}, {A, B, C, E}, {B, E}, {A, B, C, E} sorozatot a e a ACD, BCE, ABCE, BE, ABCE form´ban ´ a ırjuk. Az altal´noss´g megs´rt´se n´lk¨ l feltehetj¨ k, hogy az I elemein tudunk egy rendez´st deﬁ´ a a e e e u u e ni´lni, ´s a mint´k illetve a tranzakci´k elemeit minden esetben nagys´g szerint n¨v˝ sorrendben a e a o a o o t´roljuk. Ezen rendez´s szerinti lexikograﬁkusan tudjuk rendezni az azonos m´ret˝ halmazokat. a e e u A keres´si teret ugy k´pzelhetj¨ k el, mint egy ir´ny´ e ´ e u a ıtott gr´fot, amelynek cs´ csai az elemhala u mazok, ´s az I1 -b˝l ´l indul I2 -be, amennyiben I1 ⊂ I2 , ´s |I1 |+1 = |I2 |. A keres´si t´r bej´r´s´n e o e e e e aaa 53

4. FEJEZET. GYAKORI ELEMHALMAZOK

54

mindig ezen gr´f egy r´sz´nek bej´r´s´t fogjuk ´rteni. Teh´t p´ld´ul a keres´si t´r sz´less´gi a e e aaa e a e a e e e e bej´r´sa ezen gr´f sz´less´gi bej´r´s´t jelenti. aa a e e aaa Elterjedt, hogy a t´mogatotts´g helyett gyakoris´got, a t´mogatotts´gi k¨ sz¨b helyett gyaa a a a a u o koris´gi k¨sz¨b¨t haszn´lnak, melyeket f req(I)-vel, illetve min freq-kel jel¨lnek. Az I elemhala u o o a o maz gyakoris´g´n a supp(I)/|T | h´nyadost ´rtj¨ k. a a a e u A gyakorlatban el˝fordul´ adatb´zisokban nem ritka, hogy az elemek sz´ma 10 5 − 106 , a o o a a 9 10 tranzakci´k´ pedig 10 − 10 . Elm´letileg m´r az eredm´ny ki´ asa is az I elemsz´m´ban exo e e a e ır´ a a ponenci´lis lehet, hiszen el˝fordulhat, hogy I minden r´szhalmaza gyakori. A gyakorlatban a a o e maxim´lis m´ret˝ gyakori elemhalmaz m´rete |I|-n´l j´val kisebb (legfeljebb 20-30). Ezen k´ ul a e u e e o ıv¨ minden tranzakci´ viszonylag kicsi, azaz |tj | |I|. A keres´si t´r teh´t nagy, ami azt jelenti, o e e a hogy az egyszer˝ nyers er˝ m´dszerek (hat´rozzuk meg minden elemhalmaz t´mogatotts´g´t, u o o a a a a majd v´logassuk ki a gyakoriakat) elfogadhatatlanul lassan futn´nak. a a A k´s˝bbiekben gyakran haszn´ljuk majd tranzakci´k eset´n a sz˝ rt” jelz˝t. Egy tranzakci´ eo a o e u o o ” sz˝ rt tranzakci´j´t ugy kaphatjuk meg, ha t¨r¨lj¨ k bel˝le a ritka elemeket. A sz˝ rt tranzaku oa ´ oo u o u ci´k minden inform´ci´t tartalmaznak a gyakori elemhalmazok kinyer´s´hez, ez´rt a legt¨bb o a o ee e o algoritmus els˝ l´p´se a gyakori elemek meghat´roz´sa, majd a sz˝ rt tranzakci´k el˝all´ asa. o e e a a u o o´ ıt´ Ezut´n az eredeti adatb´zist nem haszn´lj´k t¨bb´. a a a a o e A bemenetet illet˝en h´rom adatt´rol´si m´dot szoktak elk¨ l¨n´ o a a a o u o ıteni. Horizont´lis a adatb´zisr´l besz´l¨ nk, ha a tranzakci´kat azonos´ oval l´tjuk el, ´s minden azonos´ ohoz a o eu o ıt´ a e ıt´ t´roljuk a tranzakci´ban tal´lhat´ elemeket. Vertik´lis adatb´zisn´l minden elemhez t´roljuk a o a o a a a a az elemet tartalmaz´ tranzakci´k azonos´ oit (sorsz´m´t). A vertik´lis t´rol´s nagy el˝nye, o o ıt´ a a a a a o hogy gyorsan megkaphatjuk egy elemhalmaz fed´s´t (az elemekhez tartoz´ kosarak metszet´t ee o e kell k´pezni), amib˝l k¨zvetlen ad´dik a t´mogatotts´g. Mind a horizont´lis, mind a vere o o o a a a tik´lis abr´zol´si m´dn´l haszn´lhatunk az elemek vagy tranzakci´k felsorol´sa helyett r¨gz´ a ´ a a o a a o a o ıtett sz´less´g˝ bitvektorokat. Az i-edik elem (tranzakci´) megl´t´t az i-edik poz´ oban szerepl˝ 1-es e e u o ee ıci´ o jelzi. tranzakci´ o 1 2 elemhalmaz C A,B,C elem A B C tranzakci´halmaz o 2 2 1,2 tranzakci´ o 1 2 2 2 elem C A B C

4.1. t´bl´zat. Horizont´lis-, vertik´lis- ´s rel´ci´s t´rol´si m´d a a a a e a o a a o Tudjuk, hogy egy tranzakci´ban v´ltoz´ sz´m´ elem lehet (´s ford´ : egy elem v´ltoz´ o a o a u e ıtva a o sz´m´ tranzakci´ban szerepelhet). A legt¨bb mai adatb´zis rel´ci´s t´bl´k form´j´ban van ela u o o a a o a a aa mentve, amelyekben csak r¨gz´ o ıtett sz´m´ attrib´ tum szerepelhet. A val´s´gban ez´rt a tranzaka u u oa e ci´k k´t attrib´ tummal rendelkez˝ rel´ci´s t´bla form´j´ban tal´lhat´k, ahol az els˝ attrib´ tum o e u o a o a aa a o o u a tranzakci´t, a m´sodik pedig az elemet adja meg (pontosabban a tranzakci´k ´s az elemek o a o e azonos´ oit). A h´rom t´rol´si m´dszerre mutatnak p´ld´t a 4.1 t´bl´zatok. ıt´ a a a o e a a a ´ a A bemenetet elemhalmazok sorozatak´nt deﬁni´ltuk. Abr´zoljuk ezt, mint G = (I, T, R) e a ir´ny´ a ıtatlan, p´ros gr´f, vagy mint B bin´ris m´trix. Ha a t tranzakci´ tartalmazza az i elemet, a a a a o akkor ´s csak akkor az (i, t) eleme R-nek. Vagy m´trix eset´n a t sor´nak i eleme 1 (k¨ l¨nben e a e a uo 0). A ACD, BCE, ABCE, BE, ABCE bemenethez tartoz´ gr´f ´s bin´ris m´trix a 4.1 ´s o a e a a e a 4.2 abr´n l´that´. ´ a a o

4. FEJEZET. GYAKORI ELEMHALMAZOK A B 1 1 1 1 1 1 1 C 1 1 1 1 D E 1 1 1 1 1

55

1

2

3

4

5

A

B

C

D

E

1 2 3 4 5

4.1. abra. Gr´fos abr´zol´si m´d ´ a ´ a a o

4.2. abra. Bin´ris m´trixos abr´zol´si m´d ´ a a ´ a a o

A bemeneti adatot szokt´k a s˝r˝ (dense) illetve a ritka (sparse) jelz˝vel illetni, amellyel a a u u o bin´ris m´trixban tal´lhat´ 1-esek sz´m´ra utalnak. V´s´rl´i kosarakat abr´zol´ m´trix tipia a a o a a aa o ´ a o a kusan ritka, ugyanis a kosarakban altal´ban j´val kevesebb term´k van (50-100), mint az osszes ´ a o e ¨ term´k sz´ma (10 000-100 000). e a A tranzakci´k sz´ma altal´ban nagy, de a mai t´rol´kapacit´sok mellett, m´g eg´szen nagy o a ´ a a o a e e adatb´zisok is elf´rnek a mem´ri´ban. Gondoljuk meg p´ld´ul, hogy egy 10 7 tranzakci´t tara e o a e a o talmaz´ adatb´zis csak 120 MB helyet k´ an, amennyiben a tranzakci´k atlagos m´rete 6 elem. o a ıv´ o ´ e Csak extr´m nagy adathalmazok eset´n nem alkalmazhat´k azok az algoritmusok, amelyek e e o felt´telezik, hogy a bemenet (vagy a sz˝ rt tranzakci´k) elf´rnek a mem´ri´ban. e u o e o a Miel˝tt bemutatjuk az APRIORI m´dszert elemhalmazok eset´n, gondolkozzunk el azon, o o e vajon m˝ k¨dne-e az al´bbi egyszer˝ algoritmus a gyakorlatban. Olvassuk be a h´tt´rt´rol´b´l u o a u a e a o o az adatb´zis els˝ blokkj´t, ´s vizsg´ljuk meg az els˝ tranzakci´t. Ennek a t 1 tranzakci´nak a o a e a o o o az osszes r´szhalmaz´t t´roljuk el a mem´ri´ban ´s mindegyikhez rendelj¨ nk egy sz´ml´l´t ¨ e a a o a e u a ao 1 kezdeti ´rt´kkel. Az I elemhalmazhoz rendelt sz´ml´l´ fogja t´rolni I t´mogatotts´g´t. e e a ao a a a a Az els˝ tranzakci´ feldolgoz´sa ut´n vizsg´ljuk meg sorban a t¨bbit : a t i tranzakci´ mino o a a a o o den r´szelemhalmaz´nak sz´ml´l´j´t n¨velj¨ k eggyel, vagy vegy¨ k fel a mem´ri´ba egy uj e a a aoa o u u o a ´ sz´ml´l´val, amennyiben az eddig feldolgozott tranzakci´ban m´g nem fordult el˝. Az adatb´zis a ao o e o a teljes v´gigolvas´sa ut´n az osszes – valahol el˝fordul´ – elemhalmaz t´mogatotts´ga rendele a a ¨ o o a a kez´s¨ nkre all, amib˝l k¨nnyen megkaphatjuk a gyakoriakat. eu ´ o o L´that´, hogy enn´l az egyszer˝ algoritmusn´l IO szempontj´b´l gyorsabbat nem lehet a o e u a a o tal´lni, mert az adatb´zis egyszeri v´gigolvas´sa mindenk´ppen sz¨ ks´ges a t´mogatotts´g a a e a e u e a a meghat´roz´s´hoz ´s enn´l az algoritmusn´l el´g is. A gyakorlatban m´gsem haszn´lj´k ezt a aa e e a e e a a a gyors ´s egyszer˝ algoritmust ? Ennek oka, hogy az ´letben el˝fordul´ adatb´zisokban nem e u e o o a ritka, hogy valamelyik tranzakci´ sok elemet tartalmaz. Egy atlagos szupermarketben mino ´ dennapos, hogy valaki 60 k¨ l¨nb¨z˝ elemet v´s´rol. Ekkor csak a sz´ml´l´k mintegy 16 ezer uo o o aa a ao TB-ot foglaln´nak a mem´ri´b´l, amennyiben a sz´ml´l´k 4 byte-osak. A sz´ml´l´kat mina o a o a ao a ao denk´ppen a mem´ri´ban szeretn´nk tartani, hogy elker¨ lj¨ k a folyamatos swappel´st, hiszen e o a e u u e egy uj tranzakci´ vizsg´lat´n´l nem tudjuk el˝re, hogy melyik sz´ml´l´t kell n¨velni. ´ o a a a o a ao o Abban az esetben, ha biztosan tudjuk, hogy a tranzakci´k egyike sem tartalmaz sok eleo met, vagy az adatb´zis bin´ris ´rt´keket tartalmaz´ m´trix form´j´ban adott, ahol az oszlopok a a e e o a aa (attrib´ tumok) sz´ma kicsi, akkor a fenti algoritmus hat´konyan haszn´lhat´. u a e a o A fenti algoritmus kis m´dos´ as´t javasolt´k [11]-ban. Egyr´szt csak olyan elemhalmao ıt´ a a e zokat vizsg´ltak, amelyek m´rete nem halad meg egy el˝re megadott korl´tot, m´sr´szr˝l a a e o a a e o vizsg´lt elemhalmazokat ´s sz´ml´l´ikat – a gyors visszakeres´s ´rdek´ben – sz´f´ban t´rolt´k. a e a ao e e e oa a a A m´dszernek k´t s´ lyos h´tr´nya van : nem teljes (az algoritmus nem tal´lja meg azokat az o e u a a a elemhalmazokat, amelyek m´rete nagyobb az el˝re megadott k¨ sz¨bn´l), tov´bb´ t´ ls´gosan e o u o e a a u a nagy a mem´riaig´nye (sok lehet a hamis jel¨lt). o e o

4. FEJEZET. GYAKORI ELEMHALMAZOK

56

Amennyiben az adatb´zisunk kicsi, akkor m´g a fenti egyszer˝ algoritmusokat sem kell a e u megprogramoznunk, mert egy teljesen szabv´nyos adatb´zis-lek´rdez˝ nyelv seg´ eg´vel mega a e o ıts´ e kaphatjuk a gyakori elemhalmazokat. Az al´bbi SQL parancs a gyakori elemp´rokat adja a a eredm´ny¨ l. e u SELECT I.elem,J.elem, COUNT(I.tranzakci´) o FROM tranzakci´k I, tranzakci´k J o o WHERE I.tranzakci´=J.tranzakci´ AND I.elem<J.elem o o GROUP BY I.elem, J.elem HAVING COUNT(I.tranzakci´) >= min_supp o

4.3. abra. SQL utas´ as gyakori elemp´rok kinyer´s´hez ´ ıt´ a ee L´tnunk kell, hogy a fenti parancs az osszekapcsol´s (FROM mez˝ben k´t t´bla) m˝ velet a ¨ a o e a u miatt nem fog m˝ k¨dni, ha az adatb´zis m´rete t´ l nagy. u o a e u A k¨vetkez˝kben bemutatjuk a h´rom legh´ o o a ıresebb gyakori elemhalmazokat kinyer˝ (GYEK) o algoritmust. Mindh´rman az ures mint´b´l indulnak ki. Az algoritmusok egy adott f´zis´ban a ¨ a o a a jel¨ltnek h´ o ıvjuk azokat az elemhalmazokat, amelyek t´mogatotts´g´t meg akarjuk hat´rozni. a a a a Az algoritmus akkor teljes, ha minden gyakori elemhalmazt megtal´l ´s helyes, ha csak a gyaa e koriakat tal´lja meg. a Mindh´rom algoritmus h´rom l´p´st ism´tel. El˝sz¨r jel¨lteket all´ a a e e e o o o ´ ıtanak el˝, majd mego hat´rozz´k a jel¨ltek t´mogatotts´g´t, v´g¨ l kiv´logatj´k a jel¨ltek k¨z¨ l a gyakoriakat. a a o a a a e u a a o o u Term´szetesen az egyes algoritmusok k¨ l¨nb¨z˝ m´don j´rj´k be a keres´si teret (az osszes e uo o o o a a e ¨ lehets´ges elemhalmazt), all´ ak el˝ a jel¨lteket, ´s k¨ l¨nb¨z˝ m´don hat´rozz´k meg a e ´ ıtj´ o o e uo o o o a a t´mogatotts´gokat. a a Az altal´noss´g megs´rt´se n´lk¨ l feltehetj¨ k, hogy az I elemein tudunk deﬁni´lni egy teljes ´ a a e e e u u a rendez´st, ´s a jel¨ltek, illetve a tranzakci´k elemeit ezen rendez´s szerint t´roljuk. M´s sz´val e e o o e a a o az elemhalmazokat sorozatokk´ alak´ a ıtjuk. Egy sorozat -elem˝ preﬁx´n a sorozat els˝ elem´b˝l u e o e o k´pzett r´szsorozat´t ´rtj¨ k. A p´ld´kban majd, amennyiben a rendez´sre nem t´r¨ nk ki k¨ l¨n, e e a e u e a e eu uo az ab´c´ szerinti sorrendet haszn´ljuk. A GYEK algoritmusok altal´ban ´rz´kenyek a haszn´lt ´ e e a ´ a e e a rendez´sre. Ez´rt minden algoritmusn´l megvizsg´ljuk, hogy milyen rendez´st c´lszer˝ haszn´lni e e a a e e u a annak ´rdek´ben, hogy a fut´si id˝, vagy a mem´riasz¨ ks´glet a lehet˝ legkisebb legyen. e e a o o u e o A jel¨lt-el˝all´ as ism´tl´s n´lk¨li, amennyiben nem all´ el˝ ugyanazt a jel¨ltet t¨bbf´le o o´ ıt´ e e e u ´ ıtja o o o e m´don. Ez a hat´konys´g miatt fontos, ugyanis ism´tl´ses jel¨lt-el˝all´ as eset´ben minden o e a e e o o´ ıt´ e jel¨lt el˝all´ asa ut´n ellen˝rizni kellene, hogy nem all´ o o´ ıt´ a o ´ ıtottuk-e el˝ m´r kor´bban. Ha ezt nem o a a tessz¨ k, akkor feleslegesen k¨t¨ nk le er˝forr´sokat a t´mogatotts´g ism´telt meghat´roz´s´n´l. u ou o a a a e a aa a Mindh´rom ismertetett algoritmusban a jel¨ltek el˝all´ asa ism´tl´s n´lk¨ li lesz, amit a rena o o´ ıt´ e e e u dez´ssel tudunk garant´lni. e a Az algoritmusok pszeudok´djaiban GY -vel jel¨lj¨ k a gyakori elemhalmazok halmaz´t, J-vel o o u a jel¨ltek´t ´s j.sz´ml´l´-val a j jel¨lt sz´ml´l´j´t. Az olvashat´bb k´dok ´rdek´ben feltessz¨ k, o e e a ao o a aoa o o e e u hogy minden sz´ml´l´ kezdeti ´rt´ke nulla, ´s az olyan halmazok, amelyeknek nem adunk a ao e e e kezdeti ´rt´ket (p´ld´ul GY ), nem tartalmaznak kezdetben egyetlen elemet sem. e e e a

4. FEJEZET. GYAKORI ELEMHALMAZOK

57

4.2. Az APRIORI algoritmus
Az Apriori algoritmus az egyik legels˝ GYEK algoritmus. Sz´less´gi bej´r´st val´s´ meg, o e e aa o ıt ami azt jelenti, hogy a legkisebb mint´b´l (ami az ures halmaz) kiindulva szintenk´nt halad el˝re a o ¨ e o a nagyobb m´ret˝ gyakori elemhalmazok meghat´roz´s´hoz. A k¨vetkez˝ szinten (iter´ci´ban) e u a aa o o a o az eggyel nagyobb m´ret˝ elemhalmazokkal foglalkozik. Az iter´ci´k sz´ma legfeljebb eggyel e u a o a t¨bb, mint a legnagyobb gyakori elemhalmaz m´rete. o e A jel¨ltek deﬁni´l´s´n´l a k¨vetkez˝ egyszer˝ t´nyt haszn´lja fel : Gyakori elemhalmaz mino aa a a o o u e a den r´szhalmaza gyakori. Az all´ ast indirekten n´zve elmondhatjuk, hogy egy elemhalmaz e ´ ıt´ e biztosan nem gyakori, ha van ritka r´szhalmaza. Ennek alapj´n ne legyen jel¨lt azon eleme a o halmaz, amelynek van ritka r´szhalmaza. Az Apriori algoritmus ez´rt ´p´ e e e ıtkezik lentr˝l. Egy o adott iter´ci´ban csak olyan jel¨ltet vesz¨ nk fel, amelynek osszes val´di r´szhalmaz´r´l tudjuk, a o o u ¨ o e ao hogy gyakori. Az algoritmus onnan kapta a nev´t, hogy az -elem˝ jel¨lteket a bemeneti sorozat e u o -edik atolvas´s´nak megkezd´se el˝tt (a priori) all´ el˝. Az -elem˝ jel¨ltek halmaz´t J -lel, ´ aa e o ´ ıtja o u o a az -elem˝ gyakori elemhalmazokat pedig GY -lel jel¨lj¨ k. u o u Algorithm 1 Apriori Require: T : tranzakci´k sorozata, o min supp : t´mogatotts´gi k¨ sz¨b, a a u o ←0 J ← {∅} while |J | = 0 do t´mogatotts´g meghat´roz´s( T , J ) ; a a a a for all j ∈ J do if supp(j) ≥ mins upp then GY ← j ; end if end for o´ ıt´ J +1 ← jel¨lt el˝all´ as( GY ) ; o ← +1; end while return GY A kezdeti ´rt´kek be´ll´ asa ut´n egy ciklus k¨vetkezik, amely akkor ´r v´get, ha nincsen e e a ıt´ a o e e egyetlen -elem˝ jel¨lt sem. A cikluson bel¨ l el˝sz¨r meghat´rozzuk a jel¨ltek t´mogatotts´g´t. u o u o o a o a a a Ehhez egyes´vel vessz¨ k a tranzakci´kat, ´s azon jel¨ltek sz´ml´l´j´t n¨velj¨ k eggyel, amelyeket e u o e o a aoa o u tartalmaz a vizsg´lt tranzakci´. Ha rendelkez´sre allnak a t´mogatotts´gok, akkor a jel¨ltek a o e ´ a a o k¨z¨ l kiv´logathatjuk a gyakoriakat. o u a

4.2.1. Jel¨ltek el˝´ll´ asa o oa ıt´
¨ ˝ ´ ıt ´ u e A Jelolt-eloall´ as f¨ ggv´ny az -elem˝ gyakori elemhalmazokb´l ( +1)-elem˝ jel¨lteu o u o ket all´ el˝. Azok ´s csak azok az elemhalmazok lesznek jel¨ltek, amelyek minden r´szhalmaza ´ ıt o e o e gyakori. A jel¨ltek el˝all´ asa sor´n olyan -elem˝ , gyakori I1 , I2 elemhalmaz p´rokat keres¨ nk, ameo o´ ıt´ a u a u lyekre igaz, hogy

4. FEJEZET. GYAKORI ELEMHALMAZOK – I1 lexikograﬁkusan megel˝zi I2 -t, o

58

– I1 -b˝l a legnagyobb elem t¨rl´s´vel ugyanazt az elemhalmazt kapjuk, mintha az I 2 -b˝l o o ee o t¨r¨ln´nk a legnagyobb elemet. oo e Ha a felt´teleknek megfelel˝ p´rt tal´lunk, akkor k´pezz¨ k a p´r uni´j´t, majd ellen˝rizz¨ k, e o a a e u a oa o u hogy a kapott elemhalmaznak minden val´di r´szhalmaza gyakori-e. A t´mogatotts´g antio e a a monotonit´sa miatt sz¨ ks´gtelen az osszes val´di r´szhalmazt megvizsg´lni ; ha mind az + a u e ¨ o e a + 1 darab -elem˝ r´szhalmaz gyakori, akkor az osszes val´di r´szhalmaz is gyakori. Az I 1 , I2 u e ¨ o e halmazokat a jel¨lt gener´torainak szok´s h´ o a a ıvni. 4.1. p´lda. Legyenek a 3-elem˝ gyakori elemhalmazok a k¨vetkez˝k : GY 3 = {ABC, ABD, e u o o ACD, ACE, BCD}. Az ABC ´s ABD elemhalmazok megfelelnek a felt´telnek, ez´rt k´pezz¨k e e e e u az uni´jukat. Mivel ABCD minden h´romelem˝ r´szhalmaza a GY 3 -nak is eleme, az ABCD o a u e jel¨lt lesz. Az ACD, ACE p´r is megfelel a k´t felt´telnek, de uni´juknak van olyan r´szhalmaza o a e e o e (ADE), amely nem gyakori. Az Apriori a k¨vetkez˝ iter´ci´ban teh´t m´r csak egyetlen jel¨lt o o a o a a o t´mogatotts´g´t hat´rozza meg. a a a a A fenti m´dszer csak akkor alkalmazhat´, ha >0. Az egyelem˝ jel¨ltek el˝all´ asa egyszer˝ : o o u o o´ ıt´ u minden egyelem˝ halmaz jel¨lt, amennyiben az ures elemhalmaz gyakori (|T | ≥ min supp). Ez u o ¨ osszhangban all azzal, hogy akkor lehet egy elemhalmaz jel¨lt, ha minden r´szhalmaza gyakori. ¨ ´ o e

4.2.2. Jel¨ltek t´mogatotts´g´nak meghat´roz´sa o a a a a a
A jel¨ltek el˝fordul´sait ossze kell sz´molni. Ehhez egyes´vel vizsg´ljuk a kosarakat, ´s azon o o a ¨ a e a e jel¨ltek sz´ml´l´it n¨velj¨ k eggyel, amelyeket tartalmaz a kos´r. o a ao o u a 1- ´s 2-elem˝ jel¨ltek t´mogatotts´ga e u o a a K¨nny˝ dolgunk van, amennyiben a jel¨ltek m´rete 1 vagy 2. A feladatot megoldhatjuk o u o e egy olyan lista, illetve f´lt¨mb seg´ eg´vel, amelyekben a sz´ml´l´kat t´roljuk. Az elemek e o ıts´ e a ao a t´mogatotts´g´nak meghat´roz´s´n´l a lista j-edik eleme t´rolja a j-edik elem sz´ml´l´j´t. a a a a aa a a a aoa A tranzakci´k feldolgoz´s´n´l v´gigmegy¨ nk a tranzakci´ elemein ´s n¨velj¨ k a megfelel˝ o aa a e u o e o u o cell´kban tal´lhat´ sz´ml´l´kat. a a o a ao Az els˝ v´gigolvas´s ut´n kiv´logathatjuk a gyakori elemeket. A tov´bbiakban m´r csak o e a a a a a ezekkel az elemekkel dolgozunk, ´ uj sorsz´mokat adhatunk nekik a [1..|GY 1 |] intervallumb´l ıgy ´ a o (eml´keztet˝ul GYj -vel jel¨lj¨ k a j-elem˝ gyakori mint´kat). Az l ´s k-adik elemekb˝l all´ p´r e o¨ o u u a e o ´ o a t´mogatotts´g´t a t¨mb l-edik sor´nak k − l-edik eleme t´rolja (az altal´noss´g megs´rt´se a a a o a a ´ a a e e n´lk¨ l feltehetj¨ k, hogy l < k). e u u Ha egy sz´ml´l´ 4 byte-ot foglal, akkor a t¨mb helyig´nye nagyj´b´l 4 · |GY1 | byte. Azon a ao o e a o 2 elemp´rokhoz tartoz´ t¨mbelem ´rt´ke, amelyek sosem fordulnak el˝ egy¨ tt, 0 lesz. Helyet a o o e e o u takar´ ıthatunk meg, hogy ha csak akkor vessz¨ k fel egy jel¨ltp´r sz´ml´l´j´t, ha a p´rt legu o a a aoa a al´bb egy tranzakci´ tartalmazza [127]. A p´rok t´mogatotts´g´nak meghat´roz´sa kevesebb a o a a a a a a mem´ri´t fog ig´nyelni, de ezzel egy¨ tt lassabb is lesz. o a e u

4. FEJEZET. GYAKORI ELEMHALMAZOK 1 2 3 1 2 . . . . . . . . 1 2 3 N-1 N supp(j)=vector[j] |GY1 | − 2 |GY1 | − 1 supp({l, k})=t¨mb[l][k-l] o ... ... |GY1 | − 1

59

4.4. abra. Adatstrukt´ r´k az 1- ´s 2-elem˝ jel¨ltek t´mogatotts´g´nak meghat´roz´s´hoz. ´ ua e u o a a a a aa Nagyobb elemhalmazok t´mogatotts´ga a a Vizsg´ljuk meg r´szletesebben az 5. sort. Adott egy tranzakci´ ´s -m´ret˝ jel¨ltek egy hala e oe e u o maza. Feladatunk meghat´rozni azon jel¨lteket, amelyek a tranzakci´ r´szhalmazai. Megolda o o e hatjuk ezt egyszer˝ en ugy, hogy a jel¨lteket egyes´vel vessz¨ k, ´s eld¨ntj¨ k, hogy tartalmazza-e u ´ o e u e o u oket a tranzakci´. Rendezett halmazban rendezett r´szhalmaz keres´se elemi feladat. ˝ o e e Vegy¨ nk fel k´t mutat´t, amelyek a kos´r, illetve u e o a a jel¨lt elemein fognak v´gighaladni. Kezdetben muo e tasson mindk´t mutat´ az elemhalmazok els˝ elemeire. e o o kos´rmutat´ a o Amennyiben a k´t mutat´ altal mutatott elemek mege o´ ? egyeznek, akkor l´ptess¨ k mindk´t mutat´t a k¨vete u e o o kos´r : A B C D E F G I a kez˝ elemre. Ha a tranzakci´ban tal´lhat´ elem kisebb o o a o sorsz´m´ , akkor csak a kos´r mutat´j´t l´ptess¨ k, ela u a oa e u jel¨lt : B E G o lenkez˝ esetben pedig alljunk meg ; ekkor a kos´r bizo ´ a 6 tosan nem tartalmazza a jel¨ltet. Ha a jel¨lt utols´ o o o eleme is megegyezik a kos´r valamelyik elem´vel, aka e jel¨ltmutat´ o o kor a kos´r tartalmazza a jel¨ltet. a o Ennek az egyszer˝ m´dszernek a h´tr´nya, hogy sok jel¨lt eset´n lass´ , hiszen annyiszor kell u o a a o e u a tranzakci´ elemein v´gighaladni, amennyi a jel¨ltek sz´ma. A gyorsabb m˝ k¨d´s ´rdek´ben o e o a u o e e e a jel¨lteket sz´f´ban vagy hash-f´ban (hash-tree) c´lszer˝ t´rolni. A sz´f´t szok´s preﬁx-f´nak o oa a e u a oa a a vagy lexikograﬁkus f´nak is h´ a ıvni [3]. Az eredeti APRIORI implement´ci´ban hash-f´t alkala o a maztak, azonban tesztek bizony´ ak, hogy a sz´fa gyorsabb m˝ k¨d´st eredm´nyez, mint a ıtj´ o u o e e hash-fa. A hash-fa sz´f´val val´ helyettes´ es´r˝l m´r a [123]-ban ´ oa o ıt´ e o a ırtak, ahol a sz´f´t alkaloa maz´ APRIORI algoritmust SEAR-nek nevezt´k el. A tov´bbiakban a sz´f´ban val´ keres´st o e a oa o e ismertetj¨ k (a sz´f´k fel´p´ es´r˝l a 2.8.1 r´szben m´r sz´ltunk). u oa e ıt´ e o e a o A sz´fa ´leinek c´ ei elemek lesznek. Minden cs´ cs egy elemhalmazt reprezent´l, amelynek o e ımk´ u a elemei a gy¨k´rb˝l a cs´ csig vezet˝ ut ´leinek c´ eivel egyeznek meg. Feltehetj¨ k, hogy az egy o e o u o´ e ımk´ u cs´ csb´l indul´ ´lek, tov´bb´ az egy uton tal´lhat´ ´lek c´ ek szerint rendezve vannak (pl. u o oe a a ´ a oe ımk´ legnagyobb elem az els˝ helyen). A jel¨ltek sz´ml´l´it a jel¨ltet reprezent´l´ lev´lhez rendelj¨ k. o o a ao o ao e u A 4.5. abr´n egy sz´f´t l´thatunk. ´ a oa a A t tranzakci´ban az -elem˝ jel¨lteket ugy tal´ljuk meg, hogy a jel¨lteket le´ o fa gy¨ker´b˝l o u o ´ a o ır´ o e o kiindulva, rekurz´ m´don bej´runk bizonyos r´szf´kat. Ha egy d szint˝ bels˝ cs´ cshoz a tranzıv o a e a u o u akci´ j-edik elem´n kereszt¨ l jutunk, akkor azon ´lein kereszt¨ l l´p¨ nk eggyel m´lyebb szintre, o e u e u e u e

4. FEJEZET. GYAKORI ELEMHALMAZOK
A B C D C D B C D

60

4.5. abra. Az ABC, ABD, ACD, BCD jel¨lteket t´rol´ sz´fa. ´ o a o o amelyeknek c´ eje megegyezik a tranzakci´ j -edik elem´vel, ahol j < j ≤ |t| − + d (ugyanis ımk´ o e − d elemre m´g sz¨ ks´g van ahhoz, hogy lev´lbe ´rj¨ nk). Ha ily m´don eljutunk egy szint˝ e u e e e u o u cs´ cshoz, az azt jelenti, hogy a cs´ cs altal reprezent´lt elemhalmazt tartalmazza t, ´ ennek a u u ´ a ıgy lev´lnek a sz´ml´l´j´t kell n¨veln¨ nk eggyel. e a aoa o u A sz´f´t preﬁx f´nak is szokt´k h´ oa a a ıvni, ami arra utal, hogy a k¨z¨s preﬁxeket csak egyszer o o t´rolja. Ett˝l lesz gyorsabb a sz´f´s t´mogatotts´g-meghat´roz´s a naiv m´dszern´l. A k¨z¨s a o oa a a a a o e o o preﬁxeket osszevonjuk, ´s csak egyszer foglalkozunk vel¨ k. ¨ e u A sz´fa nagy el˝nye a gyors t´mogatotts´g-meghat´roz´s mellett, hogy a jel¨lt-el˝all´ ast o o a a a a o o´ ıt´ is t´mogatja. Tudjuk, hogy k´t gyakori elemhalmaz akkor lesz gener´tor, ha a legnagyobb a e a sorsz´m´ elem¨ k elhagy´s´val ugyanazt az elemhalmazt kapjuk, vagy m´s szavakkal, a k´t a u u aa a e gyakori elemhalmaz − 1 hossz´ preﬁxei megegyeznek. A t´mogatotts´g-meghat´roz´s´ban u a a a aa haszn´lt sz´f´t felhaszn´lhatjuk a k¨vetkez˝ iter´ci´s l´p´s jel¨ltjeinek az el˝all´ as´ra, hiszen a oa a o o a o e e o o´ ıt´ a a sz´fa t´rolja a jel¨lt-el˝all´ ashoz sz¨ ks´ges gyakori elemhalmazokat. o a o o´ ıt´ u e Az eg´sz algoritmus alatt teh´t egyetlen sz´f´t tartunk karban, amely az algoritmus kezdee a oa tekor csak egy cs´ csb´l all (ez reprezent´lja az ures halmazt). A t´mogatotts´g-meghat´roz´s u o ´ a ¨ a a a a a a o e e e e ut´n t¨r¨lj¨ k azon leveleket, amelyek sz´ml´l´ja kisebb min supp-n´l. Az iter´ci´s l´p´s v´g´re a oo u a ao kialakul´ sz´fa alapj´n el˝all´ o o a o´ ıtjuk a jel¨lteket, amely sor´n a sz´fa uj, eggyel m´lyebb szinten o a o ´ e l´v˝ levelekkel b˝v¨ l. A jel¨lt-el˝all´ as sor´n arra is lehet˝s´g¨ nk van, hogy az el˝z˝ iter´ci´ban e o o u o o´ ıt´ a oe u o o a o gyakorinak tal´lt elemhalmazokat ´s azok sz´ml´l´it ki´ a e a ao ırjuk (a kimenetre vagy a h´tt´rt´rol´ra). a e a o A 2.8.1 r´szben m´r volt arr´l sz´, hogy az elemeken deﬁni´lt rendez´s milyen hat´ssal e a o o a e a van a sz´fa alakj´ra. Tapasztalatok alapj´n gyakoris´g szerint cs¨kken˝ rendez´s kisebb o a a a o o e sz´f´t eredm´nyez, mint a gyakoris´g szerint n¨vekv˝ rendez´s, vagy m´s v´letlenszer˝ en oa e a o o e a e u megv´lasztott rendez´sek. Ennek ellen´re olyan sz´f´t c´lszer˝ alkalmazni, amelyben az elea e e oa e u meken ´rtelmezett rendez´s a gyakoris´g szerint n¨vekv˝ sorrendnek felel meg. Ennek ugyanis e e a o o k´t el˝nye van. Egyr´szr˝l a sz´fa pontjai kisebbek lesznek (kevesebb ´l indul ki bel˝l¨ k), de e o e o o e ou ami m´g fontosabb, hogy a ritka elemek lesznek k¨zel a gy¨k´rhez. A ritka elemekkel kevee o o e sebb kos´rbeli elem fog egyezni, ez´ltal a sz´fa kisebb r´sz´t j´rjuk be a t´mogatott jel¨ltek a a o e e a a o meghat´roz´sa sor´n. a a a A sz´fa hat´kony megval´s´ as´nak r´szleteit ´s tov´bbi gyors´ asi otleteket a [20, 23, 58] o e o ıt´ a e e a ıt´ ¨ ´ asokban tal´lhatunk. Egy olyan programcsomag, amely sz´fa alap´ APRIORI implement´ci´t ır´ a o u a o tartalmaz (tov´bb´ hat´kony Eclat ´s Fp-growth implement´ci´t) ´s kutat´si c´lokra szabadon a a e e a o e a e let¨lthet˝ a o o http ://www.cs.bme.hu/~bodon/en/fim env oldalr´l. o

4. FEJEZET. GYAKORI ELEMHALMAZOK

61

4.2.3. Zs´kutca nyes´s a e
Sz¨ ks´gtelen t´rolni azon cs´ csokat, amelyekb˝l az osszes el´rhet˝ levelet t¨r¨lt¨ k. Ezek u e a u o ¨ e o oo u ugyanis lass´ ak a t´mogatotts´gok meghat´roz´s´t (mik¨zben szerepet nem j´tszanak benne) ıtj´ a a a aa o a ´s feleslegesen foglalj´k a mem´ri´t. e a o a ¨ FOLYT KOV.

4.2.4. A bemenet t´rol´sa a a
Amikor megvizsg´lunk egy kosarat annak ´rdek´ben, hogy eld¨nts¨ k, mely jel¨lteket tartala e e o u o mazza, akkor az oper´ci´s rendszer a h´tt´rt´rol´b´l bem´solja a tranzakci´t a mem´ri´ba. Ha a o a e a o o a o o a van el´g hely a mem´ri´ban, akkor a tranzakci´ ott is marad, ´s amikor ism´t sz¨ ks´g van r´, e o a o e e u e a nem kell lass´ IO m˝ veletet v´gezn¨ nk. A bemenetet teh´t sz¨ ks´gtelen explicit elt´rolnunk a u u e u a u e a mem´ri´ban, hiszen az oper´ci´s rendszer ezt megteszi helyett¨ nk. S˝t, ha a program elt´rolja o a a o u o a a bemeneti adatot (p´ld´ul egy list´ban), akkor a val´s´gban dupl´n lesz elt´rolva. e a a oa a a A bemenet t´rol´s´nak vannak el˝nyei is. P´ld´ul osszegy˝ jthetj¨ k az azonos tranzakci´kat a aa o e a ¨ u u o ´s ahelyett, hogy t¨bbsz¨r hajtan´nk v´gre ugyanazon a tranzakci´n a t´mogatott jel¨ltek e o o a e o a o meghat´roz´s´t, ezt egyszer tessz¨ k meg. Sz¨ ks´gtelen az eredeti tranzakci´kat t´rolni. Az a aa u u e o a els˝ v´gigolvas´s ut´n rendelkez´sre allnak a gyakori elemek. A ritka elemek ugysem j´tszanak o e a a e ´ ´ a szerepet, ez´rt el´g a tranzakci´knak csak a gyakori elemeit t´rolni. Ennek tov´bbi el˝nye, hogy e e o a a o sokkal t¨bb azonos ,,sz˝ rt” tranzakci´ lehet, ez´ltal tov´bb cs¨kken a t´mogatott jel¨lteket o u o a a o a o keres˝ elj´r´s megh´ as´nak sz´ma. R´ad´sul az -edik v´gigolvas´s sor´n t¨r¨lhetj¨ k azokat a o aa ıv´ a a a a e a a oo u sz˝ rt tranzakci´kat, amelyek nem tartalmaznak egyetlen -elem˝ jel¨ltet sem. u o u o A sz˝ rt tranzakci´kat c´lszer˝ olyan adatstrukt´ r´ban t´rolni, amit gyorsan fel lehet ´p´ u o e u ua a e ıteni (azaz gyorsan tudjuk besz´ rni a sz˝ rt tranzakci´kat) ´s gyorsan v´gig tudunk menni a besz´ rt u u o e e u elemeken. Alkalmazhatunk erre a c´lra egy sz´f´t, de tesztek azt mutatj´k, hogy egy pirose oa a fekete fa (kiegyens´ lyozott bin´ris fa), amelynek cs´ csaiban egy-egy sz˝ rt tranzakci´ tal´lhat´, u a u u o a o m´g jobb megold´s, mert j´val kisebb a mem´riaig´nye. e a o o e

4.2.5. Tranzakci´k sz˝ r´se o u e
A feldolgoz´s sor´n a tranzakci´kat m´dos´ a a o o ıthatjuk/t¨r¨lhetj¨ k annak ´rdek´ben, hogy az oo u e e Apriori m´g hat´konyabb legyen. A tranzakci´ sz˝ r´se alatt a tranzakci´ olyan elemeinek e e o ue o t¨rl´s´t ´rtj¨ k, amelyek nem j´tszanak szerepet az algoritmus kimenet´nek el˝all´ as´ban. A o ee e u a e o´ ıt´ a nem fontos elemek lass´ ak az algoritmust, gondoljunk itt a t´mogatotts´g meghat´roz´s´nak ıtj´ a a a aa m´dj´ra. A sz´fa egy bels˝ csom´pontj´n´l meg kell hat´roznunk a k¨z¨s elemeket az ´lek o a o o o a a a o o e c´ einek ´s a tranzakci´ elemeinek halmaz´ban. Min´l t¨bb elem van a tranzakci´ban, ann´l ımk´ e o a e o o a tov´bb tart ez a m˝ velet. a u Sz˝ r´snek tekinthetj¨ k az els˝ iter´ci´ ut´n v´grehajtott l´p´st : ue u o a o a e e e 1. sz˝r˝ otlet. Minden tranzakci´b´l t¨r¨lj¨k a ritka elemeket. u o¨ o o o o u Egyszer˝ sz˝ r˝ otletek a k¨vetkez˝k : u uo¨ o o 2. sz˝r˝ otlet. Az -edik iter´ci´ban a tranzakci´ feldolgoz´sa ut´n t¨r¨lj¨k a t tranzakci´t, u o¨ a o o a a o o u o amennyiben t elemeinek sz´ma nem nagyobb, mint . Nyilv´nval´, hogy ez a tranzakci´ nem a a o o tartalmaz olyan elemhalmazt, amely a k´s˝bbi iter´ci´ban lesz jel¨lt. e o a o o

4. FEJEZET. GYAKORI ELEMHALMAZOK 3. sz˝r˝ otlet. T¨r¨lj¨k a tranzakci´t, amennyiben nem tartalmaz jel¨ltet. u o¨ o o u o o Ennek az otletnek a jav´ ¨ ıtott v´ltozata : a

62

4. sz˝r˝ otlet. T¨r¨lj¨k a tranzakci´ azon elemeit, amelyek nem elemei egyetlen olyan jel¨ltu o¨ o o u o o nek sem, amelyet tartalmaz a tranzakci´. o Amennyiben az ´ keletkezett tranzakci´ m´rete , akkor t¨r¨lj¨ k teljesen a tranzakci´t. ıgy o e oo u o P´ld´ul, ha a h´romelem˝ jel¨ltek halmaza {ABC, ABD, BCD, F GH} ´s t = ABCDH, akkor e a a u o e a H elemet t¨r¨lhetj¨ k a tranzakci´b´l. t = ABCGH eset´ben a teljes tranzakci´t t¨r¨lj¨ k. oo u o o e o oo u Az el˝z˝ sz˝ r˝otletet tov´bb szigor´ o o u o¨ a ıthatjuk. Mi kell ahhoz, hogy egy elem eleme legyen majd egy olyan + A v´rnyom´s ´s a nemzetek boldogs´ga e a e a +1-elem˝ j jel¨ltnek a k¨vetkez˝ iter´ci´ban, amelyet k¨z¨tti osszef¨gg´sekre mutatott r´ egy u o o o a o o o ¨ u e a tartalmaz az aktu´lis jel¨lt. Sz¨ ks´ges felt´tel, hogy a amerikai kutat´ : Az amerikai kutat´k a o u e e o o ” j minden -elem˝ r´szhalmaz´t tartalmazza a tranz- szerint az eredm´nyek eg´szen egyu e a e e akci´. A j egy eleme pontosan darab r´szhalmaznak szer˝ek, a boldog orsz´gokb´l sz´rmaz´ o e u a o a o az eleme. Ez alapj´n : a emberek - sv´dek, d´nok, britek ´s e a e 5. sz˝r˝ otlet. T¨r¨lj¨k a tranzakci´ azon elemeit, u o¨ o o u o amelyek nem elemei darab olyan jel¨ltnek, amelyet o tartalmaz a tranzakci´. o Term´szetesen most is igaz, hogy ez ut´n a sz˝ r´s ut´n e a ue a alkalmazzuk az m´sodik sz˝ r˝ otletet, ha ez lehets´ges. a u o¨ e A fenti p´ld´ban a t = ABCF GH tranzakci´t ez a e a o sz˝ r´s teljes eg´sz´ben t¨rli. ue e e o hollandok - kevesebbet szenvednek a magas v´rnyom´st´l, mint a n´metek, e a o e vagy a portug´lok, akik az eur´pai a o boldogs´gsk´la a a v´g´n e e tal´lhat´k.” a o Forr´s : a http://www.karpatinfo. net/article38511.html

4.2.6. Equisupport nyes´s e
Az egyenl˝ t´mogatotts´g´ elemhalmazok alapj´n t¨rt´n˝, un. equisupport nyes´s tal´n a o a a u a o e o ´ e a legelterjedtebb tr¨ kk a gyakori elemhalmazok kinyer´s´nek meggyors´ as´ra. A nyes´s a 4.2 u ee ıt´ a e tulajdons´g egy k¨vetkezm´ny´t haszn´lja ki. A t´mogatotts´g meghat´roz´s´n´l kihagya o e e a a a a aa a hatjuk azokat a halmazokat, amelyeknek van olyan -elem˝ val´di r´szhalmazuk, amelyek u o e t´mogatotts´ga egyenl˝ egy ( -1)-elem˝ r´szhalmazuk´val. a a o u e e 4.2. tulajdons´g. Legyen X ⊂Y ⊆I. Ha supp(X)=supp(Y ), akkor supp(X ∪Z)=supp(Y ∪Z) a teljes¨l minden Z ⊆ I-re. u Ez az all´ as minden Z ⊆ I elemhalmazra igaz, de nek¨ nk el´g lesz csak a Z ⊆ I\Y halmazokra ´ ıt´ u e koncentr´lnunk. a Az equisupport nyes´s ´s a z´rt elemhalmazok k¨z¨tti osszef¨ gg´s egy´rtelm˝ . Az X eleme e a o o ¨ u e e u halmaz nem z´rt, ´s lez´rtja Y , amennyiben X ⊂ Y , supp(X) = supp(Y ), tov´bb´ nem a e a a a l´tezik olyan elemhalmaz, amelynek Y val´di r´szhalmaza, ´s t´mogatotts´ga megegyezik Y e o e e a a t´mogatotts´g´val. Egy X elemhalmaz akkor, ´s csak akkor lehet egy egzakt (100% bizoa a a e nyoss´g´ ) asszoci´ci´s szab´ly felt´tel r´sze, ha X nem z´rt elemhalmaz. Az X elemhalmaz a u a o a e e a kulcs minta [14], ha nincs vele egyenl˝ t´mogatotts´g´ val´di r´szhalmaza. o a a u o e Ha az Y jel¨ltnek a t´mogatotts´ga megegyezik az X-el jel¨lt preﬁxe t´mogatotts´g´val, o a a o a a a akkor felesleges az Y -t tartalmaz´ Y ∪ Z halmazokat mint uj jel¨lteket el˝all´ o ´ o o´ ıtani, a 4.2 tulajdons´g alapj´n ezek t´mogatotts´ga X ∪ Z r´szhalmazukb´l k¨zvetlen¨ l sz´m´ a a a a e o o u a ıthat´ [66]. o

4. FEJEZET. GYAKORI ELEMHALMAZOK

63

Az alulr´l ´p´ o e ıtkez˝ algoritmusokn´l (Apriori, Eclat, Fp-growth, stb.) a preﬁxek o a t´mogatotts´ga mindig el´rhet˝, ´ a preﬁx equisupportnyes´st (az X az Y preﬁxe ´s |X| + a a e o ıgy e e + 1 = |Y |) b´rmikor alkalmazhatjuk. A preﬁx equisupport nyes´s a k¨vetkez˝k´ppen m˝ k¨dik : a e o o e u o miut´n kisz´moltuk a P elemhalmaz gyerekeinek t´mogatotts´g´t, a ritka elemek elhagy´sakor a a a a a a ellen˝rizz¨ k, hogy a t´mogatotts´guk egyenl˝-e a sz¨ l˝ t´mogatotts´g´val, azaz supp(P )-vel. o u a a o uo a a a Az ezt teljes´ o elemeket nem kell ﬁgyelembe venn¨ nk mint gener´torokat a k¨vetkez˝ jel¨ltıt˝ u a o o o el˝all´ as sor´n. Ezen jel¨lteket t¨r¨lj¨ k ´s az utols´ elemeiket egy halmazban t´roljuk el, amit o´ ıt´ a o oo u e o a equisupport halmaznak h´ ıvunk ´s P -hez rendelj¨ k. Vegy¨ k ´szre, hogy az elemhalmazh´l´ pree u u e ao ﬁx bej´r´snak k¨sz¨nhet˝en a jel¨lt-el˝all´ as sor´n az X \ Y aa o o o o o´ ıt´ a z minden z ∈ Z, ahol az elemhalmaz bej´r´s´n´l haszn´lt rendez´s. aaa a a e Amikor ki´ ırjuk a GY gyakori elemhalmazt, vele egy¨ tt ki´ u ırjuk minden E ⊆ E halmazokkal vett uni´j´t is, ahol E a GY preﬁxeinek equisuporthalmazainak uni´ja. oa o 4.3. p´lda. Legyenek a k´telem˝, A preﬁx˝ gyakori elemhalmazok a k¨vetkez˝k : e e u u o o {AB, AC, AD} ´s supp(A) = supp(AB) = supp(AC) = 4 tov´bb´ supp(AD) = 3. A t¨bbi e a a o A preﬁx˝ jel¨lt el˝all´t´s´hoz egyed¨l az AD elemhalmazt kell ﬁgyelembe venn¨nk. Azonban u o o´ ı a a u u egy jel¨lt l´trehoz´s´hoz mind az apriori, az ECLAT- ´s az FP-growth algoritmusn´l legal´bb o e a a e a a k´t elemhalmaz sz¨ks´ges, ´gy itt v´get is ´r az A preﬁx˝ halmazok feldolgoz´sa. Az AD ´s A e u e ı e e u a e elemhalmazok ki´r´sakor BC minden r´szhalmaz´t is hozz´juk kell venni, ´gy v´g¨l az AD, ı a e a a ı e u ABD, ACD, ABCD, valamint az A, AB, AC, ABC halmazok ker¨lnek ki´r´sra ; az el˝bbiek u ı a o t´mogatotts´ga 3, ut´bbiak´ 4 lesz. a a o e Ha az adatb´zis csak z´rt elemhalmazokat tartalmaz, akkor nem tudjuk ezt a nyes´st ala a e kalmazni, a t´mogatotts´gok egyenl˝s´g´nek vizsg´lata viszont lelass´ az algoritmust. A taa a oe e a ıtja pasztalat azonban azt mutatja, hogy az ellen˝rz´s gyors (p´ld´ul az Apriori algoritmusn´l nem o e e a a kell ujra bej´rni a sz´f´t), ´s nem okoz cache miss-t. A kev´s nemz´rt elemhalmazt tartal´ a oa e e a maz´ adatb´zisokn´l eleny´sz˝ a fut´siid˝ n¨veked´se. Az equisupport nyes´s ez´rt biztons´gos o a a e o a o o e e e a gyors´ asi tr¨ kknek tekinthet˝. ıt´ u o A fenti le´ asban nem haszn´ltuk ki az Apriori algoritmus saj´toss´gait, csak azt, hogy az ır´ a a a algoritmus alulr´l ´p´ o e ıtkez˝ ´s az elemhalmaz bej´r´s sor´n deﬁni´lva van egy rendez´s ´s ´ a oe aa a a e e ıgy preﬁx is. A tov´bbiakban jobban a r´szletekbe m´lyed¨ nk ´s megn´zz¨ k, hogy mit kell tenn¨ nk a e e u e e u u az Apriori algoritmusban, ha a preﬁx equisupport nyes´st k´ anjuk alkalmazni. e ıv´ Az Apriori algoritmus sz´f´s megk¨zel´ ese eset´n minden cs´ cshoz egy list´t kell oa o ıt´ e u a hozz´venn¨ nk, mely az equisupport halmaz elemeit tartalmazza. A ritk´nak bizonyul´ a u a o jel¨ltek elt´vol´ asakor ellen˝rizz¨ k, hogy a lev´l t´mogatotts´ga megegyezik-e preﬁx´nek o a ıt´ o u e a a e t´mogatotts´g´val. Ha igen, a levelet t¨r¨lhetj¨ k a sz´f´b´l, ´s az ´le c´ ej´t hozz´´ a a a oo u oa o e e ımk´ e aırjuk a sz¨ l˝ uo equisupport halmaz´hoz. Minden i elem egy equisupport halmazban tekinthet˝ egy i c´ ej˝ a o ımk´ u hurok´lnek. A hurok´leket nem kell ﬁgyelembe venni a t´mogatotts´g meghat´roz´sakor, de a e e a a a a jel¨lt-el˝all´ asn´l igen. o o´ ıt´ a 4.4. p´lda. Legyenek AB, AC, BC a gyakori p´rok. supp(AB) = supp(A) = supp(AC) e a ´s supp(B) = supp(BC) = supp(BD). A 4.6 abra a sz´fa ritka jel¨ltek elt´vol´t´sa ut´ni e ´ o o a ıa a allapot´t mutatja. Vegy¨k ´szre, hogy ha a hurok´leket ﬁgyelmen k´v¨l hagytuk volna a jel¨ltge´ a u e e ı u o ner´l´s sor´n, akkor az ABC elemhalmazt nem all´tottuk volna el˝ mint jel¨lt, holott minden aa a ´ ı o o r´szhalmaza gyakori. e

4. FEJEZET. GYAKORI ELEMHALMAZOK

64

A C B

B C,D

4.6. abra. P´lda : equisupport levelek elt´vol´ asa ´ e a ıt´ Ez a p´lda az equisupport nyes´s ´s a zs´kutcanyes´s k¨zti osszef¨ gg´sre is felh´ a ﬁgyele e e a e o ¨ u e ıvja met. L´ttuk, hogy a B csom´pont nem vezet 2 m´lys´g˝ lev´lbe, ´ a zs´kutcanyes´s t¨r¨lte a o e e u e ıgy a e oo ´ volna ezt a cs´ csot, ´s nem lett volna jel¨lt az ABC elemhalmaz. Ujra kell ´rtelmezn¨ nk u e o e u a csom´pontok m´lys´g´t a zs´kutcanyes´sn´l az´rt, hogy ne t¨r¨lj¨n olyan leveleket, amiko e e e a e e e oo o re sz¨ ks´g lehet a jel¨lt-el˝all´ as sor´n. Az X elemhalmaz t´mogatotts´ga megegyezik az X u e o o´ ıt´ a a a olyan b˝v´ es´nek t´mogatotts´g´val, ahol a hozz´adott elem az X valamely preﬁx´hez tartoz´ o ıt´ e a a a a e o equisupport halmaz egy eleme. ´ amikor ﬁgyelembe vessz¨ k az X csom´pont m´lys´g´t a Igy u o e e e zs´kutcanyes´s sor´n, hozz´ kell adnunk X aktu´lis m´lys´g´hez a gy¨k´rb˝l az X-be vezet˝ a e a a a e e e o e o o pontok equisupport halmazainak osszm´ret´t. P´ld´ul a 4.6 abr´n l´that´ sz´f´n a B m´lys´ge ¨ e e e a ´ a a o oa e e 1 helyett 3.

4.2.7. Borgelt-f´le t´mogatotts´g-meghat´roz´s e a a a a
Ha a tranzakci´kat sz´f´ban vagy Patr´ o oa ıcia-f´ban t´roljuk, akkor egy m´sik technik´t is a a a a haszn´lhatunk a t´mogatotts´gok meghat´roz´s´ra [22, 23]. Ezt a m´dszert alkalmazza Chrisa a a a aa o tian Borgelt a vil´gh´ u Apriori implement´ci´ja utols´ v´ltozataiban. a ır˝ a o o a Az a megﬁgyel´s all az otlet m¨g¨tt, hogy k´t tranzakci´ a k¨z¨s preﬁxig ugyanazt a proge ´ ¨ o o e o o o ramfut´st eredm´nyezi a t´mogatotts´g meghat´roz´sakor (ugyanazt a sz´far´szt j´rjuk be). a e a a a a o e a Ha sz´f´ban t´roljuk a tranzakci´kat, akkor rendelkez´sre all minden sz¨ ks´ges inform´ci´ a oa a o e ´ u e a o k¨z¨s preﬁxekr˝l. Megoldhat´, hogy ugyanazokat a preﬁxeket csak egyszer dolgozzuk fel, ´s ne o o o o e annyiszor, ah´nyszor el˝fordulnak. a o A tranzakci´f´ba minden csom´ponthoz egy sz´ml´l´t rendel¨ nk. Az I elemhalmaz oa o a ao u sz´ml´l´ja azoknak a tranzakci´knak a sz´m´t t´rolja, amelyek preﬁxe I. Ebb˝l a szempontb´l a ao o a a a o o ez a megold´s elt´r a bemenet t´rol´s´n´l bemutatott (l´sd 4.2.4-es r´sz) sz´fa alap´ mega e a aa a a e o u old´st´l (´s ink´bb egy olyan FP-f´ra hasonl´ amelyb˝l elhagytuk a kereszt´leket ´s a fejl´c a o e a a ıt, o e e e t´bl´t, l´sd a 4.7 oldal). A tranzakci´ sz´f´n´l ´s a jel¨lt sz´f´n´l haszn´lt rendez´snek meg a a a o oa a e o oa a a e kell egyeznie. Ez h´tr´ny, mivel az egyes sz´f´khoz m´s-m´s rendez´s lenne optim´lis. a a oa a a e a Sajnos a [22]-ben nincsen r´szletesen kidolgozva az algoritmus, de v´lhet˝en a k¨vete e o o kez˝k´pp m˝ k¨dik : P´rhuzamosan bej´rjuk a jel¨lt- ´s a tranzakci´ sz´f´t dupl´n rekurz´ o e u o a a o e o oa a ıv m´don. K´t mutat´t haszn´lunk, melyek kezdetben az egyes gy¨kerekre mutatnak. Ezut´n o e o a o a v´gigmegy¨ nk mindk´t cs´ cs ´lein. Ha a tranzakci´sz´fa aktu´lis c´ eje kisebb vagy egyenl˝ e u e u e o o a ımk´ o a m´sik c´ en´l, akkor rekurz´ a ımk´ e ıvan tov´bbl´p¨ nk a tranzakci´sz´f´ban a gyerekcsom´pontra a e u o oa o (az sz´fa aktu´lis csom´pontmutat´ja nem v´ltozik). Amennyiben a k´t c´ o a o o a e ımke egyenl˝, a reo kurzi´t azokkal a gyerekekkel folytatjuk, amelyekre a mutat´k altal mutatott ´lek mutatnak. o o ´ e A 65 oldalon tal´lhat´ pszeud´-k´d a Borgelt-f´le t´mogatotts´g-meghat´roz´s egy tov´bb opa o o o e a a a a a timaliz´lt v´ltozat´t adja meg. a a a A fenti megold´snak h´tr´nya, hogy sok olyan utat j´r be a jel¨lt sz´f´ban, amelyet az a a a a o oa eredeti t´mogatotts´g meghat´roz´ m´dszer nem tenne, mert nem vezet lev´lbe. A m´dszer a a a o o e o

4. FEJEZET. GYAKORI ELEMHALMAZOK

65

Algorithm 2 BORGELT SUPPCOUNT Require: nc : a sz´fa aktu´lis csom´pontja, o a o nt : a tranzakci´fa aktu´lis csom´pontja, o a o : az nc -b˝l lev´lbe vezet˝ ut hossza, o e o´ i : az nc legkisebb olyan ´l´nek indexe, amely c´ eje nagyobb, mint az nt -be vezet˝ ´l c´ eje ee ımk´ o e ımk´ = 0 then nc .sz´ml´l´ ← nc .sz´ml´l´ + nt .sz´ml´l´ a ao a ao a ao else for j = 0 to nt .´lsz´m − 1 do e a while i < nc .´lsz´m AND nc .´l[i].c´ e a e ımke < nt .´l[j].c´ e ımke do i ← i+1 end while if i < nc .´lsz´m AND nc .´l[i].c´ e a e ımke ≥ nt .´l[j].c´ e ımke then e BORGELT SUPPCOUNT(nc , nt .´l[j].gyermek, , i) if nc .´l[i].c´ e ımke = nt .´l[j].c´ e ımke then BORGELT SUPPCOUNT(nc .´l[i].gyermek, nt .´l[j].gyermek, − 1, 0) e e i ← i+1 end if else break end if end for end if nem veszi ﬁgyelembe, hogy a tranzakci´nak csak egy r´sz´t kell ki´rt´keln¨ nk. Megoldhatjuk a o e e e e u probl´m´t, ha hozz´rendel¨ nk egy sz´ml´l´t a tranzakci´ sz´fa minden pontj´hoz. A sz´ml´l´ e a a u a ao o o a a ao adja meg a pontb´l kiindul´ leghosszabb ut hossz´t. A t´mogatotts´g meghat´roz´sa sor´n o o ´ a a a a a a nem vessz¨ k ﬁgyelembe azokat a csom´pontokat, melyek sz´ml´l´ja kisebb, mint − 1, ahol u o a ao azon l´p´sek sz´m´t adja, amelyeket meg kell m´g tenni a jel¨ltsz´fa aktu´lis pontj´b´l, hogy e e a a e o o a a o lev´lbe jussunk. Az algoritmus gyors´ e ıthat´, ha a tranzakci´ sz˝ r´s´nek otlet´t (l´sd 4.2.5-¨s o o uee ¨ e a o r´sz) is alkalmazzuk. Tov´bbi r´szletek tudhatunk meg a [22] tanulm´nyb´l. e a e a o if

4.2.8. Fut´si id˝ ´s mem´riaig´ny a oe o e
A GYEK feladat megad´sakor elmondtuk, hogy m´r az eredm´ny ki´ asa – ami a fut´si a a e ır´ a id˝nek a r´sze – az |I|-ben exponenci´lis lehet. A mem´riaig´nyr˝l is hasonl´ mondhat´ el. Az o e a o e o o o ( + 1)-elem˝ jel¨ltek el˝all´ as´hoz sz¨ ks´g¨ nk van az osszes -elem˝ jel¨ltre, amelyek sz´ma u o o´ ıt´ a u e u ¨ u o a |I| ak´r |I|/2 is lehet. Ezek a fels˝ korl´tok ´lesek is, hiszen min supp = 0-n´l minden elemhalmaz a o a e a gyakori. Az algoritmus ind´ asa el˝tt teh´t nem sokat tudunk mondani a fut´si id˝r˝l. A fut´s sor´n, ıt´ o a a oo a a azonban egyre t¨bb inform´ci´t gy˝ jt¨ nk, ´ felmer¨ l a k´rd´s, hogy ezt fel tudjuk-e haszn´lni o a o u u ıgy u e e a az algoritmus marad´k fut´si idej´nek j´sl´s´ra. P´ld´ul, ha a gyakori elemek sz´ma n´gy, akkor e a e o aa e a a e tudjuk, hogy a legnagyobb gyakori elemhalmaz m´rete legfeljebb n´gy (azaz m´g legfeljebb e e e h´romszor olvassuk v´gig az adatb´zist), az osszes jel¨lt maxim´lis sz´ma pedig 4 + 4 + a e a ¨ o a a 2 3 + 4 = 11. A k¨vetkez˝kben megvizsg´ljuk, hogy mit tudunk elmondani a jel¨ltek sz´m´r´l ´s o o a o a ao e 4

4. FEJEZET. GYAKORI ELEMHALMAZOK a maxim´lis jel¨ltek m´ret´r˝l, ha adottak az -elem˝ gyakori elemhalmazok (GY ). a o e eo u A k¨vetkez˝ r´sz fontos fogalma a kanonikus reprezent´ci´ lesz. o o e a o 4.5. lemma. Adott n ´s e pozit´v eg´szek eset´ben a k¨vetkez˝ fel´r´s egy´rtelm˝ : ı e e o o ı a e u n= m + m −1 mr + · · ·+ , −1 r

66

ahol r ≥ 1, m > m −1 > · · · > mr ´s mj ≥ j minden j = r, r + 1, . . . , sz´mra. e a Ezt a reprezent´ci´t h´ ak -kanonikus reprezent´ci´nak . Meghat´roz´sa nagyon egyszer˝ : a o ıvj´ a o a a u −1 e m -nek ki kell el´g´ e ıtenie a m ≤ n < m +1 felt´telt, m −1 -nek a m−1 ≤ n − m < m −1 +1 −1 −1 felt´telt, ´s ´ tov´bb, am´ n − m − m−1 − · · · − mr nulla nem lesz. e e ıgy a ıg r Legyen I = {i1 , i2 , . . . , im } elemek halmaza ´s GY egy olyan I feletti halmazcsal´d1 , amelye a nek minden eleme -elem˝ . Az -n´l nagyobb m´ret˝ I ⊆ I halmaz fedi a GY -et, ha I minden u e e u elem˝ r´szhalmaza eleme GY -nek. Az osszes lehets´ges ( +p)-m´ret˝ GY -et fed˝ halmazokb´l u e ¨ e e u o o alkotott halmazcsal´dot J +p (GY )-lel jel¨lj¨ k. Nem v´letlen, hogy ezt a halmazt ugyan´ gy a o u e u jel¨lt¨ k, mint az Apriori algoritmus jel¨ltjeit, ugyanis az ( +p)-m´ret˝ jel¨ltek ezen halmazo u o e u o csal´dnak az elemei, ´s ha az algoritmus sor´n minden jel¨lt gyakori, akkor az ( + p)-m´ret˝ a e a o e u jel¨ltek halmaza megegyezik J +p (GY )-lel. o A k¨vetkez˝ t´tel megadja, hogy adott GY eset´n legfeljebb mennyi lehet a J +p (GY ) o o e e elemeinek sz´ma. a 4.6. t´tel. Ha e |GY | = -kanonikus reprezent´ci´, akkor a o |J +p (GY )| ≤ m + +p m mr m −1 +· · ·+ r −1 ms m −1 , + · · ·+ s+p −1+p

+

ahol s a legkisebb olyan eg´sz, amelyre ms < s + p. Ha nincs ilyen eg´sz sz´m, akkor s = r − 1. e e a A fenti t´tel a Kruskal–Katona t´tel k¨vetkezm´nye, ez´rt a t´telben szerepl˝ fels˝ korl´tot a e e o e e e o o a +p tov´bbiakban KK (|GY |)-el jel¨lj¨ k. a o u 4.7. t´tel. A 4.6. t´telben szerepl˝ fels˝ korl´t ´les, azaz adott n, , p sz´mokhoz mindig l´tezik e e o o a e a e GY , amelyre |GY | = n, ´s |J +p (GY )| = KK +p (|GY |). e A kanonikus reprezent´ci´ seg´ eg´vel egyszer˝ ´les fels˝ becsl´st tudunk adni a legnagyobb a o ıts´ e ue o e jel¨lt m´ret´re (jel¨l´sben maxsize(GY )) is. Tudjuk, hogy |GY | < m +1 , ami azt jelenti, hogy o e e oe nem l´tezhet olyan jel¨lt, amelynek m´rete nagyobb m -n´l. e o e e 4.8. k¨vetkezm´ny. Amennyiben a |GY | sz´mnak az -kanonikus reprezent´ci´j´ban szerepl˝ o e a a oa o els˝ tag m , akkor maxsize(GY ) ≤ m . o Az m sz´mot a tov´bbiakban µ (|GY |)-el jel¨lj¨ k. Ez az ´rt´k azt is megmondja, hogy mekkora a a o u e e jel¨ltm´retn´l v´lik null´v´ a fels˝ korl´t, azaz : o e e a a a o a
1

A H-t az I feletti halmazcsal´dnak nevezz¨k, amennyiben H ⊆ 2I . a u

4. FEJEZET. GYAKORI ELEMHALMAZOK 4.9. k¨vetkezm´ny. µ (|GY |) = + min{p|KK o e
+p

67 (|GY |) = 0} − 1

A marad´k fut´si id˝ j´sl´s´ra a k¨vetkez˝ all´ as ny´ jt seg´ eget. e a o o aa o o ´ ıt´ u ıts´ 4.10. k¨vetkezm´ny. Az osszes lehets´ges -n´l nagyobb m´ret˝ jel¨lt sz´ma legfeljebb o e ¨ e e e u o a KK
o ¨sszes

(|GY |) =

µ (|GY |) p=1

KK

+p

(|GY |).

A fenti korl´tok sz´pek ´s egyszer˝ ek, mivel csak a e e u k´t param´tert haszn´lnak : az e e a aktu´lis m´retet a e ´s az -elem˝ gyakori elemhalmazok sz´m´t (|GY |). e u a a Enn´l j´val t¨bbet tudunk. Nem csak a gyakori e o o elemhalmazok sz´m´t ismerj¨ k, hanem m´r pontoa a u a san meghat´roztuk oket magukat is ! Az uj inform´ci´ a ˝ ´ a o seg´ eg´vel sz´mos esetben jobb fels˝ korl´tot adhaıts´ e a o a tunk. P´ld´ul, ha a GY -ben csak p´ronk´nt diszjunkt e a a e elemhalmazok vannak, akkor nem all´ ´ ıtunk el˝ jel¨lteo o ket. A 4.6. t´telben szerepl˝ fels˝ korl´t azonban j´val e o o a o nagyobb lehet null´n´l. A k¨vetkez˝kben bemutatjuk, a a o o hogyan lehet a megl´v˝ fels˝ korl´tot az m´ret˝ gyae o o a e u kori elemhalmazok strukt´r´j´ra rekurz´ u aa ıvan alkalmazni. Ehhez feltessz¨ k, hogy egy teljes rendez´st tudunk u e deﬁni´lni az I elemein, ami alapj´n tetsz˝leges elema a o halmaznak meg tudjuk hat´rozni a legkisebb elem´t. a e Vezess¨ k be a k¨vetkez˝ k´t jel¨l´st : u o o e oe

Angol kutat´k all´tj´k, apuk´ddal o ´ ı a a ” val´ kapcsolatod befoly´solja, mio a lyen f´rﬁakat e tal´lsz a vonz´nak. o Szerint¨k az eg´szs´ges apa-l´nya u e e a kapcsolatot apol´ l´nyok ink´bb ´ o a a az ugynevezett ´ alfa-h´m ı t´pus´ ı u f´rﬁakhoz vonz´dnak : a vesz´lyes e o e kin´zet˝, sz´les all´, d´s szem¨ld¨k˝ e u e ´ u u o o u t´pusokhoz, m´g azok a l´nyok, akikı ı a nek kev´sb´ pozit´v a kapcsolatuk a e e ı csal´dfenntart´val, azok ink´bb a ﬁa o a nom von´s´, m´r szinte n˝ies kin´zet˝ a u a o e u f´rﬁakat r´szes´tik el˝nyben.” Forr´s : e e ı o a http://shape.proweb.hu/main.php? rovat=6&cikk=507

GY i = {I − {i}|I ∈ GY , i = min I}, ´ o u A GY i halmazt ugy kapjuk GY -b˝l, hogy vessz¨ k azon halmazokat, amelyek legkisebb eleme i, majd t¨r¨lj¨ k ezekb˝l az i elemet. oo u o Ezek ut´n deﬁni´lhatjuk a k¨vetkez˝ rekurz´ f¨ ggv´nyt tetsz˝leges p > 0-ra : a a o o ıv u e o KK ∗,p (GY )=
|GY | p+1

min{KK

+p

(|GY |),

i ∗ i∈I KK −1,p (GY )} +p

, ha = 1 , ha > 1.

A deﬁn´ ob´l k¨vetkezi, hogy KK ∗,p (GY ) ≤ KK ıci´ o o 4.11. t´tel. |J +p (GY )| ≤ KK ∗,p (GY ). e

(|GY |), tov´bb´ a a

Bizony´t´s: A bizony´ as teljes indukci´n alapul, az = 1 eset trivi´lis. Tulajdonk´ppen csak ıa ıt´ o a e az kell bel´tni, hogy a |J +p (GY )| ≤ KK ∗−1,p (GY i )
i∈I

Az egyszer˝ s´g kedv´´rt vezess¨ k be a k¨vetkez˝ jel¨l´st : H ∪ i = {I ∪ {i}|I ∈ H}, ahol H egy ue ee u o o oe I feletti halmazcsal´d. Vegy¨ k ´szre, hogy GY = i∈I GY i ∪ i ´s GY i ∩ GY j = ∅ minden i = j a u e e elemp´rra. Azaz a GY halmazcsal´d egy part´ oj´t k´pezt¨ k. a a ıci´ a e u

4. FEJEZET. GYAKORI ELEMHALMAZOK Amennyiben I ∈ J +p (GY ), ´s I-nek legkisebb eleme i, akkor I \ {i} ∈ J e I \ {i} minden ( − 1)-elem˝ r´szhalmaza GY i -beli. Ebb˝l k¨vetkezik, hogy u e o o J +p (GY ) ⊆
i∈I −1+p (GY i

68 ), hiszen

J −1+p (GY i ) ∪ i.
−1+p (GY i

Abb´l, hogy az GY i halmazcsal´dok p´ronk´nt diszjunktak k¨vetkezik, hogy J o a a e o is p´ronk´nt diszjunkt halmazcsal´dok. Ebb˝l k¨vetkezik az all´ as, hiszen : a e a o o ´ ıt´ |J +p (GY )| ≤ | =
i∈I

)∪i

i∈I

J −1+p (GY i ) ∪ i| |J −1+p (GY i ) ∪ i| |J −1+p (GY i )| KK ∗−1,p (GY i ),

=
i∈I

≤

i∈I

ahol az utols´ egyenl˝tlens´gn´l az indukci´s feltev´st haszn´ltuk. o o e e o e a

A p´ronk´nt diszjunkt halmazok esete j´ p´lda arra, hogy a minimum kifejez´sben szerepl˝ a e o e e o m´sodik tag kisebb lehet az els˝n´l. El˝fordulhat azonban az ellenkez˝ eset is. P´ld´ul legyen a o e o o e a 3 GY2 = {AB, AC}. K¨nny˝ ellen˝rizni, hogy KK2 (|GY2 |) = 0, ugyanakkor a m´sodik tagban o u o a szerepl˝ osszeg 1-et ad. Nem tudhatjuk, hogy melyik ´rt´k a kisebb, ´ jogos a k´t ´rt´k o ¨ e e ıgy e e e minimum´t venni. a Jav´ ıthatjuk a legnagyobb jel¨lt m´ret´re, illetve az osszes jel¨lt sz´m´ra vonatkoz´ fels˝ o e e ¨ o a a o o ∗ ∗ e korl´tokon is. Legyen µ (GY ) = + min{p|KK +p (GY ) = 0} − 1 ´s a
µ∗ (GY ) ∗ KKosszes (GY ¨

)=
p=1

KK ∗+p (GY ).

4.12. k¨vetkezm´ny. maxsize(GY ) ≤ µ∗ (GY ) ≤ µ (|GY |). o e 4.13. k¨vetkezm´ny. Az osszes lehets´ges -n´l nagyobb m´ret˝ jel¨lt sz´ma legfeljebb o e ¨ e e e u o a ∗ ∗ o ¨sszes (|GY |). KK¨sszes (GY ) lehet, ´s KK¨sszes (GY ) ≤ KK e o o
∗ A KK ∗ ´rt´k f¨ gg a rendez´st˝l. P´ld´ul a KK2,1 ({AB, AC}) ´rt´ke 1, amennyiben a e e u e o e a e e rendez´s szerinti legkisebb elem A, ´s 0 b´rmely m´s esetben. Elm´letileg meghat´rozhatjuk e e a a e a az osszes rendez´s szerinti fels˝ korl´tot, ´s kiv´laszthatjuk azt, amelyik a legkisebb ´rt´ket ¨ e o a e a e e adja. Ez a megold´s azonban t´ l sok id˝be telne. A sz´fa altal haszn´lt rendez´s szerinti fels˝ a u o o ´ a e o korl´tot viszonylag k¨nnyen meghat´rozhatjuk. Ehhez azt kell l´tnunk, hogy a gy¨k´r i c´ ej˝ a o a a o e ımk´ u o aaa ´l´hez tartoz´ r´szfa levelei reprezent´lj´k a GY i elemeit. A sz´fa egyetlen bej´r´s´val egy ee o e a a egyszer˝ rekurz´ m´dszer seg´ eg´vel minden cs´ cshoz kisz´m´ u ıv o ıts´ e u a ıthatjuk a KK ∗−d,p (GY I ) ´s −d e −d+p I I u e e u e e e o KK −d (|GY −d |) ´rt´keket, ahol d a cs´ cs m´lys´g´t jel¨li, GY −d pedig az adott cs´ cshoz

4. FEJEZET. GYAKORI ELEMHALMAZOK

69

tartoz´ r´szfa altal reprezent´lt elemhalmazokat. A gy¨k´rhez kisz´m´ o e ´ a o e a ıtott k´t ´rt´k adja meg e e e a KK ´s KK ∗ korl´tokat. e a Ha a marad´k fut´si id˝ becsl´s´re k´ anjuk haszn´lni a fenti fels˝ korl´tot, akkor tudnunk e a o ee ıv´ a o a kell, hogy a jel¨ltek t´mogatotts´g´nak meghat´roz´sa f¨ gg az Apriori algoritmusban felo a a a a a u haszn´lt adatstrukt´ r´t´l. Sz´fa eset´ben p´ld´ul egy jel¨lt el˝fordul´s´nak meghat´roz´s´hoz a uao o e e a o o aa a aa el kell jutnunk a jel¨ltet reprezent´l´ lev´lhez, ami a jel¨lt m´ret´vel ar´nyos l´p´ssz´m´ o ao e o e e a e e a u ∗ m˝ veletet ig´nyel. A marad´k fut´si id˝ pontosabb fels˝ becsl´s´hez a KK +p (GY ) ´rt´keket u e e a o o ee e e s´ lyozni kell ( + p)-vel. u

4.3. Az ECLAT algoritmus
Az Eclat az ures mint´b´l indulva egy rekurz´ m´lys´gi jelleg˝ bej´r´st val´s´ meg. A ¨ a o ıv, e e u aa o ıt rekurzi´ m´lys´ge legfeljebb eggyel t¨bb, mint a legnagyobb gyakori elemhalmaz m´rete. Az o e e o e Apriori-val szemben mindig egyetlen jel¨ltet all´ el˝, majd ennek azonnal meghat´rozza a o ´ ıt o a t´mogatotts´g´t. Az ( + 1)-elem˝ , P preﬁx˝ jel¨lteket, ahol |P | = − 1 az -elem˝ , P preﬁx˝ a a a u u o u u gyakori elemhalmazokb´l all´ el˝ egyszer˝ p´ronk´nti uni´k´pz´ssel. o ´ ıtja o u a e o e e Az algoritmus k¨zponti fogalma az un. TID-halmaz. Egy elemhalmaz TID-halmaz´nak o ´ a (Transaction IDentiﬁer) elemei azon bemeneti sorozatok azonos´ oi (sorsz´mai), amelyek tarıt´ a talmazz´k az adott elemhalmazt. M´s sz´val egy TID-halmaz a vertik´lis adatb´zis egy mega a o a a felel˝ sora. P´ld´ul AD, AC, ABCD, B, AD, ABD, D bemenet eset´n az {A, C} elemhalmaz o e a e TID-halmaza {1,2}, amennyiben egy tranzakci´ azonos´ oja megegyezik a bemeneti sorozatban o ıt´ elfoglalt hely´vel, ´s a helyek sz´moz´s´t null´t´l kezdj¨ k. e e a aa ao u A TID-halmaz k´t fontos tulajdons´ggal b´ : e a ır I. Az I elemhalmaz TID-halmaz´nak m´rete megadja az I t´mogatotts´g´t. a e a a a II. Egy jel¨lt TID-halmaz´t megkaphatjuk a gener´torainak TID-halmazaib´l egy egyszer˝ o a a o u metszetk´pz´ssel. e e Az Eclat pszeudok´dja az al´bbi. o a El˝sz¨r meghat´rozzuk a gyakori elemeket, majd fel´p´ uk a gyakori elemek TID-halmazait. o o a e ıtj¨ A k´s˝bbiekben nem haszn´ljuk a bemenetet, csak a TID-halmazokat. Az algoritmus l´nyege eo a e a Eclat-seg´d rekurzi´s elj´r´s. Jel¨lj¨ k a P preﬁx˝ , P -n´l eggyel nagyobb m´ret˝ gyakori e o aa o u u e e u elemhalmazokb´l alkotott halmazcsal´dot GY P -vel. Nyilv´nval´, hogy GY ∅ = GY1 . o a a o Az Eclat jel¨lt-el˝all´ asa megegyezik az Apriori jel¨lt-el˝all´ as´val, azzal a o o´ ıt´ o o´ ıt´ a k¨ l¨nbs´ggel, hogy nem ellen˝rizz¨ k az uni´k´pz´ssel kapott halmaznak minden r´szhalmaz´ra, uo e o u o e e e a hogy gyakori-e (a m´lys´gi bej´r´s miatt ez az inform´ci´ nem is all rendelkez´s¨ nkre). L´that´, e e aa a o ´ eu a o hogy az Eclat abban is k¨ l¨nb¨zik az Apriori-t´l, hogy egy jel¨lt el˝all´ asa ut´n azonnal uo o o o o´ ıt´ a meghat´rozza a t´mogatotts´g´t, miel˝tt ujabb jel¨ltet all´ a a a a o ´ o ´ ıtana el˝. N´zz¨ nk egy p´ld´t a keo e u e a res´si t´r bej´r´s´ra. e e aaa 4.14. p´lda. Legyen T = ACDE, ACG, AF GM, DM ´s min supp = 2. Els˝ l´p´sben mege e o e e ∅ hat´rozzuk a gyakori elemeket : A, C, D, G, M , ami nem m´s, mint GY . Ezut´n el˝all´tjuk ´s a a a o´ ı e azonnal meg is hat´rozzuk az (A, C), (A, D), (A, G), (A, M ) p´rok uni´j´t. Ezek k¨z¨l csak az a a oa o u AC, AG halmazok gyakoriak. A k¨vetkez˝ rekurzi´s l´p´sben ennek a k´t halmaznak vessz¨k az o o o e e e u uni´j´t, all´tjuk el˝ a TID-halmaz´t, amely alapj´n kider¨l, hogy az ACG ritka, ´s a rekurzi´ oa ´ ı o a a u e o

4. FEJEZET. GYAKORI ELEMHALMAZOK Algorithm 3 Eclat Require: T : tranzakci´k sorozata, o min supp : t´mogatotts´gi k¨ sz¨b, a a u o for all t ∈ T do for all i ∈ t do J1 ← J1 ∪ {i} i.sz´ml´l´ ← i.sz´ml´l´ + 1 a ao a ao end for end for for all j ∈ J1 do if j.sz´ml´l´ ≥ min supp then a ao GY1 ← GY1 ∪ {j} end if end for for i ← 1 to |T | do for all j ∈ ti ∩ GY1 do j.T ID ← j.T ID ∪ {i} end for end for return GY1 ∪ Eclat-seg´d(∅, GY1 , min supp) e

70

Algorithm 4 Eclat-seg´d e Require: P : preﬁx elemhalmaz. GY P : P preﬁx˝ , P -n´l eggyel nagyobb m´ret˝ gyakori elemhalmazokb´l alkotott halmazu e e u o P csal´dot GY -vel, a min supp : t´mogatotts´gi k¨ sz¨b, a a u o for all gy ∈ GY P do for all gy ∈ GY P , gy gy do j ← gy ∪ gy j.T ID ← gy.T ID ∩ gy .T ID if |j.T ID| ≥ min supp then GY gy ← GY gy ∪ {j} end if end for if |GY gy | ≥ 2 then GY ← GY ∪ GY gy ∪ Eclat-seg´d(gy, GY gy , min supp) e else GY ← GY ∪ GY gy end if end for return GY ezen aga v´get ´r. Ezut´n a C elemnek vessz¨k az uni´j´t a sorban ut´na k¨vetkez˝ elemekkel ´ e e a u oa a o o egyes´vel ´s ´gy tov´bb. e e ı a

4. FEJEZET. GYAKORI ELEMHALMAZOK

71

L´tnunk kell, hogy az Eclat legal´bb annyi jel¨ltet all´ el˝, mint az Apriori. A m´lys´gi a a o ´ ıt o e e bej´r´s miatt ugyanis egy jel¨lt el˝all´ as´n´l nem all rendelkez´s¨ nkre az osszes r´szhalmaz. Az aa o o´ ıt´ a a ´ eu ¨ e el˝z˝ p´lda eset´ben p´ld´ul az {A,C,G} t´mogatotts´g´t hamarabb vizsg´lja, mint a {C,G} o o e e e a a a a a halmaz´t, holott ez ut´bbi ak´r ritka is lehet. Ebben a tekintetben teh´t az Eclat rosszabb e o a a az Apriori-n´l, ugyanis t¨bb lesz a ritka jel¨lt. a o o Az Eclat igazi ereje a jel¨ltek t´mogatotts´g´nak meghat´roz´s´ban van. A jel¨ltek TIDo a a a a aa o halmazainak el˝all´ asa egy rendk´ ul egyszer˝ ´s nagyon gyors m˝ velet lesz. Emellett ahogy o´ ıt´ ıv¨ ue u haladunk egyre m´lyebbre a m´lys´gi bej´r´s sor´n, ugy cs¨kken a TID-halmazok m´rete, e e e aa a ´ o e ´s ezzel a t´mogatotts´g meghat´roz´s´nak ideje is. Ezzel szemben az Apriori-n´l ahogy e a a a aa a haladunk az egyre nagyobb m´ret˝ jel¨ltek fel´, ugy n˝ a sz´fa m´lys´ge, ´s lesz egyre lassabb e u o e ´ o o e e e minden egyes jel¨lt t´mogatotts´g´nak meghat´roz´sa. o a a a a a A keres´si t´r bej´r´sa f¨ gg a preﬁx deﬁn´ oj´t´l, amit az elemeken deﬁni´lt rendez´s e e aa u ıci´ a o a e hat´roz meg. Melyek lesznek azok a jel¨ltek, amelyek az Apriori-ban nem lenn´nek jel¨ltek a o e o (teh´t biztosan ritk´k), illetve v´rhat´an melyik az a rendez´s, amely a legkevesebb ilyen tulaja a a o e dons´g´ halmazt adja ? Ha egy elemhalmaz jel¨lt az Eclat algoritmusban, de az Apriori-ban a u o nem, akkor van olyan r´szhalmaza, amely ritka. Amennyiben felt´telezz¨ k, hogy az elemek e e u f¨ ggetlenek, akkor azon r´szhalmaz el˝fordul´s´nak lesz legkisebb a val´sz´ us´ge (´s ezzel u e o aa o ın˝ e e egy¨ tt az es´lye annak, hogy ritka), amely a leggyakoribb elemet nem tartalmazza. A jel¨lt preu e o ﬁxe gener´tor, teh´t gyakori, ´ akkor lesz a legnagyobb es´lye annak, hogy minden r´szhalmaz a a ıgy e e gyakori, ha a preﬁx a leggyakoribb elemet nem tartalmazza. Az Eclat algoritmusn´l a legkea vesebb ritka jel¨ltet ´s ´ a legjobb fut´si id˝t teh´t a gyakoris´g szerint n¨vekv˝ rendez´st˝l o e ıgy a o a a o o e o v´rhatjuk. a 4.15. p´lda. Ennek a gondolatmenetnek az illusztr´l´s´ra n´zz¨k a k¨vetkez˝ p´ld´t. Legyenek e aa a e u o o e a gyakori halmazok a k¨vetkez˝k : A, B, C, D, AB, AC, BC, AD, ABC, tov´bb´ supp(D) o o a a supp(C) supp(B) supp(A). Amennyiben az Eclat algoritmus a gyakoris´g szerint a cs¨kken˝ sorrendet haszn´lja, akkor az el˝all´t´s sorrendj´ben a k¨vetkez˝ halmazok lesznek o o a o´ ı a e o o jel¨ltek : A, B, C, D, AB, AC, AD, ABC, ABD, ACD, BC, BD, CD. Ugyanez gyakoris´g o a szerint n¨vekv˝ sorrendn´l D, C, B, A, DC, DB, DA, CB, CA, CBA, BA. Az ut´bbi esetben o o e o teh´t n´gy ritka jel¨lt helyett (ABD, ACD, BD, CD) csak kett˝ lesz (CD, BD). Megjegyezz¨k, a e o o u hogy ez a k´t elemhalmaz az Apriori eset´ben is jel¨lt lesz. A gyakoris´g szerint cs¨kken˝ esete e o a o o ben egyszer all´tunk el˝ olyan h´romelem˝ jel¨ltet, amelynek van olyan k´telem˝ r´szhalmaza, ´ ı o a u o e u e amelyet nem vizsg´ltunk. Ez a jel¨lt a CBA ´s a nem megvizsg´lt r´szhalmaz a BA. Mivel a a o e a e r´szhalmaz ´ppen a leggyakoribb elemeket t´rolja, ez´rt van nagy es´lye annak, hogy gyakori e e a e e (f˝leg ha hozz´vessz¨k, hogy a jel¨lt k´t gener´tora, CB ´s CA is gyakori). o a u o e a e Jav´ ıthatunk az algoritmus hat´konys´g´n, ha nem a jel¨ltek TID-list´it t´roljuk, hanem e a a o a a a jel¨lt ´s preﬁxe TID-list´j´nak k¨ l¨nbs´g´t. A preﬁx t´mogatotts´g´b´l ´s a TID list´k o e aa uo e e a a a o e a k¨ l¨nbs´g´b˝l a t´mogatotts´g egy´rtelm˝ en megadhat´. A k¨ l¨nbs´gi list´k ak´r nagyobuo e e o a a e u o uo e a a bak is lehetnek az eredeti TID-list´kn´l (p´ld´ul, ha a I t´mogatotts´ga kicsi, de a preﬁx´nek a a e a a a e t´mogatotts´ga nagy), ´ a legjobb megold´st a k´t technika otv¨z´se adhatja (p´ld´ul 4-n´l a a ıgy a e ¨ o e e a e kisebb elemsz´mn´l TID lista, ut´na k¨ l¨nbs´gi list´k) [190]. A k¨ l¨nbs´gi list´t haszn´l´ algoa a a uo e a uo e a ao ritmusok nagy f¨l´nnyel verik a t¨bbi algoritmust, amennyiben a bemenet s˝ r˝ , ´s nagy m´ret˝ oe o uu e e u gyakori mint´k is vannak. a

4. FEJEZET. GYAKORI ELEMHALMAZOK

72

4.3.1. kdci 4.3.2. lcm

4.4. Az FP-growth algoritmus
Az FP-growth algoritmus[74] 2 egy m´lys´gi jelleg˝ , rekurz´ algoritmus, a keres´si t´r e e u ıv e e bej´r´sa tekintet´ben megegyezik az Eclat-tal. A t´mogatotts´gok meghat´roz´s´t az egyeaa e a a a aa lem˝ gyakori halmazok meghat´roz´s´val, majd a bemenet sz˝r´s´vel ´s vet´t´s´vel val´s´ u a aa u e e e ıe e o ıtja meg rekurz´ m´don. A bemenet sz˝ r´se azt jelenti, hogy az egyes tranzakci´kb´l t¨r¨lj¨ k ıv o ue o o oo u a benn¨ k el˝fordul´ ritka elemeket. A T elemhalmaz P elemhalmazra vet´ es´t (jel¨l´sben u o o ıt´ e oe T |P ) pedig ugy kapjuk, hogy vessz¨ k a P -t tartalmaz´ tranzakci´kat, majd t¨r¨lj¨ k bel˝l¨ k a ´ u o o oo u ou P -t. P´ld´ul ACD, BCE, ABCE, BE, ABCE |B = CE, ACE, E, ACE . Az algoritmus pszee a udok´dja a k¨vetkez˝kben olvashat´. o o o o Algorithm 5 FP-growth Require: T : tranzakci´k sorozata, o a a u o min supp : t´mogatotts´gi k¨ sz¨b, FP-growth-seg´d(T , min supp, ∅) e A seg´delj´r´s harmadik param´tere (P ) egy preﬁx elemhalmaz, az els˝ param´ter pedig az e aa e o e eredeti bemenet P -re vet´ ese. Az eredeti bemenet ∅-ra vet´ ese megegyezik onmag´val. ıt´ ıt´ ¨ a Egy rekurzi´s l´p´s h´rom f˝ l´p´sb˝l all. El˝sz¨r meghat´rozzuk azon elemek o e e a o e e o ´ o o a t´mogatotts´g´t, amelyek el˝fordulnak valamelyik tranzakci´ban (1–4. sorok). Ezekb˝l a a a o o o kiv´lasztjuk a gyakoriakat (5–7. sorok). Ezut´n minden gy gyakori elemet egyes´vel vesz¨ nk a a e u (9. sor). Meghat´rozzuk a gy-hez tartoz´ vet´ a o ıtett bemenetet, majd megh´ ıvjuk az algoritmust rekurz´ ıvan a T |gy bemenetre. T¨r¨ln¨ nk kell a gy elemet a T ∗ -beli tranzakci´k elemei k¨z¨ l oo u o o u (13. sor) annak ´rdek´ben, hogy egy jel¨ltet csak egyszer all´ e e o ´ ıtsunk el˝. o A jel¨ltek el˝all´ as´nak tekintet´ben az FP-growth algoritmus a legegyszer˝ bb. Ha az I o o´ ıt´ a e u elemhalmaz gyakori, akkor a k¨vetkez˝ rekurzi´s szinten azon I ∪j halmazok lesznek a jel¨ltek, o o o o ahol j az I-re vet´ ıtett bemenetben el˝fordul´ elem ´s I ∪ j nem volt jel¨lt kor´bban. Tuo o e o a lajdonk´ppen az FP-growth a nagy elemsz´m´ jel¨ltek t´mogatotts´g´nak meghat´roz´s´t e a u o a a a a aa visszavezeti h´rom egyszer˝ m˝ veletre : egyelem˝ gyakori elemhalmazok kiv´logat´sa, sz˝ r´s ´s a u u u a a ue e vet´ ıtett bemenet el˝all´ asa. o´ ıt´ A 9. sorban egyes´vel vessz¨ k a gyakori elemeket. Ezt valamilyen rendez´s szerint kell e u e tenn¨ nk ´s ez a rendez´s hat´rozza meg, hogy milyen sorban j´rjuk be a keres´si teret, milyen u e e a a e vet´ ıtett bemeneteket all´ ´ ıtunk el˝ ´s mely elemhalmazok lesznek a hamis jel¨ltek. Az Eclat-n´l oe o a elmondottak itt is ´lnek ; v´rhat´an abban az esetben lesz a hamis jel¨ltek sz´ma minim´lis, e a o o a a amennyiben a preﬁxben a legritk´bb elemek vannak, azaz a 9. sorban gyakoris´g szerint n¨vekv˝ a a o o sorban vessz¨ k az elemeket. u Az FP-growth algoritmus szerves r´sze az FP-fa, amelyben a sz˝ rt bemenetet t´roljuk. e u a Az FP-fa seg´ eg´vel k¨nnyen el˝all´ ıts´ e o o´ ıthatjuk a vet´ ıtett bemeneteket, azokban k¨nnyen mego
Az FP a Frequent Pattern r¨vid´ ese, ami miatt az algoritmust mintan¨vel˝ algoritmusnak is h´ ak. Ez o ıt´ o o ıvj´ az elnevez´s azonban f´lrevezet˝, ugyanis szinte az osszes GYEK algoritmus mintan¨vel˝ abban az ´rtelemben, e e o ¨ o o e hogy egy uj jel¨lt a gener´torainak egyelem˝ b˝v´ ese, vagy m´s sz´val n¨vel´se. Az FP-growth saj´ts´ga ´ o a u o ıt´ a o o e a a nem a jel¨ltek el˝all´ asa, hanem a jel¨ltek t´mogatotts´g-meghat´roz´s´nak m´dja. o o´ ıt´ o a a a aa o
2

4. FEJEZET. GYAKORI ELEMHALMAZOK Algorithm 6 FP-growth-seg´d e Require: T : vet´ ıtett bemenet, min supp : t´mogatotts´gi k¨ sz¨b, a a u o P : preﬁx elemhalmaz, for all t ∈ T do for all i ∈ t do J1 ← {i} i.sz´ml´l´ ← i.sz´ml´l´ + 1 a ao a ao end for end for for all j ∈ J1 do if j.sz´ml´l´ ≥ min supp then a ao GY1 ← GY1 ∪ {j} end if end for ˝ e T ∗ ← szur´s(T, GY1 ) for all gy ∈ GY1 do T ∗ |gy ← vet´ ´s(T ∗ , gy) ıte GY ← GY ∪ {P ∪ {gy}} FP-growth(T ∗ |gy,min supp, P ∪ {gy}) ¨ e T ∗ ← torl´s(T ∗ , gy) end for return GY

73

hat´rozhatjuk az elemek t´mogatotts´g´t, amib˝l el˝all´ a a a a o o´ ıthatjuk a vet´ ıtett, majd sz˝ rt bemeneu tet. Ezt a vet´ ıtett ´s sz˝ rt bemenetet szint´n egy FP-f´ban t´roljuk, amelyet vet´tett FP-f´nak e u e a a ı a h´ ıvunk. Az FP-fa egy kereszt´lekkel ´s egy fejl´c t´bl´val kib˝v´ e e e a a o ıtett sz´fa. Az ´lek c´ ei gyakori o e ımk´ elemek. Az egyszer˝ bb le´ as kedv´´rt egy (nemgy¨k´r) cs´ cs c´ ej´n a cs´ csba mutat´ ´l u ır´ ee o e u ımk´ e u o e c´ ej´t ´rtj¨ k. Minden cs´ cs egy elemhalmazt reprezent´l, amelynek elemei a gy¨k´rb˝l a ımk´ e e u u a o e o cs´ csig vezet˝ ut cs´ csainak c´ eivel egyeznek meg. Minden cs´ cshoz egy sz´ml´l´t rendel¨ nk. u o´ u ımk´ u a ao u Ez a sz´ml´l´ adja meg, hogy a cs´ cs altal reprezent´lt halmaz mennyi bemeneti (vagy vet´ a ao u ´ a ıtett) elemhalmaznak a preﬁxe. Az azonos c´ ej˝ cs´ csok l´ncolt listaszer˝ en ossze vannak k¨tve ımk´ u u a u ¨ o keresztir´ny´ ´lekkel. A l´nc legels˝ elem´re mutat a fejl´ct´bl´nak az adott elem´hez tartoz´ a ue a o e e a a e o mutat´ja. o 4.16. p´lda. Tegy¨k fel, hogy bemenetk´nt a ACDF M Q, ABCF M O, BF O, BCKSQ, e u e ACF M Q, CS, DF J, F HI sorozat van adva, ´s min supp = 3. A gyakori elemek : A, B, C, e F , M , Q, amelyek t´mogatotts´ga rendre 3, 3, 5, 6, 3, 3. Ekkor a sz˝rt bemenetet ( ACF M Q, a a u ABCF M , BF , BCQ, ACF M Q, C, F , F ) reprezent´l´ FP-fa, amely gyakoris´g szerint ao a cs¨kken˝ sorrendet (Q M B A C F ) haszn´l, a 4.7. abr´n l´that´ o o a ´ a a o Egy FP-f´t hasonl´ m´don ´p´ unk fel, mint egy sz´f´t. K¨ l¨nbs´g, hogy egy I elemhalmaz a o o e ıt¨ oa uo e besz´ r´s´n´l nem csak az I-t reprezent´l´ lev´lnek a sz´ml´l´j´t n¨velj¨ k eggyel, hanem minden uaa a ao e a aoa o u olyan cs´ cs´t, amelyet ´rint¨ nk a besz´ r´s sor´n (hiszen ezen cs´ csokat reprezent´l´ halmazok u e e u ua a u ao az I preﬁxei). A keresztir´ny´ ´leket ´s a fejl´ct´bl´t is egyszer˝ en megkaphatjuk. Legyen a a u e e e a a u fejl´ct´bla mutat´inak kezdeti ´rt´ke NIL. Amikor besz´ runk egy uj, i c´ ej˝ cs´ csot, akkor e a o e e u ´ ımk´ u u

4. FEJEZET. GYAKORI ELEMHALMAZOK
elem
F C A B M A Q 3 M 2 Q 2 M 1 B 1 Q 1 3 C 6 B 1

74
8 F C 2 B 1

mutató

4.7. abra. Az ACF M Q, ABCF M , BF , BCQ, ACF M Q, C, F , F sz˝ rt bemenetet t´rol´ ´ u a o FP-fa. k´t dolgot kell tenn¨ nk. Az uj cs´ cs kereszt´l mutat´ja felveszi a fejl´ct´bla i-hez tartoz´ e u ´ u e o e a o bejegyz´s´t, majd ezt a bejegyz´st az uj cs´ cs c´ ere cser´lj¨ k. Ezzel tulajdonk´ppen olyan ee e ´ u ım´ e u e l´ncot k´sz´ unk, amelyben a cs´ csok a besz´ r´si idej¨ k szerint cs¨kken˝en vannak rendezve a e ıt¨ u ua u o o (az el˝sz¨r besz´ rt elem van legh´tul) ´s a lista a fejl´ct´bl´ban kezd˝dik. o o u a e e a a o A fejl´c mutat´kb´l kiindulva ´s a kereszt´leket k¨vetve megkaphatjuk a vet´ e o o e e o ıtett bemenetet ´s meghat´rozhatjuk a vet´ e a ıtett bemenetben gyakori elemeket. Az adott tranzakci´k el˝fordul´sa o o a megegyezik a kereszt´lek altal mutatott pontok sz´ml´l´j´val. Ezek alapj´n a vet´ e ´ a aoa a ıtett bemenetet sz˝ rhetj¨ k ´s bel˝le egy ujabb FP-f´t ´p´ u u e o ´ a e ıthet¨ nk fel. Ezt a f´t vet´ u a ıtett FP-f´nak h´ a ıvjuk. A k¨vetkez˝ abr´n az M elemhez tartoz´ vet´ o o´ a o ıtett ´s sz˝ rt bemenet FP-f´j´t l´thatjuk (amelyet e u aa a a Q elem feldolgoz´sa ut´n kapunk). a a
elem F C A 3 A 3 C 3 mutató F 3

4.8. abra. p´lda : vet´ ´ e ıtett FP-fa Az FP-fa m´rete – hasonl´an a sz´fa m´ret´hez – f¨ gg az elemeken deﬁni´lt rendez´st˝l. Az e o o e e u a e o FP-growth algoritmus akkor lesz hat´kony, ha a fa elf´r a mem´ri´ban, ez´rt fontos lenne e e o a e azt a rendez´st haszn´lni, ami v´rhat´an a legkisebb f´t eredm´nyezi. Az Apriori eset´ben e a a o a e e m´r elmondtuk, hogy az a heurisztika, amely az elemek gyakoris´g szerint cs¨kken˝ rendez´s´t a a o o ee

4. FEJEZET. GYAKORI ELEMHALMAZOK

75

haszn´lja, altal´ban kis m´ret˝ f´t eredm´nyez. a ´ a e u a e Egyszer˝ lesz a vet´ u ıtett bemenet el˝all´ asa ´s a sz˝ rt bemenetb˝l egy elem t¨rl´se, amennyio´ ıt´ e u o o e ben a legritk´bb gyakori elemet (gyr ) vessz¨ k el˝sz¨r. Ez osszhangban all azzal, hogy a pszeua u o o ¨ ´ dok´d 9. sor´ban az elemeket gyakoris´g szerint n¨vekv˝ sorrendben vessz¨ k. A gy r csak lev´l o a a o o u e c´ eje lehet. Mivel a f´b´l t¨r¨lni fogjuk a gyr c´ ej˝ cs´ csokat a rekurzi´s m˝ velet ut´n ımk´ a o oo ımk´ u u o u a (13. sor), a k¨vetkez˝ elem is csak lev´l c´ eje lesz. o o e ımk´ N´zz¨ k most meg, hogy amennyiben a sz˝ rt bemenet egy FP-f´ban van t´rolva, akkor e u u a a hogyan kaphatjuk meg a gyr elemre vett vet´ esben az elemek t´mogatotts´g´t. A fejl´ct´bla ıt´ a a a e a gyr elem´hez tartoz´ mutat´b´l kiindulva a kereszt´lek alkotta l´ncban pontosan azok a cs´ csok e o o o e a u vannak, amelyek gyr -t tartalmaz´ bemeneti elemet reprezent´lnak. Az egyes elemhalmazok o a el˝fordul´s´t a gyr c´ ej˝ cs´ csokhoz rendelt sz´ml´l´ adja meg, az elemeiket pedig a gy¨k´rig o aa ımk´ u u a ao o e fels´t´lva kaphatjuk. A lista utols´ cs´ cs´nak feldolgoz´sa ut´n rendelkez´s¨ nkre allnak a gy r ea o u a a a eu ´ elemhez tartoz´ vet´ o ıtett bemenetben valahol el˝fordul´ elemek t´mogatotts´gai, amely alapj´n o o a a a kiv´logathatjuk a vet´ a ıtett bemenetben gyakori elemeket. Ugyanilyen bej´r´ssal kaphatjuk meg a vet´ aa ıtett, majd sz˝ rt bemenetet tartalmaz´ FP-f´t. A u o a A nyugalom meg´v az UV sugarakt´l o o fejl´ct´bl´b´l kiindulva v´gigmegy¨ nk a l´ncolt lista ” e a a o e u a Amerikai kutat´k szerint a stressz o elemein. A cs´ cs altal reprezent´lt elemhalmazb´l ´s az UV-sug´rz´s egy¨ttesen tudu ´ a o e a a u t¨r¨lj¨ k a ritka elemeket, majd a kapott elemhal- nak csak igaz´n vesz´lyesek lenni. oo u a e mazt besz´ rjuk az uj FP-f´ba. A kis mem´riaig´ny Ez az eredm´ny azt az ismert t´nyt u ´ a o e e e ´rdek´ben a gyakoris´g szerint cs¨kken˝ sorrendet er˝s´ti meg, hogy a kr´nikus stressz e e a o o o ı o haszn´ljuk. Ezt a sorrendet a vet´ a ıtett bemenet lecs¨kkenti a b˝r v´dekez˝ k´pess´g´t. o o e o e e e alapj´n all´ a ´ ıtjuk fel (l´v´n az uj fa a vet´ e e ´ ıtett ´s sz˝ rt Ha teh´t nem idegesked¨nk, nem kell e u a u bemenetet fogja t´rolni), ami k¨ l¨nb¨zhet az eredeti f´ln¨nk a napsugarakt´l.” Forr´s : a uo o e u o a FP-f´ban alkalmazott rendez´st˝l. a e o http://www.habostorta.hu/hab/ tomy/tudomany/200507/a_nyugalom_ 4.17. p´lda. Folytassuk az el˝z˝ p´ld´t ´s all´tsuk megov_az_uvsugaraktol?print=1 e o o e a e ´ ı el˝ a legritk´bb gyakori elemhez (Q) tartoz´ vet´tett o a o ı ´s sz˝rt bemenetet. A fejl´ct´bla Q elem´hez tartoz´ e u e a e o mutat´b´l kiindulva mind¨ssze k´t cs´csot l´togatunk o o o e u a meg, ami azt jelenti, hogy a vet´tett bemenet k´t k¨l¨nb¨z˝ elemhalmazt tartalmaz : az F CAM ı e uo o o et k´tszer, a CB-t egyszer. Ez alapj´n a vet´tett bemenetben egyetlen gyakori elem van, C. e a ı Ez a rekurzi´s ag nem folytat´dik, hanem visszat´r a QC gyakori elemhalmazzal. Az FPo ´ o e f´b´l t¨r¨lhetj¨k a fejl´ct´bla Q bejegyz´s´hez tartoz´ mutat´b´l, keresztir´ny´ ´lek seg´ts´g´vel a o o o u e a e e o o o a ue ı e e el´rhet˝ cs´csokat. A k¨vetkez˝ vizsg´lt elem az M . Az M vet´tett bemenet´ben h´rom gyakoe o u o o a ı e a ri elem van, ´s a vet´tett sz˝rt bemenet az F CA elemhalmazt tartalmazza h´romszor. Ezt a e ı u a vet´tett, sz˝rt bemenetet egy egyetlen utb´l all´ FP-fa fogja reprezent´lni. A t¨bbi FP-fa ugyanı u ´ o ´ o a o ilyen egyszer˝en megkaphat´. u o Hat´konys´gi szempontb´l rendk´ ul fontos, hogy a rekurzi´t ne folytassuk, ha a vizsg´lt e a o ıv¨ o a FP-fa egyetlen utb´l all. A rekurzi´ helyett k´pezz¨ k ink´bb az ut altal reprezent´lt elemhalmaz ´ o ´ o e u a ´ ´ a minden r´szhalmaz´t. A r´szhalmaz t´mogatotts´g´t annak a cs´ csnak a sz´ml´l´ja adja meg, e a e a a a u a ao amely a legm´lyebben van a r´szhalmazt meghat´roz´ cs´ csok k¨z¨tt. e e a o u o o

4. FEJEZET. GYAKORI ELEMHALMAZOK

76

4.4.1. Az FP-growth* algoritmus
2003 november´ben megszervezt´k az els˝ gyakori elemhalmaz-kinyer˝ algoritmusok vere e o o seny´t [67]. B´rki benevezhetett egy altala k´sz´ e a ´ e ıtett programot. Ezeket k¨zpontilag teszo telt´k k¨ l¨nb¨z˝ adatb´zisokon, k¨ l¨nb¨z˝ t´mogatotts´gi k¨ sz¨b¨kkel. Nem volt olyan implee uo o o a uo o o a a u o o ment´ci´, amely minden esetben a legjobban szerepelt, de ki lehet emelni n´h´ny olyat, amelyek a o e a szinte mindig az els˝k k¨z¨tt v´geztek. A szervez˝k v´g¨ l annak adt´k a f˝d´ (egy s¨rt ´s o o o e o e u a o ıjat o e egy pelenk´t !), aki az FP-growth* algoritmust [69] k¨ ldte be. a u Az FP-growth* algoritmus az FP-growth m´dos´ asa. El˝nye, hogy gyorsabban all´ el˝ a o ıt´ o ´ ıtja o vet´ ıtett f´t, ami´rt viszont mem´ri´val ﬁzet. N´zz¨ k meg, hogy pontosan mi t¨rt´nik egy rekura e o a e u o e zi´s l´p´sben. El˝sz¨r ellen˝rizz¨ k, hogy a fa egyetlen utb´l all-e. Ha nem, akkor a legritk´bb o e e o o o u ´ o ´ a elemb˝l kiindulva el˝all´ o o´ ıtjuk a vet´ ıtett f´kat, ´s rekurz´ a e ıvan megh´ ıvjuk az algoritmust. A vet´ ıtett f´ban els˝ l´p´sk´nt meg kell hat´rozni a vet´ a o e e e a ıtett bemenetben szerepl˝ elemek t´mogatotts´g´t, o a a a m´sodik l´p´sk´nt pedig el˝all´ a e e e o´ ıtjuk a vet´ ıtett FP-f´t. Ez tulajdonk´ppen az aktu´lis fa adott a e a elemhez tartoz´ againak k´tszeri bej´r´s´t jelenti. Az els˝ bej´r´st lehet meggyors´ o ´ e aaa o aa ıtani egy seg´dt¨mb haszn´lat´val. e o a a Az FP-fa ´p´ es´n´l t¨lts¨ nk fel egy, kezdetben 0 ´rt´keket tartalmaz´ t¨mb¨t is. Amikor e ıt´ e e o u e e o o o besz´ runk egy t (ak´r vet´ u a ıtett) tranzakci´t az (ak´r vet´ o a ıtett) FP-f´ba, n¨velj¨ k eggyel a t¨mb a o u o (i, j)-edik cell´j´t, amennyiben az i ´s j elemei t-nek. A fa fel´p´ ese ut´n rendelkez´s¨ nkre all aa e e ıt´ a eu ´ egy t¨mb, ami tartalmazza az elemp´rok el˝fordul´s´t. Ha ezek ut´n egy vet´ o a o aa a ıtett f´t akarunk a k´sz´ e ıteni, akkor sz¨ ks´gtelen id˝t t¨lten¨ nk az els˝ l´p´ssel, hiszen a t¨mb megfelel˝ sor´b´l u e o o u o e e o o a o ¨ k¨zvetlen megkaphatjuk a t´mogatotts´gokat. Osszess´g´ben az els˝ l´p´s gyorsabb (nem kell o a a e e o e e a f´ban bolyonganunk, csak a t¨mb elemeit kiolvasni), a m´sodik lassabb (a t¨mb¨t is fel kell a o a o o t¨lteni), a mem´riafogyaszt´s pedig nagyobb (a t¨mb m´ret´vel). o o a o e e

4.4.2. Patricia

4.5. Elavult technik´k a
1993 ota k´tsz´z k¨r¨ li cikk jelent meg gyakori elemhalmazokat kinyer˝ algoritmusok ´ e a ou o t´m´j´ban. Legt¨bb cikk egy uj gyors´ asi tr¨ kk¨t vagy egy ugy m´dszert mutatott be ´s a e aa o ´ ıt´ u o ´ o e szerz˝i azt all´ ak, hogy az o m´dszer¨ k a legjobb. Ez nyilv´nval´an k´ptelens´g. A rengetek o ´ ıtj´ ˝ o u a o e e m´dszer miatt kialakult k´oszt n´h´ny kutat´ megel´gelte ´s megrendezt´k 2003-ban ´s 2004o a e a o e e e e ben a gyakori elemhalmazokat kinyer˝ algoritmusok verseny´t. Sebess´g tekintet´ben az Eclat o e e e ´s az Fp-growth k¨ l¨nb¨z˝ m´dos´ asai voltak a legjobbak, a mem´ria ter´n pedig az Apriori e u o o o o ıt´ o e volt kiemelked˝. o A tov´bbiakban felsoroljuk azokat az algoritmusokat, amelyeket mai napig megtal´lhatunk a a k¨ l¨nb¨z˝ adatb´ny´szati tank¨nyvekben, a legt¨bb kutat´ altal ismertek, de a versenyek sor´n uo o o a a o o o´ a egyik sem bizony´ ıtotta be, hogy bef´rne az elit algoritmusok k¨r´be. A tanulm´ny kor´bbi e oe a a verzi´iban ezek az elavult m´dszerek le´ asai is ott szerepeltek az Apriori, Eclat ´s Fp-growth o o ır´ e mellett, m´ra azonban csak a k¨vetkez˝ list´ban kapnak helyet : SETM [77], APRIORI-TID a o o a [7], APRIORI-HYBRID [7], DHP [129], DIC, Patr´ ıcia, Tree projection, DF-apriori [136],

4. FEJEZET. GYAKORI ELEMHALMAZOK

77

4.6. Mintav´telez˝ algoritmus elemz´se e o e
Az egyszer˝ mintav´telez˝ algoritmust bemutattuk az 5.5.4 r´szben. Itt azt vizsg´ljuk, hogy u e o e a mekkora mint´t c´lszer˝ venni annak ´rdek´ben, hogy az algoritmus minden gyakori elemhala e u e e mazt megtal´ljon. a

4.6.1. Mintav´tel nagys´ga e a
Mintav´telez´sen alapul´ elj´r´sokn´l a minta m´rete k¨zponti k´rd´s. Ha a minta t´ l kie e o aa a e o e e u csi, akkor a mint´b´l nyert inform´ci´ t´vol allhat a teljes adatb´zisban tal´lhat´ glob´lis a o a o a ´ a a o a helyzett˝l”. Mivel f¨l¨slegesen nagy minta lass´ algoritmusokat eredm´nyez, ez´rt fontos egy o oo u e e ” kicsi, de m´r pontos k´pet ad´ mintam´ret meghat´roz´sa. A 3.1.3 r´szben megadtuk, hogy a e o e a a e mekkora mint´t kell v´lasztani, ha azt akarjuk, hogy a relat´ gyakoris´gok megegyezzenek az a a ıv a el˝fordul´sok val´sz´ us´g´vel. Haszn´ljuk most is a A 3.1.3 r´szben bevezetett elnevez´seket o a o ın˝ e e a e e ´s jel¨l´seket. e oe N´zz¨ k, hogy mennyivel kell cs¨kkenteni a gyakoris´gi k¨ sz¨b¨t (min f req ) ahhoz, hogy e u o a u o o kicsi legyen annak val´sz´ us´ge, hogy tetsz˝leges gyakori elem mint´hoz tartoz´ gyakoris´ga o ın˝ e o a o a kisebb a cs¨kkentett k¨ sz¨bn´l, teh´t : o u o e a P(gyakoris´g(x, m) < min f req ) = P a Y < min f req m

egy adott k¨ sz¨bn´l (δ ) kisebb kell legyen ´s tudjuk, hogy u o e e p > min f req A fenti egyenletre alkalmazva a Hoeﬀding-korl´tot azt kapjuk, hogy a P P P Y < min f req = m

Y − p < min f req − p < m

Y − p < min f req − min f req m ≤ e−2(min freq’-min freq)
2m

teh´t ahhoz, hogy a hib´z´s val´sz´ us´ge kisebb legyen δ -n´l teljes¨ lnie kell, hogy a a a o ın˝ e e u min f req < min f req − 1 1 ln 2m δ

A 4.2 t´bl´zat azt mutatja, hogy r¨gz´ a a o ıtett hibakorl´t mellett (δ = 0.001) adott mintam´rethez a e mennyi legyen a cs¨kkentett k¨ sz¨b. o u o

4. FEJEZET. GYAKORI ELEMHALMAZOK Minta m´rete e 40000 60000 0.17 0.18 0.38 0.40 0.61 0.63 0.83 0.86 1.30 1.33 1.77 1.81

78

min freq (%) 0.25 0.50 0.75 1.00 1.50 2.00

20000 0.13 0.34 0.55 0.77 1.22 1.67

80000 0.19 0.41 0.65 0.88 1.35 1.84

4.2. t´bl´zat. A k¨ sz¨b cs¨kkent´se adott mintam´retekre r¨gz´ a a u o o e e o ıtett δ = 0.001 mellett

4.7. Elemhalmazok Galois lez´rja a
Egy minta z´rt, ha nincs vele egyez˝ t´mogatotts´g´ b˝vebb minta. Eset¨ nkben ez azt a o a a u o u jelenti, hogy ha egy elemhalmaz nem z´rt, akkor pontosan azokban a bemeneti elemekben a fordul el˝, amelyekben a lez´rtja. Ha p´ld´ul az A elem lez´rtja az AB halmaz, akkor tudjuk, o a e a a hogy az A halmaz soha nem fordul el˝ a bemeneti elemekben a B elem n´lk¨ l. o e u Ebben a r´szben a lez´rt tov´bbi tulajdons´gait fogjuk megismerni. Az´rt illetj¨ k a lez´rtat e a a a e u a a Galois jelz˝vel, mert teljes¨ lni fog a lez´r´s oper´torra a galois elm´letb˝l j´l ismert 3 tulajo u aa a e o o dons´g. Miel˝tt erre r´t´r¨ nk n´zz¨ k meg, hogy az elemhalmazokat tartalmaz´ mintak¨rnyezet a o aeu e u o o egy´rtelm˝ -e a z´rts´gra n´zve. e u a a e 4.18. lemma. Az elemhalmazokat tartalmaz´ mintak¨rnyezet a z´rts´gra n´zve egy´rtelm˝. o o a a e e u Bizony´t´s: Indirekt tegy¨ k fel, hogy az I elemhalmaznak l´tezik k´t lez´rtja, azaz l´tezik I , I ıa u e e a e k¨ l¨nb¨z˝ elemhalmazok, amelyekre a minimalit´s mellett teljes¨ lnek a I ⊂ I , I ⊂ I , |I | = uo o o a u = |I |, supp(I ) = supp(I ) felt´telek. Ez azt jelenti, ahogy azon tranzakci´k, amelyek I-t tare o talmazz´k, tartalmazz´k az I \ I ´s az I \ I halmazokat is. De ebb˝l k¨vetkezik, hogy ezek a a a e o o tranzakci´k I ∪ I is tartalmazz´k, azaz I ∪ I is lez´rtja I-nek, ´ sem I sem I nem lehet o a a ıgy minim´lis. a

A fentiek miatt a gyakori z´rt elemhalmazokb´l ´s azok t´mogatotts´gaib´l egy´rtelm˝ en a o e a a o e u meg tudjuk hat´rozni a gyakori elemhalmazokat ´s azok t´mogatotts´g´t. A gyakori z´rt mint´k a e a a a a a teh´t a z´rt mint´k egy vesztes´gmentes t¨m¨r´ ese, ´rdemes csak ezeket meghat´rozni ´s a a a e o o ıt´ e a e elt´rolni [130–132, 193]. a

4.7.1. A z´rt elemhalmazok fogalma a
A z´rt minta fogalm´t m´r bevezett¨ k az 5.2.1 r´szben. Ism´telj¨ k meg ugy, hogy a deﬁn´ o a a a u e e u ´ ıci´ elemhalmazokra vonatkozzon : Az I elemhalmaz z´rt, amennyiben nincs n´la b˝vebb halmaz, a a o amelynek t´mogatotts´ga megegyezik I t´mogatotts´g´val. Jel¨lj¨ k cover-rel azt a f¨ ggv´nyt, a a a a a o u u e amely egy elemhalmazhoz az azt tartalmaz´ tranzakci´k halmaz´t adja meg. o o a A z´rt elemhalmazokra adhatunk egy m´sik deﬁn´ ot is. Vezess¨ k, be a cover f¨ ggv´nyt : a a ıci´ u u e

4. FEJEZET. GYAKORI ELEMHALMAZOK

79

4.19. deﬁn´ o. Legyen T = t1 , . . . , tn tranzakci´k sorozata, amelynek minden eleme az I-nek ıci´ o egy r´szhalmaza. Deﬁni´ljuk a cover : 2N → 2I f¨ggv´nyt a k¨vetkez˝k´ppen e a u e o o e cover (T ) = {i ∈ I|∀j ∈ T, i ∈ cover(tj )} = cover(t)
t∈T

Teh´t cover (T ) megadja azon k¨z¨s elemeket, amelyeket minden olyan tranzakci´ tartalmaz, a o o o amelynek sorsz´ma T -beli. a A (cover, cover ) f¨ ggv´nyp´rt az T ´s I hatv´nyhalmazai k¨z¨tti Galois-kapcsolatnak u e a e a o o h´ ıvjuk. Legyen a p´ldaadatb´zisunk a k¨vetkez˝ : ACD, BCE, ABCE, BE, ABCE . Ekkor : e a o o cover({A, C}) = {1,3,5}, cover(∅) = {1,2,3,4,5}), cover ({1,2,3}) = {C}, cover ({1,4}) = ∅). Az al´bbi tulajdons´gok igazak tetsz˝leges t, t1 , t2 ⊆ T ´s I, I1 , I2 ⊆ I halmazokra : a a o e (1) I1 ⊆ I2 ⇒ cover(I1 ) ⊇ cover(I2 ) (1 ) T1 ⊆ T2 ⇒ cover (T1 ) ⊇ cover (T2 ) (2) T ⊆ cover(I) ⇐⇒ I ⊆ cover (T ) 4.20. deﬁn´ o. A h = cover ◦ cover (vagy h = cover ◦ cover ) oper´tort Galois-lez´r´s ıci´ a a a oper´tornak h´vjuk. a ı Bel´that´, hogy tetsz˝leges halmaznak a lez´rtja tartalmazza mag´t a halmazt, tov´bb´ a a o o a a a a Galois-lez´r´s oper´tora idempotens ´s monoton, teh´t aa a e a (I) I ⊆ h(I) (I ) T ⊆ h (T ) (II) h(h(I)) = h(I) (II ) h (h (T )) = h (T ) (II) I1 ⊆ I2 ⇒ h(I1 ) ⊆ h(I2 ) (III ) T1 ⊆ T2 ⇒ h (T1 ) ⊆ h (T2 ) 4.21. deﬁn´ o (z´rt elemhalmaz). I elemhalmaz z´rt, amennyiben I = h(I). ıci´ a a Tetsz˝leges elemhalmazt (I) tartalmaz´ minim´lis elemsz´m´ z´rt elemhalmazt a lez´r´s o o a a u a aa oper´tor alkalmaz´s´val kaphatunk meg ; ez ´ppen h(I) lesz. A p´ldaadatb´zisban tal´lhat´ a aa e e a a o z´rt elemhalmazok al´bbiak : a a z´rt elemhalmazok a {∅}, {C}, {B,E}, {B,C,E}, {A,C}, {A,B,C,E}, {A,C,D}, {A,B,C,D,E} Ad´sok vagyunk m´g annak bizony´ as´val, hogy a k´t deﬁn´ o ekvivalens, azaz, o e ıt´ a e ıci´ ha h(C) = C, akkor C-n´l nincs b˝vebb halmaz, amely t´mogatotts´ga megegyezne C e o a a t´mogatotts´g´val, illetve ford´ a a a ıtva. A k´t all´ as k¨zvetlen ad´dik a k¨vetkez˝ t´telb˝l. e ´ ıt´ o o o o e o 4.22. t´tel. Minden elem t´mogatotts´ga megegyezik lez´rtj´nak t´mogatotts´g´val, teh´t e a a a a a a a a supp(I) = supp(h(I))

4. FEJEZET. GYAKORI ELEMHALMAZOK Bizony´t´s: A lez´r´s (1) tulajdons´ga miatt supp(I) ≥ supp(h(I)). Ugyanakkor ıa aa a supp(h(I)) = |cover(h(I))| = |cover(cover (cover(I)))| = |h (cover(I))| ≤ supp(I) a (III’) miatt, amib˝l k¨vetkezik az egyenl˝s´g. o o oe

80

Az 5.4.2 r´szben bemutattuk, hogy a gyakori mint´kb´l hogyan v´laszthatjuk ki a z´rtakat, e a o a a illetve az APRIOR-CLOSE algoritmust, ami m´r eleve csak a gyakori z´rt mint´kat all´ el˝. a a a ´ ıtja o Az APRIOR-CLOSE algoritmusn´l l´teznek gyorsabb algoritmusok (CHARM [192], CLOSET a e [134], CLOSET+ [179], MAFIA [29]), ezek ismertet´s´t˝l eltekint¨ nk. eeo u

4.8. K´nyszerek kezel´se e e
Ebben a r´szben azt a speci´lis feladatot n´zz¨ k meg, hogy mik´nt lehet cs¨kkenteni a bee a e u e o menetet, ha az anti-monoton k´nyszerek mellett monoton k´nyszereket is megadunk. M´r az e e a altal´nos mintakeres´sn´l megt´rgyaltuk, hogy tetsz˝leges anti-monoton k´nyszer k¨nny˝ szerrel ´ a e e a o e o u be´p´ e ıthet˝ az APRIORI algoritmusba. Most azt n´zz¨ k meg, hogy a monoton k´nyszerek hoo e u e gyan alkalmazhat´k a bemeneti t´r cs¨kkent´s´re. o e o ee Adott egy bemeneti sorozat, minim´lis t´mogatotts´gi k¨ sz¨b ´s monoton k´nyszerek C hala a a u o e e maza. Feladat a bemenet cs¨kkent´se oly m´don, hogy b´rmely teljes algoritmus a cs¨kkentett o e o a o bemeneten is teljes legyen.

4.8.1. ExAnte
Az ExAnte [102] algoritmus k´tf´le l´p´st ism´tel eg´szen addig, am´ ez valamilyen e e e e e e ıg v´ltoz´st jelent. Az els˝ l´p´s azon tranzakci´k t¨rl´se, amelyek nem adnak igaz ´rt´ket minden a a o e e o o e e e C-beli k´nyszeren. Az ilyen tranzakci´k csak olyan mint´k t´mogatotts´g´t n¨velik, amelyek e o a a a a o ugysem el´g´ ki a k´nyszereket (ez k¨vetkezik a k´nyszerek monoton tulajdons´g´b´l). A ´ e ıtik e o e a a o m´sodik l´p´sben a bemenet elemei k¨z¨ l t¨r¨lj¨ k a ritk´kat, hiszen azok ugysem j´tszanak a e e o u oo u a ´ a szerepet a t´mogatotts´g meghat´roz´s´n´l. a a a aa a L´tnunk kell, hogy az els˝ l´p´sbeli t¨rl´s uj ritka elemekhez vezethet, ami cs¨kkenti bizonyos a o e e o e ´ o tranzakci´k m´ret´t, ami viszont ahhoz vezethet, hogy ezek ujabb k´nyszereket fognak s´rteni. o e e ´ e e Jogos teh´t, hogy a k´t m´dszert felv´ltva futtassuk addig, am´ van valami v´ltoz´s. Az a e o a ıg a a algoritmus a bemenet cs¨kkent´se mellett el˝all´ azon gyakori elemeket, amelyekre minden o e o´ ıtja k´nyszer teljes¨ l. Gyakori elemhalmaz csak ezekb˝l az elemekb˝l ´p¨ lhetnek fel. e u o o e u N´zz¨ nk egy p´ld´t. Az adatb´zisban 8 elem ´s 9 tranzakci´ van. Legyen min supp = 4. e u e a a e o Minden elemnek van egy ara. Az egyetlen k´nyszer (sum(i.´r) > 44) szerint a halmazban ´ e a tal´lhat´ term´kek ar´nak osszege 44-n´l nagyobb legyen. A k¨vetkez˝ k´t t´bl´zat adja meg a o e ´a ¨ e o o e a a az adatokat.

4. FEJEZET. GYAKORI ELEMHALMAZOK

81

term´k e A B C D E F G H

ar ´ 5 8 14 30 20 15 6 12

TID 1 2 3 4 5 6 7 8 9

tranzakci´ o B, C, D, G A, B, D, E B, C, D, G, H A, E, G C, D, F, G A, B, C, D, E A, B, D, F, G, H B, C, D B, E, F, G

ar osszeg ´ ¨ 58 63 70 31 65 77 76 52 49

Az els˝ v´gigolvas´s sor´n meghat´rozzuk az elemek t´mogatotts´g´t azon tranzakci´kban, o e a a a a a a o amelyek kiel´g´ a k´nyszert (a 4-es kiv´tel´vel mindegyik). Ezut´n t¨r¨lj¨ k a ritka elemeket e ıtik e e e a oo u (A, E, F, H). Ism´t v´gigmegy¨ nk az adatb´zison, de most m´r ezeket az elemeket nem n´zz¨ k, e e u a a e u aminek k¨vetkezt´ben ujabb tranzakci´k esnek ki (2,7,9). A kiesett tranzakci´k miatt cs¨kkeno e ´ o o o nek a t´mogatotts´gok, ´ ujabb elem lesz ritka (G). Ezt ´ folytatjuk, am´ van v´ltoz´s. A a a ıgy ´ ıgy ıg a a 4. v´gigolvas´s ut´n azt kapjuk, hogy csak az 1,3,6,8 tranzakci´kat ´s a B, C, D elemeket kell e a a o e ﬁgyelembe venni.

4.9. T¨bbsz¨r¨s t´mogatotts´gi k¨ sz¨b o o o a a u o
Az univerz´lis t´mogatotts´gi k¨ sz¨bnek vannak el˝nyei ´s h´tr´nyai. El˝nye, hogy fela a a u o o e a a o haszn´lhatjuk azt a t´nyt, hogy gyakori minta minden r´szmint´ja gyakori, ami alapj´n a e e a a hat´kony algoritmusokat adhatunk. H´tr´nya, hogy a ritk´n el˝fordul´, de m´gis fontos e a a a o o e mint´kat csak akkor tudjuk kinyerni, ha a t´mogatotts´gi k¨ sz¨b¨t alacsonyra all´ a a a u o o ´ ıtjuk. Ez viszont rengeteg gyakori mint´hoz fog vezetni, ha egy´ltal´n le tud futni az algoritmus. a a a K¨ l¨nb¨z˝ t´mogatotts´gi k¨ sz¨b¨k (vagy m´sk´nt t´mogatotts´gi k¨ sz¨b f¨ ggv´ny´nek) uo o o a a u o o a e a a u o u e e megad´s´val ez a probl´ma elker¨ lhet˝ : a nem l´nyeges mint´knak legyen nagy a k¨ sz¨b¨ k, a aa e u o e a u o u l´nyegesebbeknek legyen alacsony. e Egyedi t´mogatotts´gi k¨ sz¨b¨k bevezet´s´vel azonban felborul eddigi k´nyelmes vil´gunk, a a u o o ee e a amelyet az biztos´ ıtott, hogy nem lehet egy minta gyakori, ha van ritka r´szmint´ja. A r´szmint´k e a e a t´mogatotts´gi k¨ sz¨be ugyanis nagyobb lehet, ´ hi´ba nagyobb a t´mogatotts´ga, ett˝l m´g a a u o ıgy a a a o e lehet ritka. A k¨vetkez˝kben bemutatjuk a legels˝ ´s legegyszer˝ bb t´mogatotts´gi k¨ sz¨b o o o e u a a u o f¨ ggv´nyt, majd bemutatjuk az MSApriori algoritmust, amely ezt hat´konyan kezeli. u e e

4.9.1. MSApriori algoritmus
K´zzel megadni a 2I minden elem´nek t´mogatotts´gi k¨ sz¨b´t f´rads´gos, s˝t nagy |I| e e a a u o e a a o eset´n kivitelezhetetlen feladat. Az MSApriori algoritmusn´l csak az egyelem˝ elemhalmae a u zok t´mogatotts´gi k¨ sz¨b´t lehet megadni. Jel¨lj¨ k az i elem k¨ sz¨b´t M IS(i)-vel. Az I a a u o e o u u o e elemhalmaz t´mogatotts´gi k¨ sz¨be legyen a legkisebb t´mogatotts´gi k¨ sz¨bbel rendelkez˝ a a u o a a u o o elem´nek t´mogatotts´gi k¨ sz¨be (M IS(I) = mini∈I {M IS(i)}). Akkor gyakori az I halmaz, ha e a a u o t´mogatotts´ga nagyobb vagy egyenl˝ M IS(I)-n´l. a a o e A deﬁn´ ob´l k¨vetkezik, hogy t´nyleg nem mondhatjuk, hogy gyakori minta minden ıci´ o o e r´szmint´ja gyakori. P´ld´ul az ABC elemhalmaz BC r´szhalmaz´nak nagyobb lehet MIS e a e a e a

4. FEJEZET. GYAKORI ELEMHALMAZOK

82

´rt´ke. Ha a feladat megold´s´ra az APRIORI algoritmust haszn´ljuk ugy, hogy csak a gyakori e e aa a ´ elemhalmazok kiv´laszt´s´nak m´dj´t m´dos´ a aa o a o ıtjuk (min supp cser´je M IS(I)-re), akkor nem e garant´lt, hogy j´ megold´st kapunk. Ha p´ld´ul a BC ritka, akkor az ABC halmaz nem lenne a o a e a a jel¨ltek k¨z¨tt annak ellen´re, hogy ak´r gyakori is lehet. o o o e a Szerencs´re a probl´ma k¨nnyen orvosolhat´. Csak e e o o azt kell ´szrevenn¨ nk, hogy mi okozhatja a hib´t. Az e u a Vaks´got okoz a nyakkend˝ a o ” altal´noss´g megs´rt´se n´lk¨ l feltehetj¨ k, hogy az ele- A kutat´s szerint a szorosan ´ a a e e e u u a mek MIS ´rt´k¨ k alapj´n n¨vekv˝ sorba van rendez- megk¨t¨tt nyakkend˝ cs¨kkenthee e u a o o oo o o ve. A MIS deﬁn´ oj´b´l k¨vetkezik, hogy tetsz˝leges - ti a nyaki v´na hat´konys´g´t, ıci´ a o o o e e a a elem˝ I = {i1 , . . . , i } halmaz − 1 darab ( − 1)-elem˝ ez´ltal a szem v´rell´t´s´t, u u a e aa a r´szhalmaz´nak MIS ´rt´ke megegyezik I MIS ´rt´k´vel, ´s e a e e e e e e h´lyog a kialakul´s´hoz, a a ami M IS(i1 ). Ezeknek a r´szhalmazoknak teh´t gyakorinak legs´lyosabb e a u esetben pedig kell lenni¨ k, hiszen a t´mogatotts´g monotons´ga most is r´szleges vagy teljes vaks´ghoz u a a a e a fenn´ll. Az egyetlen r´szhalmaz, amely lehet ritka, az I leg- vezethet. M´g vesz´lyesebb a a e e e els˝ elem´t nem tartalmaz´ r´szhalmaz. Ezt a r´szhalmazt helyzet a v´kony nyak´ emberek o e o e e e u teh´t ne vizsg´ljuk a jel¨lt el˝all´ as m´sodik l´p´se sor´n. eset´ben, mert az o v´n´juk a a o o´ ıt´ a e e a e ˝ e a Kiv´tel ez al´l azon eset, amikor a m´sodik elem MIS ´rt´ke ´rz´kenyebb – mutatnak r´ az e o a e e e e a megegyezik az els˝ elem MIS ´rt´k´vel, mert ekkor m´g en- orvosok.” Forr´s : http://pvg. o e e e e a nek a r´szhalmaznak is gyakorinak kell lennie. e uw.hu/cikk/nyakkendo.html Amennyiben > 2, akkor biztos, hogy a gener´torok a egyike sem egyezik meg a legkisebb elemet nem tartalmaz´ o r´szhalmazzal ( >2 eset´ben ugyanis a gener´torok ( −2)-elem˝ preﬁxei megegyeznek, amelyek e e a u biztos, hogy tartalmazz´k a jel¨lt els˝ elem´t). Ez pedig garant´lja, hogy az algoritmus teljes, a o o e a amennyiben az osszes gyakori elemp´rt megtal´ltuk. N´zz¨ k meg most az egy- ´s k´telem˝ ¨ a a e u e e u jel¨ltek eset´t. o e Gyakori elemek meghat´roz´s´n´l a szok´sos elj´r´st k¨vetj¨ k : minden elem jel¨lt. a aa a a aa o u o Elemp´rok eset´ben azonban nem all´ a e ´ ıthatjuk, hogy egy p´r akkor jel¨lt, ha mindk´t eleme a o e gyakori. P´ld´ul az AB p´r lehet gyakori akkor is, ha az A ritka. Ha ugyanis B-nek MIS ´rt´ke e a a e e kisebb A-nak MIS ´rt´k´n´l, akkor az AB-nek a MIS ´rt´ke megegyezik B-nek a MIS ´rt´k´vel, e e e e e e e e e ´ AB lehet gyakori. Szerencs´re sz¨ ks´gtelen az osszes elemet ﬁgyelembe venni. Ha p´ld´ul az ıgy e u e ¨ e a A elem ritka ´s az A MIS ´rt´ke a legkisebb, akkor a t´mogatotts´g monotons´g´b´l k¨vetkezik, e e e a a a a o o hogy az A-t tartalmaz´ halmazok ritk´k. Ha teh´t MIS ´rt´k szerint n¨vekv˝en vannak reno a a e e o o dezve az elemek, akkor a legkisebb˝l kiindulva keress¨ k meg az els˝ gyakori elemet. Az osszes o u o ¨ ut´na k¨vetkez˝t ﬁgyelembe kell venni a jel¨ltp´rok el˝all´ as´n´l akkor is, ha valamelyik ritka. a o o o a o´ ıt´ a a

5. fejezet Gyakori mint´k kinyer´se a e
A fejlett t´rsadalmakra jellemz˝, hogy sz´mos, a mindennapi ´let¨ nk sor´n gyakran haszn´lt a o a e u a a term´ket ´s szolg´ltat´st n´lk¨ l¨zhetetlennek tartunk. Min´l soksz´ ubb a felhaszn´l´i csoport, e e a a e uo e ın˝ ao ann´l nehezebb egy olyan uzenetet eljuttatni r´sz¨ kre, ami mindenki sz´m´ra egy´rtelm˝ , a ¨ e u a a e u am ha valakinek ez siker¨ l, az nagy haszonnal j´rhat, hiszen p´r sz´zal´kpontos n¨veked´s ´ u a a a e o e is szigniﬁk´ns a nagy volumenben ´rt´kes´ a e e ıtett term´kekn´l. A piaci strat´gi´k kialak´ as´n´l is e e e a ıt´ a a els˝sorban a sokas´gra, illetve a sokas´g jellemz˝ire vagyunk k´ ancsiak. Egyedi, k¨ l¨nc elemek o a a o ıv´ uo akkor ´rdekesek, ha p´ld´ul csal´sokat akarunk felder´ e e a a ıteni. Fenti eseteken k´ ul vizsg´lhatjuk a ıv¨ a gyakori balesetet okoz´ helyzeteket, a sz´m´ og´pes h´l´zatban gyakran el˝fordul´, riaszt´ssal o a ıt´ e ao o o a v´gz˝d˝ esem´nysorozatokat, vagy pl. azt, hogy az egyes nyomtatott m´diumoknak milyen az e o o e e olvas´i osszet´tele, ´s amennyiben t¨bb magazinnak, ujs´gnak hasonl´ a c´lcsoportja, ´rdemes o ¨ e e o ´ a o e e uzenet¨ nket t¨bb helyen is elhelyezni, hogy hat´konyabban oszt¨n¨zz¨ k meglev˝ ´s potenci´lis ¨ u o e ¨ o o u oe a v´s´rl´inkat. aa o Oldalakon kereszt¨ l lehetne sorolni azon p´ld´kat, amikor a gyakran el˝fordul´ dolgok” u e a o o ” ´rt´kes inform´ci´t rejtenek magukban. A szakirodalomban a dolgokat mint´knak nevezz¨ k, ´s e e a o a u e gyakori mint´k kinyer´s´r˝l besz´l¨ nk. a e e o eu A minta t´ ıpusa t¨bbf´le lehet. V´s´rl´i szok´sok felder´ es´n´l gyakori elemhalmazokat keo e aa o a ıt´ e e res¨ nk, ahol az elemek a term´keknek felel meg. Utaz´sokkal kapcsolatos szok´sokn´l a gyakran u e a a a ig´nybe vett, k¨lts´ges szolg´ltat´sok sorrendje is fontos, ´ gyakori sorozatokat keres¨ nk. Tee o e a a ıgy u lekommunik´ci´s h´l´zatokban olyan felt´telek (predik´tumok) gyakori fenn´ll´s´t keress¨ k, a o ao e a a aa u amelyek gyakran eredm´nyeznek riaszt´st. Ezeket a gyakori bool formul´kat megvizsg´lva kape a a a hatjuk meg p´ld´ul a gyakori t´ves riaszt´sok okait. A b¨ng´sz´si szok´sok alapj´n fejleszthetj¨ k e a e a o e e a a u oldalaink strukt´ r´j´t, linkjeit, ´ a l´togat´k m´g gyorsabban ´s hat´konyabban tal´lj´k meg uaa ıgy a o e e e a a a keresett inform´ci´kat. A b¨ng´sz´s folyamat´t c´mk´zett gy¨keres f´kkal jellemezhetj¨ k Gyaa o o e e a ı e o a u kori mint´kat kinyer˝ algoritmusokat a r´kkutat´sban is alkalmaztak. Azt vizsg´lt´k, hogy a a o a a a a r´kkelt˝ anyagokban vannak-e gyakran el˝fordul´ molekula-strukt´ r´k. Ezeket a strukt´ r´kat a o o o ua ua c´ ezett gr´fokkal ´ ımk´ a ırjuk le. A p´ld´kb´l k¨vetkezik, hogy a minta t´ e a o o ıpusa sokf´le lehet. Sejthetj¨ k, hogy m´s technik´kat e u a a kell majd alkalmazni pl. c´ ezett gr´fok keres´s´n´l, mintha csak egyszer˝ elemhalmazokat ımk´ a ee e u keres¨ nk. Ebben a r´szben egy altal´nos le´ ast adunk, egy egys´ges matematikai keretbe heu e ´ a ır´ e lyezz¨ k a gyakori minta kinyer´s´nek feladat´t. Emellett ismertetj¨ k a legfontosabb m´dszerek u ee a u o altal´nos – a minta t´ at´l f¨ ggetlen – le´ as´t. ´ a ıpus´ o u ır´ a

83

´ ´ 5. FEJEZET. GYAKORI MINTAK KINYERESE

84

5.1. A gyakori minta deﬁn´ oja ıci´
E r´sz meg´rt´s´hez felt´telezz¨ k, hogy az olvas´ tiszt´ban van a 2.1 r´szben deﬁni´lt foe e ee e u o a e a galmakkal (rendez´sek, korl´t, val´di korl´t, maxim´lis korl´t, predik´tum,). e a o a a a a 5.1. deﬁn´ o. A H halmaz a rendez´sre n´zve lok´lisan v´ges, ha minden x, y ∈ H elemhez, ıci´ e e a e ahol x y,v´ges sz´m´ olyan z elem l´tezik, amelyre x z y. e a u e 5.2. deﬁn´ o. Az MK=(M, ) p´rost, ahol M egy alaphalmaz, az M-en ´rtelmezett r´szben ıci´ a e e rendez´s, mintak¨rnyezetnek nevezz¨k, amennyiben M-nek pontosan egy minim´lis eleme van, e o u a M halmaz a rendez´sre n´zve lok´lisan v´ges ´s rangsz´mozott (graded), azaz l´tezik a | | : e e a e e a e : M → Z un. m´retf¨ggv´ny , amire |m| = |m | + 1, ha m-nek maxim´lis val´di als´ korl´tja ´ e u e a o o a m . Az M elemeit mint´knak (pattern) nevezz¨k ´s M-re, mint mintahalmaz vagy mintat´r a u e e hivatkozunk. Az m m eset´n azt mondjuk, hogy m az m r´szmint´ja, ha m e e a m, akkor val´di o r´szmint´r´l besz´l¨ nk. A -t tartalmaz´si rel´ci´nak is h´ e a o eu a a o ıvjuk. Az altal´noss´g megs´rt´se ´ a a e e n´lk¨ l feltehetj¨ k, hogy a minim´lis m´ret˝ minta m´rete 0. Ezt a mint´t ures mint´nak h´ e u u a e u e a ¨ a ıvjuk. ´ Ime az egyik legegyszer˝ bb p´lda mintak¨rnyezetre, amelyet v´s´rl´i szok´sok felt´r´sa u e o aa o a aa sor´n alkalmaztak el˝sz¨r. Legyen I v´ges halmaz. Gyakori elemhalmazok keres´s´n´l a (2 I , ⊆ a o o e ee e ⊆) lesz a mintak¨rnyezetet, ahol ⊆ a halmazok tartalmaz´si rel´ci´j´t jel¨li. A m´retf¨ ggv´ny o a a oa o e u e egy halmazhoz az elemsz´m´t rendeli. Az elemhalmazokon t´ l kereshet¨ nk gyakori sorozatoa a u u kat, epiz´dokat (v´ges halmazon ´rtelmezett r´szben rendez´seket), bool formul´kat, c´mk´zett o e e e e a ı e gy¨keres f´kat vagy altal´nos gr´fokat. Ezen mintak¨rnyezetek pontos deﬁn´ oj´t a k¨vetkez˝ o a ´ a a o ıci´ a o o fejezetekben tal´ljuk. a 5.3. deﬁn´ o. Legyen (H1 , 1 ) (H2 , 2 ) k´t r´szben rendezett halmaz. Az f :H1 →H2 f¨ggv´ny ıci´ e e u e rendez´s v´lt´ vagy m´s sz´val anti-monoton, amennyiben tetsz˝leges x, y ∈ H 1 , x 1 y elemekre e a o a o o f (y) 2 f (x). 5.4. deﬁn´ o. A gyakori minta kinyer´snek feladat´ban adott egy B bemeneti (vagy feldolgoıci´ e a zand´) adathalmaz, MK = (M, ) mintak¨rnyezet, egy suppB : M → N anti-monoton f¨ggv´ny o o u e ´s egy min supp ∈ N k¨sz¨bsz´m. Feladat, hogy megkeress¨k azon mint´kat, amelyekre a supp e u o a u a f¨ggv´ny min supp-n´l nagyobb vagy egyenl˝ ´rt´ket ad : u e a oe e GY = {gy : gy ∈ M, suppB (gy) ≥ min supp}. A suppB f¨ ggv´nyt t´mogatotts´gi f¨ggv´nynek (support function), min supp-ot t´mogatotts´gi u e a a u e a a k¨sz¨bnek, a GY elemeit pedig gyakori mint´knak h´ u o a ıvjuk. A nem gyakori mint´kat ritk´knak a a nevezz¨ k. Az ´rthet˝s´g kedv´´rt a B tagot gyakran elhagyjuk, tov´bb´ a supp(m)-re mint u e oe ee a a a minta t´mogatotts´ga hivatkozunk. A t´mogatotts´gi f¨ ggv´ny ´rt´ke adja meg, hogy egy a a a a u e e e minta mennyire gyakori a bemenetben. Az elemhalmazok p´ld´j´n´l maradva a bemenet lehet p´ld´ul elemhale aa a e a mazok sorozata. Ekkor egy H halmaz t´mogatotts´g´t ugy ´rtelmezhetj¨ k, a a a ´ e u mint a sorozat azon elemeinek sz´ma, amelyek tartalmazz´k H-t. P´ld´ul a a a e a {A, D}, {A, C}, {A, B, C, D}, {B}, {A, D}, {A, B, D}, {D} bemenet eset´n supp({A, D}) = 4. e Ha min supp-nak 4-et adunk meg, akkor GY = {{A}, {D}, {A, D}}. A t´mogatotts´g anti-monotonit´s´b´l k¨vetkezik az al´bbi egyszer˝ tulajdons´g. a a aa o o a u a 5.5. tulajdons´g. Gyakori minta minden r´szmint´ja gyakori. a e a

´ ´ 5. FEJEZET. GYAKORI MINTAK KINYERESE

85

A mint´kat elemhalmazok, sorozatok, gr´fok, stb. a a Amerikai kutat´s a sor´n a form´j´ban fogjuk keresni, azaz a mint´k mindig valamilyen ” allap´tott´k, hogy 1 ora aa a meg´ ı a ´ alaphalmazon deﬁni´lt strukt´ r´k lesznek. Ha az alaphal- t´v´z´s hat´s´ra 200 doll´rral a ua e e e a a a mazon deﬁni´lunk egy teljes rendez´st, akkor az alapj´n – t¨bbet k¨lt¨nk a rekl´mok mia e a o o u a k¨nnyebben vagy nehezebben – a mint´kon is tudunk teljes att.” Forr´s : Sl´ger r´di´, 2007. o a a a a o rendez´st adni. Ezt p´ld´ul elemhalmazok eset´ben a lexi- okt´ber 25., 17 ora 48 perc e e a e o ´ kograﬁkus rendez´s , gr´fok eset´ben a kanonikus c´ ez´s e a e ımk´ e seg´ eg´vel fogjuk megtenni. A mint´kon ´rtelmezett teljes ıts´ e a e rendez´s egyes algoritmusn´l (pl. : APRIORI) a hat´konys´g n¨vel´s´re haszn´lhat´, m´soknak e a e a o ee a o a pedig alapfelt´tele (pl. : Zaki). Sokszor fog felbukkanni a preﬁx fogalma is, amihez szint´n egy e e teljes rendez´sre lesz sz¨ ks´g. e u e 5.6. deﬁn´ o. Legyen a H halmazon ´rtelmezett r´szben rendez´s. A ıci´ e e e line´ris kiterjeszt´s´nek h´vjuk, ha minden x y p´rra x y teljes¨l. a ee ı a u teljes rendez´st a e

A line´ris kiterjeszt´seknek azon csoportja ´rdekes sz´munkra, amelyek m´rettart´ak. Ez azt a e e a e o jelenti, hogy |x| < |y| eset´n a x y felt´telnek is fenn kell allnia. Amikor teh´t a MK = (M, ) e e ´ a mintak¨rnyezet o tagj´nak egy m´rettart´ line´ris kiterjeszt´s´t akarjuk megadni, akkor az a e o a ee azonos m´ret˝ elemek k¨z¨tt deﬁni´lunk egy sorrendet. A tov´bbiakban a m´rettart´ jelz˝t e u o o a a e o o elhagyjuk, ´s minden line´ris kiterjeszt´s alatt m´rettart´ line´ris kiterjeszt´st ´rt¨ nk. e a e e o a e e u 5.7. deﬁn´ o. Legyen MK = (M, ) mintak¨rnyezet ´s ıci´ o e a egy line´ris kiterjeszt´se. Az a e m minta -elem˝ r´szmint´i k¨z¨l az u e a o u szerinti legels˝t h´vjuk az m minta -elem˝ preﬁx´nek. o ı u e P´ld´ul, ha I = {A, B, C, D, E}, ´s az azonos m´ret˝ mint´kon az abc rendez´s szerinti lexikoe a e e u a e graﬁkus rendez´st vessz¨ k a teljes rendez´snek, akkor p´ld´ul az {A, C, D, E} minta 2-elem˝ e u e e a u preﬁxe az {A, C} halmaz.

5.1.1. Hat´konys´gi k´rd´sek e a e e
A bemeneti adat ´s a mint´k halmaza altal´ban nagy. P´ld´ul bemeneti sorozatok eset´ben e a ´ a e a e 9 5 nem ritk´k a 10 nagys´grend˝ sorozatok, a mintat´r pedig altal´ban 10 nagys´grend˝ hala a u e ´ a a u mazok hatv´nyhalmaza. Ilyen m´retek mellett a na´ algoritmusok (p´ld´ul hat´rozzuk meg a e ıv e a a a mintahalmaz minden elem´nek t´mogatotts´g´t, majd v´logassuk ki a gyakoriakat) t´ l sok e a a a a u ideig futn´nak, vagy t´ l nagy lenne a mem´riaig´ny¨ k. Hat´kony, kiﬁnomult algoritmusokra a u o e u e van sz¨ ks´g, amelyek speci´lis adatstrukt´ r´kat haszn´lnak. u e a ua a Egy algoritmus hat´konys´g´t a fut´si id˝vel (ami ar´nyos az elemi l´p´sek sz´m´val) ´s e a a a o a e e a a e a felhaszn´lt mem´ri´val jellemezz¨ k. P´ld´ul megmondhatjuk, hogy adott m´ret˝ bemenet a o a u e a e u eset´n atlagosan, vagy legrosszabb esetben mennyi elemi l´p´st (¨sszehasonl´ as, ´rt´kad´s), e ´ e e o ıt´ e e a illetve mem´ri´t haszn´l. Sajnos a gyakori mint´t kinyer˝ algoritmusok mindegyike legrosszabb o a a a o esetben a teljes mintateret megvizsg´lja, ugyanis a t´mogatotts´gi k¨ sz¨b f¨ ggv´ny´ben a mina a a u o u e e tat´r minden eleme gyakori lehet. e A gyakori minta-kinyer´s korszak´nak els˝ 10-15 ´v´ben az algoritmusok hat´konys´g´t – e a o e e e a a elm´leti elemz´sek h´ an – minden esetben teszteredm´nyekkel igazolt´k. Szinte minden algoe e ıj´ e a ritmushoz lehet tal´lni olyan bemeneti adatot, amit az algoritmus nagyon hat´konyan k´pes a e e feldolgozni. Ennek eredm´nyek´nt p´ld´ul, csak a gyakori elemhalmazokat kinyer˝ algoritmusok e e e a o

´ ´ 5. FEJEZET. GYAKORI MINTAK KINYERESE

86

sz´ma meghaladja a 150-et, ´s a mai napig nem tudunk olyan algoritmusr´l, amelyik az osszes a e o ¨ t¨bbit legy˝zn´ fut´si id˝ vagy mem´riafogyaszt´s tekintet´ben. o o e a o o a e A j¨v˝ feladata ennek a k´osznak a tiszt´z´sa. Ehhez a legfontosabb l´p´s a bemeneti adat o o a a a e e karakterisztik´j´nak form´lis le´ asa lenne. Sejtj¨ k, hogy legjobb gyakori mintakinyer˝ algoritaa a ır´ u o mus nem l´tezik, de tal´n van es´ly¨ nk ´rtelmes meg´llap´ asokra, ha a bemenetre vonatkoz´an e a e u e a ıt´ o k¨ l¨nb¨z˝ felt´telez´sekkel ´l¨ nk (szok´sos felt´tel p´ld´ul az, hogy a bemenet olyan sorozat, uo o o e e eu a e e a melynek elemei kis m´ret˝ halmazok vagy az, hogy csak nagyon kev´s magas t´mogatotts´g´ e u e a a u minta van) ´s ezekhez pr´b´ljuk megtal´lni az ide´lis algoritmust. e o a a a

5.2. Tov´bbi feladatok a
A gyakori mintakinyer´s egyik nagy kritik´ja, hogy sokszor t´ l nagy a kinyert mint´k sz´ma. e a u a a Vannak olyan feladatok, ahol nem az osszes gyakori mint´t k´ anjuk kinyerni, hanem csak egy ¨ a ıv´ r´sz¨ ket. Erre p´lda az un. top-k mintakinyer´s, melynek sor´n a k legnagyobb t´mogatotts´g´ e u e ´ e a a a u mint´t keress¨ k. Emellett az al´bbi feladatok l´teznek. a u a e

5.2.1. Nem b˝v´ o ıthet˝ ´s z´rt mint´k oe a a
5.8. deﬁn´ o. Az m gyakori minta B-re n´zve nem b˝v´ ıci´ e o ıthet˝ (maximal), ha nem l´tezik olyan o e m gyakori minta B-ben, amelynek m val´di r´szmint´ja. o e a 5.9. deﬁn´ o. Az m minta B-re n´zve z´rt, amennyiben nem l´tezik olyan m minta Bıci´ e a e ben, amelynek m val´di r´szmint´ja, ´s m t´mogatotts´ga megegyezik m t´mogatotts´g´val o e a e a a a a a (supp(m ) = supp(m)). Az ember azonnal l´thatja, hogy mi ´rtelme van annak, hogy csak a nem b˝v´ a e o ıthet˝ mint´kat o a keress¨ k meg : egy´rtelm˝ en meghat´rozz´k a gyakori mint´kat ´s sz´muk kevesebb. Sajnos u e u a a a e a a nem b˝v´ o ıthet˝ mint´k alapj´n csak azt tudjuk megmondani, hogy egy minta gyakori-e, a o a a t´mogatotts´got nem tudjuk megadni (legfeljebb egy als´ korl´tot). a a o a Nem ilyen trivi´lis, hogy mi ´rtelme van a gyakori z´rt mint´knak. Azt l´tjuk, hogy a z´rt a e a a a a gyakori mint´k a gyakori mint´k r´szhalmazai, ´s a z´rt mint´k r´szhalmaza a nem b˝v´ a a e e a a e o ıthet˝ o mint´k, hiszen a 5.10. tulajdons´g. Minden nem b˝v´thet˝ minta z´rt. a o ı o a M´gis mi c´lt szolg´lnak a gyakori z´rt mint´k ? Ennek tiszt´z´s´hoz k´t uj fogalmat kell e e a a a a aa e ´ bevezetn¨ nk. u 5.11. deﬁn´ o. Az m minta az m minta lez´rtja, ha m ıci´ a m : m m , melyre supp(m ) = supp(m ). m , supp(m) = supp(m ) ´s nincs e

Nyilv´nval´, ha m z´rt, akkor lez´rtja megegyezik onmag´val. a o a a ¨ a 5.12. deﬁn´ o. Az MK = (M, ) mintak¨rnyezet a z´rts´gra n´zve egy´rtelm˝ , amennyiben ıci´ o a a e e u minden m ∈ M minta lez´rtja egy´rtelm˝. a e u

´ ´ 5. FEJEZET. GYAKORI MINTAK KINYERESE

87

L´tni fogjuk, hogy p´ld´ul az elemhalmazokat tartalmaz´ mintak¨rnyezet z´rts´gra n´zve a e a o o a a e egy´rtelm˝ , m´ a sorozatokat tartalmaz´ nem az. A z´rts´gra n´zve egy´rtelm˝ mintak¨rnyee u ıg o a a e e u o zetekben a z´rt mint´k jelent˝s´ge abban all, hogy ezek ismeret´ben tetsz˝leges mint´r´l el a a oe ´ e o ao tudjuk d¨nteni, hogy gyakori-e, ´s ha igen, meg tudjuk pontosan mondani t´mogatotts´g´t. o e a a a Sz¨ ks´gtelen t´rolni az osszes gyakori mint´t, hiszen a z´rt mint´kb´l ezek egy´rtelm˝ en u e a ¨ a a a o e u meghat´rozhat´k. Az m minta gyakori, ha r´sze valamely gyakori z´rt mint´nak, ´s m a o e a a e t´mogatotts´ga megegyezik a legkisebb olyan z´rt minta t´mogatotts´g´val, amelynek r´sze a a a a a a e m (ez ugyanis az m lez´rtja). a

5.2.2. K´nyszerek kezel´se e e
Nem mindig ´rdekes az osszes gyakori minta. El˝fordulhat, hogy p´ld´ul a nagy m´ret˝ , e ¨ o e a e u vagy bizonyos mint´kat tartalmaz´, vagy nem tartalmaz´, stb. gyakori mint´k nem fontosak. a o o a ´ Altal´nos´ a ıthatjuk a feladatot ugy, hogy a felhaszn´l´ k´nyszereket, predik´tumokat ad meg, ´s ´ ao e a e azokat a mint´kat kell meghat´roznunk, amelyek kiel´g´ az osszes k´nyszert. a a e ıtik ¨ e A feladat egyszer˝ megold´sa lenne, hogy – mint ut´feldolgoz´s – a gyakori mint´kat u a o a a egyes´vel megvizsg´lva t¨r¨ln´nk azokat, amelyek nem el´g´ e a oo e e ıtenek minden k´nyszert. Ez a mege old´s nem t´ l hat´kony. Jobb lenne, ha a k´nyszereket min´l m´lyebbre” tudn´nk helyezni a u e e e e a ” a gyakori mint´kat kinyer˝ algoritmusokban. Ez bizonyos k´nyszerekn´l megtehet˝, m´sokn´l a o e e o a a nem. N´zz¨ k, milyen oszt´lyokba sorolhatjuk a k´nyszereket. e u a e Tulajdonk´ppen az is egy k´nyszer, hogy gyakori mint´kat keres¨ nk. A gyakoris´gra voe e a u a natkoz´ predik´tum igaz, ha a minta gyakori, ellenkez˝ esetben hamis. Ez a predik´tum antio a o a monoton : 5.13. deﬁn´ o. Legyen (H, ) egy r´szben rendezett halmaz. A p : H → {igaz, hamis} preıci´ e dik´tum anti-monoton, amennyiben tetsz˝leges x ∈ H elem eset´n, ha p(x) = igaz, akkor p(y) a o e is igazat ad minden y x elemre. Ha a fenti deﬁn´ oba y x helyett x y ´ ıci´ ırunk, akkor a monoton predik´tumok deﬁn´ oj´t kapa ıci´ a juk. Egy predik´tum akkor ´s csak akkor monoton ´s anti-monoton egyben, ha a mintat´r mina e e e den elem´hez igaz (vagy hamis) ´rt´ket rendel. Az ilyen predik´tumot trivi´lis predik´tumnak e e e a a a h´ ıvjuk. 5.14. deﬁn´ o. Legyen (H, ) egy r´szben rendezett halmaz. A p : H → {igaz, hamis} preıci´ e dik´tum preﬁx anti-monoton, amennyiben megadhat´ a -nek egy olyan a o line´ris kiterjeszt´se a e amire, ha p(m) = igaz, akkor p az m minden preﬁx´n is igaz. e 5.15. deﬁn´ o. Legyen (H, ) egy r´szben rendezett halmaz. A p : H → {igaz, hamis} preıci´ e dik´tum preﬁx monoton, amennyiben megadhat´ a -nek egy olyan a o line´ris kiterjeszt´se a e amely, ha p(m) = igaz, ´s az m mint´nak m preﬁxe. akkor p(m ) is igaz. e a Minden anti-monoton (monoton) predik´tum egyben preﬁx anti-monoton (preﬁx monoton) is. a 5.16. deﬁn´ o. A p predik´tum er˝sen atalak´ ıci´ a o ´ ıthat´, amennyiben egyszerre preﬁx antio monoton ´s preﬁx monoton. e Az 5.1 abr´n l´that´ a k´nyszerek kapcsolata [133]. ´ a a o e Sejthetj¨ k, hogy az anti-monoton predik´tumok lesznek a legegyszer˝ bben kezelhet˝k. Ilyen u a u o anti-monoton predik´tumok p´ld´ul a k¨vetkez˝k : a e a o o

´ ´ 5. FEJEZET. GYAKORI MINTAK KINYERESE
triviális

88

anti−monoton prefix anti−monoton

monoton prefix monoton

erõsen átalakítható

nem átalakítható
5.1. abra. A k´nyszerek (predik´tumok) oszt´lyoz´sa ´ e a a a – A minta m´rete ne legyen nagyobb egy adott k¨ sz¨bn´l. e u o e – A mint´nak legyen r´sze egy r¨gz´ a e o ıtett minta. V´s´rl´i szok´sok vizsg´lat´n´l – amikor a v´s´rl´i kosarakban gyakran el˝fordul´ aa o a a a a aa o o o term´khalmazokat keress¨ k – monoton k´nyszer p´ld´ul az, hogy a term´khalmazban l´v˝ e u e e a e e o elemek proﬁtj´nak ossz´rt´ke (vagy minimuma, maximuma) legyen nagyobb egy adott konsa ¨ e e tansn´l. a Preﬁx monoton predik´tum p´ld´ul, hogy a term´khalmazban tal´lhat´ term´kek ar´nak a e a e a o e ´a atlaga nagyobb-e egy r¨gz´ ´ o ıtett konstansn´l. Rendezz¨ k a term´keket aruk szerint n¨vekv˝ sora u e ´ o o rendbe. Ezen rendez´s szerinti lexikograﬁkus rendez´s legyen a teljes rendez´s. Nyilv´nval´, e e e a o hogy ekkor a preﬁxben tal´lhat´ term´kek arai nagyobbak, mint a preﬁxben nem szerepl˝ a o e ´ o term´kei arai. Ez a k´nyszer preﬁx monoton, hiszen a preﬁx a legolcs´bb term´keket nem tare ´ e o e ´ talmazza, ´ atlaga nem lehet kisebb. Erdemes atgondolni, hogy ez a predik´tum r´ad´sul ıgy ´ ´ a a a er˝sen atalak´ o ´ ıthat´. o

5.2.3. T¨bbsz¨r¨s t´mogatotts´gi k¨ sz¨b o o o a a u o
Vannak olyan alkalmaz´sok, amelyekben a gyakoris´g egyetlen, univerz´lis t´mogatotts´gi a a a a a k¨ sz¨b alapj´n t¨rt´n˝ deﬁni´l´sa nem megfelel˝. Ha p´ld´ul v´s´rl´si szok´sok elemz´s´re u o a o e o aa o e a aa a a ee gondolunk, akkor a nagy ´rt´k˝ term´kekkel kapcsolatos tud´s legal´bb annyira fontos, mint e e u e a a a nagy mennyis´gben ´rt´kes´ e e e ıtett, de kis haszonnal j´r´ term´kekkel kapcsolatos inform´ci´. ao e a o K´zenfekv˝ megold´s, hogy annyira lecs¨kkentj¨ k a t´mogatotts´gi k¨ sz¨b¨t, hogy ezek a ritka e o a o u a a u o o elemek is gyakoriak legyenek, ami azzal a vesz´llyel j´r, hogy (ezen fontos elemek mellett) a e a mintat´r nagy r´sze gyakoriv´ v´lik. T¨bbsz¨r¨s t´mogatotts´gi k¨sz¨bn´l a mintat´r minden e e a a o o o a a u o e e elem´hez egyedileg megadhatunk egy t´mogatotts´gi k¨ sz¨b¨t, azaz l´tezik egy min supp : e a a u o o e : M → N f¨ ggv´ny, ´s az m akkor gyakori, ha supp(m) ≥ min supp(m). u e e T¨bbsz¨r¨s t´mogatotts´gi k¨ sz¨b eset´n nem igaz az 5.5 tulajdons´g. Hi´ba nagyobb o oo a a u o e a a ugyanis egy r´szminta t´mogatotts´ga, a r´szmint´hoz tartoz´ t´mogatotts´gi k¨ sz¨b m´g nae a a e a o a a u o e gyobb lehet, ´s ´ a r´szminta nem felt´tlen¨ l gyakori. e ıgy e e u

´ ´ 5. FEJEZET. GYAKORI MINTAK KINYERESE

89

5.2.4. Dinamikus gyakori mintakinyer´s e
Egyre n´pszer˝ bb adatb´ny´szati feladat a gyakori mint´k un. dinamikus kinyer´se. Adott e u a a a ´ e egy kiindul´si B bemenet a hozz´ tartoz´ gyakori mint´kkal ´s t´mogatotts´gokkal ´s egy a a o a e a a e ´ m´sik B bemenet. Altal´ban a B -t valami apr´ m´dos´ assal kapjuk B-b˝l. Feladat, hogy a a o o ıt´ o min´l hat´konyabban tal´ljuk meg a B -ben gyakori mint´kat, azaz min´l jobban haszn´ljuk fel e e a a e a a megl´v˝ tud´st (a B-ben gyakori mint´kat). Gondolhatunk itt egy on-line aruh´zra, ahol keze o a a ´ a detben rendelkez´s¨ nkre allnak az elm´ lt havi v´s´rl´sokhoz tartoz´ gyakori term´khalmazok, eu ´ u aa a o e mik¨zben folyamatosan ´rkeznek az uj v´s´rl´sok adatai. Hasznos, ha az ujonnan felbukkan´ o e ´ aa a ´ o gyakori mint´kat min´l hamarabb felfedezz¨ k, an´lk¨ l, hogy a b˝v´ a e u e u o ıtett adatb´zisban oﬀ-line a m´don lefuttatn´nk egy gyakori mint´kat kinyer˝ algoritmust. o a a o

5.3. Az algoritmusok jellemz˝i o
Helyes vagy helyesen m˝k¨d˝ jelz˝vel illetj¨ k azokat az algoritmusokat, amelyek nem u o o o u hib´znak, teh´t csak gyakori mint´kat nyernek ki ´s azok t´mogatotts´g´t j´l hat´rozz´k a a a e a a a o a a meg. Teljes egy algoritmus, ha be lehet bizony´ ıtani, hogy az osszes gyakori mint´t ´s ¨ a e t´mogatotts´gaikat meghat´rozza. Helyesen m˝ k¨d˝ ´s teljes algoritmusokr´l fogunk besz´lni, a a a u o oe o e de sz´ lesz olyan algoritmusokr´l is, amelyekr˝l csak azt tudjuk, hogy (bizonyos felt´telez´sekkel o o o e e ´lve) kicsi annak a val´sz´ us´ge, hogy nem tal´l meg minden gyakori mint´t. e o ın˝ e a a Sz´less´gi bej´r´st val´s´ e e a a o ıtanak meg azok az algoritmusok1 , amelyek a legkisebb mint´kb´l kiindulva egyre naa o Fogszuvasod´s ellen z¨ld tea a o ” gyobb m´ret˝ gyakori mint´kat nyernek ki. Egy ilyen al- T´vol-keleti felm´r´sek szerint e u a a e e goritmusra igaz, hogy az -elem˝ gyakori mint´kat hama- azoknak az iskol´sgyerekeknek, u a a rabb tal´lja meg, mint az -n´l nagyobb elem˝ mint´kat. akik napi egy cs´sze cukor n´lk¨li a e u a e e u M´lys´gi bej´r´st megval´s´ o algoritmusokra ez nem igaz ; z¨ld te´t isznak, feleannyi ode e a a o ıt´ o a ezek min´l gyorsabban pr´b´lnak eljutni a nem b˝v´ e o a o ıthet˝ vas foguk van, mint az atlagnak.” o ´ mint´hoz. Ha ez siker¨ l, akkor egy ujabb, nem b˝v´ a u ´ o ıthet˝ Forr´s : http://www.terebess. o a mint´t vesznek c´lba. a e hu/szorolapok/zoldtea.html A k¨vetkez˝kben ismertetj¨ k a h´rom legfontosabb o o u a gyakori mint´kat kinyer˝ m´dszert az APRIORI-t, Zaki a o o m´dszer´t ´s a mintan¨vel˝ m´dszert. Ennek a h´rom algoritmusnak a szerepe abban all, hogy o e e o o o a ´ szinte az osszes t¨bbi algoritmus ezeknek a tov´bbfejleszt´se, vagy ezen algoritmusok kever´ke. ¨ o a e e Jelent˝s´g¨ ket tov´bb n¨veli az a t´ny, hogy ezek a m´dszerek megtal´lhat´ak ak´rmilyen oe u a o e o a o a t´ u mint´kat keres¨ nk, legyenek azok elemhalmazok, sorozatok vagy gr´fok. Nem pontos ıpus´ a u a algoritmusokat adunk, hanem csak egy altal´nos m´dszerle´ ast. Egyes l´p´seket csak a minta ´ a o ır´ e e t´ anak ismeret´ben lehet pontosan megadni. ıpus´ e

5.4. Az APRIORI m´dszer o
Az eredeti APRIORI algoritmust gyakori elemhalmazok kinyer´s´re haszn´lt´k, ´s mint az ee a a e AIS algoritmus [5] tov´bbfejlesztett v´ltozata adt´k k¨zre. Rakesh Agrawal ´s Ramakrishnan a a a o e Srikant [7] publik´lt´k 1993-ban, de t˝l¨ k f¨ ggetlen¨ l, szinte ugyanezt az algoritmust javasolta a a ou u u
1

A sz´less´gi bej´r´st megval´s´ o algoritmusokat szintenk´nt halad´ (levelwise) algoritmusoknak is h´ ak. e e aa o ıt´ e o ıvj´

´ ´ 5. FEJEZET. GYAKORI MINTAK KINYERESE

90

Heikki Mannila, Hannu Toivonen ´s A. Inkeri Verkamo [114]-ben. Az 5 szerz˝ v´g¨ l egyes´ e o e u ıtette a k´t ´ ast [6]. Kis m´dos´ assal az algoritmust gyakori sorozatok kinyer´s´re is (APRIORIALL, e ır´ o ıt´ ee GSP algoritmusok), s˝t, alapelv´t b´rmely t´ u gyakori minta (epiz´d, fa stb.) keres´s´n´l is o e a ıpus´ o ee e alkalmazhatjuk. Az algoritmus rendk´ ul egyszer˝ , m´gis gyors ´s kicsi a mem´riaig´nye. Tal´n emiatt a mai ıv¨ u e e o e a napig ez az algoritmus a legelterjedtebb ´s legismertebb gyakori mintakinyer˝ algoritmus. e o Az APRIORI sz´less´gi bej´r´st val´s´ meg. Ez azt jelenti, hogy a legkisebb mint´b´l kiine e aa o ıt a o dulva szintenk´nt halad el˝re a nagyobb m´ret˝ gyakori mint´k meghat´roz´s´hoz. A k¨vetkez˝ e o e u a a aa o o szinten (iter´ci´ban) az eggyel nagyobb m´ret˝ mint´kkal foglalkozik. a o e u a Az algoritmusban k¨zponti szerepet t¨ltenek be az un. jel¨ltek. Jel¨ltnek h´ o o ´ o o ıvjuk egy adott iter´ci´ban azt a mint´t, amelynek t´mogatotts´g´t meghat´rozzuk, azaz, aminek ﬁgyelm¨ nket a o a a a a a u szentelj¨ k. Hamis jel¨lteknek h´ u o ıvjuk azokat a jel¨lteket, amelyekr˝l ki fog der¨ lni, hogy ritka o o u mint´k, elhanyagolt mint´k pedig azok a gyakori mint´k, amelyeket nem v´lasztunk jel¨ltnek a a a a o (nem foglalkozunk vel¨ k ). Nyilv´nval´, hogy csak azokr´l a mint´kr´l tudjuk eld¨nteni, hogy u a o o a o o gyakoriak-e, amelyeknek meghat´rozzuk a t´mogatotts´g´t, teh´t amelyek jel¨ltek valamikor. a a a a a o Ez´rt elv´rjuk az algoritmust´l, hogy minden gyakori mint´t felvegyen jel¨ltnek. A teljess´g e a o a o e felt´tele, hogy ne legyen elhanyagolt minta, a hat´konys´g pedig ann´l jobb, min´l kevesebb a e e a a e hamis jel¨lt. o A jel¨ltek deﬁni´l´s´n´l a 5.5 tulajdons´got haszn´ljuk fel, ami ´ sz´lt : Gyakori minta o aa a a a a ıgy o ” minden r´szmint´ja gyakori.”. Az all´ ast indirekten n´zve elmondhatjuk, hogy egy minta biztoe a ´ ıt´ e san nem gyakori, ha van ritka r´szmint´ja ! Ennek alapj´n ne legyen jel¨lt az a minta, amelynek e a a o van ritka r´szmint´ja. Az APRIORI algoritmus ez´rt ´p´ e a e e ıtkezik lentr˝l. Egy adott iter´ci´ban o a o pontosan tudjuk, hogy a r´szmint´k gyakoriak vagy sem ! Az algoritmus onnan kapta a nev´t, e a e hogy az -elem˝ jel¨lteket a bemeneti adat -edik atolvas´s´nak megkezd´se el˝tt (a priori) u o ´ aa e o all´ el˝. ´ ıtja o Az algoritmus pszeudok´dja a k¨vetkez˝ abr´n l´that´. Kezdeti ´rt´kek be´ll´ asa ut´n o o o ´ a a o e e a ıt´ a bel´p¨ nk egy ciklusba. A ciklus akkor ´r v´get, ha az -elem˝ jel¨ltek halmaza ures. A cike u e e u o ¨ luson bel¨ l el˝sz¨r a t´mogatotts´g meghat´roz´s elj´r´st h´ u o o a a a a aa ıvjuk meg, amely a jel¨ltek o t´mogatotts´g´t hat´rozza meg. Ha ismerj¨ k a jel¨ltek t´mogatotts´g´t, akkor ki tudjuk a a a a u o a a a o´ ı a u e u a o v´lasztani bel˝l¨ k a gyakoriakat. A jel¨lt el}all´t´s f¨ ggv´ny az -elem˝ gyakori mint´kb´l a ou o + 1-elem˝ jel¨lteket all´ el˝. u o ´ ıt o Az APRIORI elvet adapt´l´ algoritmusok mind a fenti l´p´seket k¨vetik. Term´szetesen ao e e o e a k¨ l¨nb¨z˝ t´ u mint´kn´l k¨ l¨nb¨z˝ m´don kell elv´gezni a t´mogatotts´g-meghat´roz´s, u o o o ıpus´ a a uo o o o e a a a a gyakoriak kiv´logat´sa, jel¨ltek el˝all´ asa l´p´seket. a a o o´ ıt´ e e Az algoritmus hat´konys´g´nak egyik alapfelt´tele, hogy a jel¨ltek elf´rjenek a mem´ri´ban. e a a e o e o a Ellenkez˝ esetben ugyanis rengeteg id˝ menne el az olyan I/O m˝ veletekkel, amelynek sor´n o o u a a jel¨lteket a h´tt´r ´s a mem´ria k¨z¨tt ide-oda m´solgatjuk. A fenti pszeudok´d az eredeti o a e e o o o a o APRIORI egyszer˝ s´ u ıtett v´ltozat´t ´ a a ırja le. Val´j´ban ugyanis addig all´ oa ´ ıtjuk el˝ az -elem˝ o u jel¨lteket, am´ azok elf´rnek a mem´ri´ban. Ha elfogy a mem´ria, akkor n¨vel´se n´lk¨ l o ıg e o a o o e e u folytatjuk az algoritmust, majd a k¨vetkez˝ iter´ci´ban ott folytatjuk a jel¨ltek el˝all´ as´t, o o a o o o´ ıt´ a ahol abbahagytuk.

5.4.1. Jel¨ltek el˝´ll´ asa o oa ıt´
Az -elem˝ jel¨ltek el˝all´ as´nak egyszer˝ m´dja az, hogy vessz¨ k az osszes -elem˝ u o o´ ıt´ a u o u ¨ u mint´t, ´s azokat v´lasztjuk jel¨ltnek, amelyekre teljes¨ l, hogy minden r´szmint´juk gyakoa e a o u e a

´ ´ 5. FEJEZET. GYAKORI MINTAK KINYERESE Algorithm 7 Az APRIORI m´dszer o Require: B : bementei adat min supp : t´mogatotts´gi k¨ sz¨b a a u o ⇐0 J ⇐ { az ures minta } {J : Az -elem˝ jel¨ltek} ¨ u o while |J | = 0 do t´mogatotts´g meghat´roz´s(B, J ) a a a a for all j ∈ J do if supp(j) ≥ min supp then GY ⇐ GY ∪ {j} end if end for J +1 ⇐ jel¨lt el}all´t´s(GY ) o o´ ı a GY ⇐ GY ∪ GY ⇐ +1 end while return GY : gyakori mint´k a

91

ri. Sz¨ ks´gtelen az osszes r´szmint´t ellen˝rizni, ugyanis a t´mogatotts´g anti-monotonit´s´b´l u e ¨ e a o a a aa o k¨vetkezik az, hogy ha az osszes ( −1)-elem˝ r´szminta gyakori, akkor az osszes val´di r´szminta o ¨ u e ¨ o e is gyakori. Ez a m´dszer azonban nem t´ l hat´kony, vagy ugy is megfogalmazhatn´nk, hogy t´ l sok o u e ´ a u felesleges munk´t v´gez, t´ l sok olyan mint´t vizsg´l meg, amelyek biztosan nem gyakoriak. a e u a a H´ ıvjuk potenci´lis jel¨lteknek azon mint´kat, amelyeket el˝all´ a o a o´ ıtunk, majd ellen˝rizz¨ k, hogy o u r´szmint´ik gyakoriak-e. Ha egy potenci´lis minta atesik a teszten, akkor jel¨lt´ v´lik. e a a ´ o e a Tudjuk, hogy ha egy minta jel¨lt lesz, akkor minden ( − 1)-elem˝ r´szmint´ja gyakori, o u e a teh´t c´lszer˝ az ( − 1)-elem˝ gyakori mint´kb´l kiindulni. Egy egyszer˝ megold´s lenne, a e u u a o u a ha sorra venn´nk az ( − 1)-elem˝ gyakori mint´k minim´lis val´di fels˝ korl´tait, mint poe u a a o o a tenci´lis jel¨lteket. M´g jobb megold´s, ha a ( − 1)-elem˝ gyakori mintap´roknak vessz¨ k a a o e a u a u minim´lis val´di fels˝ korl´tait. Ekkor ugyanis csak olyan potenci´lis jel¨ltet all´ a o o a a o ´ ıtunk el˝, amelyo nek van k´t ( − 1)-elem˝ gyakori r´szmint´ja. A minim´lis val´di fels˝ korl´tot egy illeszt´si e u e a a o o a e m˝velettel fogjuk el˝all´ u o´ ıtani. A k´t gyakori mint´t a potenci´lis jel¨lt gener´torainak h´ e a a o a ıvjuk. Az illeszt´si m˝ veletet a ⊗-el fogunk jel¨lni. Akkor illeszt¨ nk k´t mint´t, ha van ( − 2)-elem˝ e u o u e a u k¨z¨s r´szmint´juk. Ezt a r´szmint´t magnak (core) fogjuk h´ o o e a e a ıvni. Ha az el˝all´ as m´dja olyan, hogy nem all´ o´ ıt´ o ´ ıthatjuk el˝ ugyanazt a potenci´lis jel¨ltet k´t o a o e k¨ l¨nb¨z˝ m´don, akkor ezt jel¨lt-el˝all´ ast ism´tl´s n´lk¨linek nevezz¨ k. N´zz¨ nk egy p´ld´t. uo o o o o o´ ıt´ e e e u u e u e a Legyenek a mintat´r elemei elemhalmazok. Akkor all´ e ´ ıtsuk el˝ k´t ( −1)-elem˝ gyakori elemhalo e u maznak a minim´lis val´di korl´tj´t, ha metszet¨ k ( − 2)-elem˝ . A minim´lis val´di korl´tok a o a a u u a o a halmaza csak egy elemet fog tartalmazni, a k´t halmaz uni´j´t. Ez a jel¨lt-el˝all´ as nem ism´tl´s e oa o o´ ıt´ e e n´lk¨ li, ugyanis p´ld´ul az ({A, B}, {A, C}) p´rnak ugyanaz a legkisebb fels˝ korl´tja, mint az e u e a a o a ({A, B}, {B, C}) p´rnak. a Az ism´tl´s n´lk¨ li jel¨lt-el˝all´ ast mindig a minta elemein ´rtelmezett teljes rendez´s fogja e e e u o o´ ıt´ e e garant´lni, ami a ⊆ rendez´s egy line´ris kiterjeszt´se lesz. A teljes rendez´snek megfelel˝en a e a e e o v´gigmegy¨ nk az ( −1)-elem˝ gyakori mint´kon ´s megn´zz¨ k, hogy mely sorban ut´na k¨vete u u a e e u a o

´ ´ 5. FEJEZET. GYAKORI MINTAK KINYERESE

92

kez˝ ( − 1)-elem˝ gyakori mint´val illeszthet˝, illetve az illeszt´sk´nt kapott potenci´lis jel¨lt o u a o e e a o minden ( − 1)-elem˝ r´szmint´ja gyakori-e. Sok esetben a ism´tl´s n´lk¨ lis´gnek el´gs´ges u e a e e e u e e e felt´tele az lesz, hogy a k´t gyakori minta ( − 2)-elem˝ preﬁxeik megegyezzenek. A minta e e u t´ anak ismeret´ben a teljess´get (minden minim´lis val´di fels˝ korl´tbeli elemet el˝all´ ıpus´ e e a o o a o´ ıtunk) ´s az ism´tl´s n´lk¨ lis´get k¨nny˝ lesz bizony´ e e e e u e o u ıtani. Algorithm 8 Jel¨ltek el}all´t´sa o o´ ı a Require: GY −1 : ( − 1)-elem˝ gyakori mint´k u a

for all gy ∈ GY −1 do for all gy ∈ GY −1 , gy gy do if gy ´s gy illeszthet˝ then e o ˆ ⇐ minim´lis val´di fels} korl´t(gy, gy ) {J : potenci´lis jel¨ltek halmaza} ˆ J a o o a a o ˆ ˆ ∈ J do for all j if minden r´szhalmaz gyakori(ˆ GY −1 ) then e j, ˆ J ⇐j end if end for end if end for end for return J : -elem˝ jel¨ltek u o

5.4.2. Z´rt mint´k kinyer´se, az APRIORI-CLOSE algoritmus a a e
A z´rt mint´k jelent˝s´g´t az 5.2.1 r´szben m´r t´rgyaltuk. Itt most k´t feladat megold´s´val a a oe e e a a e aa foglalkozunk. Megn´zz¨ k, hogy az osszes gyakori mint´b´l hogyan tudjuk el˝all´ e u ¨ a o o´ ıtani a z´rtakat, a illetve bemutatjuk az APRIORI-CLOSE [130–132] algoritmust, amely m´r eleve csak a z´rt a a mint´kat hat´rozza meg. Mindk´t m´dszerhez az al´bbi ´szrev´telt haszn´ljuk fel : a a e o a e e a 5.17. ´szrev´tel. Ha az m minta nem z´rt, akkor van olyan m-et tartalmaz´ eggyel nagyobb e e a o m´ret˝ minta, amelynek t´mogatotts´ga megegyezik m t´mogatotts´g´val. e u a a a a a Tegy¨ k fel, hogy a legnagyobb m´ret˝ gyakori minta m´rete k. A GY k elemei z´rtak. Egy u e u e a egyszer˝ algoritmus menete a k¨vetkez˝ : u o o N´zz¨ k sorban GYk−1 , GYk−2 , . . . , GY0 elemeit. Ha m ∈ GY -hez tal´lunk olyan m ∈ GY +1 e u a elemet, amelynek t´mogatotts´ga megegyezik m t´mogatotts´g´val, akkor m nem z´rt. Ha a a a a a a nincs ilyen tulajdons´g´ m , akkor m z´rt. a u a Az APRIORI-CLOSE menete teljes m´rt´kben megegyezik az APRIORI algoritmus mee e net´vel. Az egyetlen k¨ l¨nbs´g, hogy az -elem˝ gyakori mint´k meghat´roz´sa ut´n t¨rli e uo e u a a a a o az ( − 1)-elem˝ nem z´rtakat. Miut´n eld¨nt¨tte, hogy az -elem˝ m minta gyakori, megu a a o o u vizsg´lja az osszes ( −1)-elem˝ r´szmint´j´t m-nek. Amennyiben van olyan r´szhalmaz, aminek a ¨ u e aa e t´mogatotts´ga egyenl˝ m t´mogatotts´g´val, akkor ez a r´szminta nem z´rt, ellenkez˝ esetben a a o a a a e a o z´rt. a

´ ´ 5. FEJEZET. GYAKORI MINTAK KINYERESE

93

5.5. Sorozat t´ ıpus´ bemenet u
A leg´ltal´nosabb eset le´ as´n´l nem tett¨ nk semmi megk¨t´st a bemenet t´ ara ´s a a a ır´ a a u oe ıpus´ e t´mogatotts´gi f¨ ggv´nyre vonatkoz´an. Az esetek t¨bbs´ge azonban egy speci´lis csal´dba a a u e o o e a a tartozik. Ennek a probl´macsal´dnak a jellemz˝je, hogy a bemenet egy v´ges sorozat, ´s a e a o e e t´mogatotts´got azon elemek sz´ma adja, amelyek valamilyen m´don illeszkednek a mint´ra 2 . a a a o a Az illeszked´st egy illeszked´si predik´tummal adhjuk meg, melynek ´rtelmez´si tartom´nya a e e a e e a mintat´r. e bemenet : S = s1 , s2 , . . . , sn A t´mogatotts´g deﬁn´ oja megk¨veteli, hogy ha egy minta illeszkedik egy sorozatelemre, akkor a a ıci´ o minden r´szmint´ja is illeszkedjen. A legt¨bb esetben a sorozat elemei megegyeznek a mintat´r e a o e elemeivel ´s az m minta akkor illeszkedik egy sorozatelemre, ha annak m a r´szmint´ja. e e a A szakirodalomban igen elterjedt a sorozatok helyett a halmazokkal le´ bemenet, ahol ırt minden egyes elem egyedi azonos´ oval van ell´tva. A jegyzetben a sorozatos le´ ast fogjuk ıt´ a ır´ haszn´lni, akinek ez szokatlan, az tekintse azonos´ oknak a sorozat elemeinek sorsz´m´t. a ıt´ a a Az m minta gyakoris´g´t (jel¨l´sben : f reqS (m), ami a frequency sz´ra utal) az m a a oe o supp t´mogatotts´ga ´s az S hossz´nak h´nyados´val deﬁni´ljuk. A gyakoris´gi k¨ sz¨b¨t ( min|S| ) a a e a a a a a u o o o u e a a u o k¨vetkezetesen min f req-el jel¨lj¨ k. Az ´rtelmesen megv´lasztott gyakoris´gi k¨ sz¨b mindig o 0 ´s 1 k¨z¨tt van. Az esetek t¨bbs´g´ben t´mogatotts´gi k¨ sz¨b helyett gyakoris´gi k¨ sz¨b¨t e o o o e e a a u o a u o o adnak meg. Sorozat t´ u bemenet eset´n mer¨ l fel azon elv´r´s az algoritmusokkal szemben, hogy ne ıpus´ e u aa legyen ´rz´keny a bemenet homogenit´s´ra. Intuit´ akkor homog´n egy bemenet, ha nincsee e a a ıve e nek olyan r´szei, amelyben valamely minta gyakoris´ga nagyon elt´r a teljes bemenet alapj´n e a e a sz´m´ a ıtott gyakoris´g´t´l. Sok alkalmaz´sban ez a felt´tel nem all fenn, ´ azokat az algoa ao a e ´ ıgy ritmusokat kedvelj¨ k, amelyek hat´konys´ga f¨ ggetlen a bemenet homogenit´s´t´l. K¨nny˝ u e a u aao o u atgondolni, hogy az APRIORI algoritmus rendelkezik ezzel a tulajdons´ggal. ´ a

5.5.1. APRIORI
Amennyiben a t´mogatotts´got illeszked´si predik´tum alapj´n deﬁni´ljuk, akkor az APRIa a e a a a ORI algoritmus a bemeneti elemeken egyes´vel v´gigmegy ´s n¨veli azon jel¨ltek sz´ml´l´j´t, e e e o o a aoa amelyek illeszkednek az ´ppen aktu´lis bemeneti elemre. Azonos bemeneti elemekn´l ez a e a e m˝ velet ugyanazt fogja csin´lni ez´rt c´lszer˝ az azonos bemeneti elemeket osszegy˝ jteni ´s u a e e u ¨ u e csak egyszer megh´ ıvni az elj´r´st. A bemenet azonban t´ l nagy lehet, ez´rt ezt gyors´ asi l´p´st aa u e ıt´ e e csak akkor szok´s elv´gezni, amikor m´r rendelkez´s¨ nkre allnak az egyelem˝ gyakori mint´k. a e a eu ´ u a Ezek alapj´n tov´bbi sz˝ r´seket lehet v´gezni. P´ld´ul elemhalmaz/elemsorozat t´ u bemea a ue e e a ıpus´ neti elemekn´l t¨r¨lj¨ k a halmazb´l/sorozatb´l a ritka elemeket. Ez dupl´n hasznos, hiszen e oo u o o a cs¨kkentj¨ k a mem´riafogyaszt´st ´s mivel az azonos sz˝ rt elemek sz´ma nagyobb lehet, mint o u o a e u a az azonos elemek sz´ma a t´mogatotts´gok meghat´roz´sa m´g kevesebb id˝be fog telni. a a a a a e o Vannak olyan mint´k, amelyekn´l a illeszked´s eld¨nt´se dr´ga m˝ velet. P´ld´ul gr´f t´ u a e e o e a u e a a ıpus´ mint´kn´l az illeszked´s meghat´roz´s´hoz egy r´szgr´f izomorﬁa feladatot kell eld¨nteni, ami a a e a aa e a o bizony´ ıtottan NP-teljes. Ilyen mint´kn´l hasznos, ha minden jel¨ltn´l rendelkez´s¨ nkre allnak a a o e eu ´
Ha csak a matematikai deﬁn´ okat tekintj¨k, akkor t¨rekedhett¨nk volna a legegyszer˝bb le´ asra ´s ıci´ u o u u ır´ e haszn´lhattunk volna sorozatok helyett multihalmazokat. A val´s´gban azonban a bemenet t´nyleg sorozatok a oa e form´j´ban adott, ´ nem tehetj¨k fel, hogy az azonos bemeneti elemek ossze vannak vonva. aa ıgy u ¨
2


460

IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,

VOL. 23, NO. 5,

MAY 2001

Multiseeded Segmentation Using Fuzzy Connectedness
Gabor T. Herman, Fellow, IEEE, and Bruno M. Carvalho, Student Member, IEEE
AbstractÐFuzzy connectedness has been effectively used to segment out an object in a badly corrupted image. We generalize the approach by providing a definition which is shown to always determine a simultaneous segmentation of multiple objects. For any set of seed points, the segmentation is uniquely determined by the definition. An algorithm for finding this segmentation is presented and its output is illustrated. The algorithm is fast as compared to other segmentation algorithms in current use. We also report on an evaluation of the accuracy and robustness of the algorithm based on experiments in which several users were repeatedly asked to identify the seed points for the algorithm in a number of images. Index TermsÐSegmentation, fuzzy connectedness, feature extraction, algorithms, clustering.

æ
1

EGMENTATION is the process of recognizing objects in an image. If what distinguishes these are not the exact values assigned to the pixels, but rather some textural property (as it is the case for images containing random noise and/or shading), then fuzzy connectedness can be usefully employed to achieve segmentation (see [1], [2], [3], [4], [5], [6] and their references). Fuzzy connectedness was explicitly introduced by Rosenfeld [7], but it had been foreshadowed earlier (for example, by the ªMinimum Methodº in [8]). Our approach is based on that advocated in [9], but is generalized to arbitrary digital spaces [10]. In this very general approach, we deal with an arbitrary set  . Because of the nature of the applications that we have in mind, we refer to elements of  as spels, which is short for spatial elements [10]. The spels can be pixels of an image (as in [1], [2], [3], [4], [5], [7], [9]), but they can also be dots in the plane (as in [11], [12]), or any variety of other things. The theory and algorithm presented here will be independent of the specifics of the application area. They are, in particular, applicable to data clustering [13] in general and so their range of usefulness goes far beyond just image segmentation and includes such distant areas of endeavor as psychology [8] and statistics [14]. The basic concept that we are generalizing in this paper is that of fuzzy connectedness. To every ordered pair Y d of spels, we assign a real number not less than 0 and not greater than 1, which we define as the fuzzy connectedness of  to d. This indeed provides us with an example of a fuzzy set (as it is normally defined in the literature [15]):

S

INTRODUCTION
The fuzzy set in question is ªthe set of connected pairsº and the grade of membership of Y d in this set is the fuzzy connectedness of  to d. In the approach used below (and in earlier, already cited, papers), fuzzy connectedness is defined in the following general manner. We call a sequence of spels a chain, its links are the ordered pairs of consecutive spels in the sequence. The strength of a link is also a fuzzy concept (i.e., for every ordered pair Y d of spels, we assign a real number not less than 0 and not greater than 1, which we define as the strength of the link from  to d). For example, if the set of spels  is a finite set of dots in the plane, we may define the strength of the link from one dot to another as the reciprocal of the distance between them (we need to make the unit of distance such that all distinct dots are at least one unit from each other). As we will see in the body of the paper, for the purpose of fuzzy segmentation of images, the strength of any link of one pixel to another can often be automatically defined based on statistical properties of the links within regions identified by the user as belonging to the object of interest. The strength of a chain is the strength of its weakest link. The fuzzy connectedness of  to d is then defined as the strength of the strongest chain from  to d. In the literature which concerned itself with identifying a single fuzzy object containing a given seed pixel [2], [3], [4], [9], the following approach has been taken: The grade of membership in the object of an arbitrary pixel is its fuzzy connectedness to the seed pixel. In this paper, we generalize this approach: Each of the different objects in the image has its own definition of strength for the links and its own set of seed pixels. Each of the objects is then defined as the collection of those pixels which are connected entirely within the object to one of its own seed pixels in a stronger way than to any of the other seed pixels. This intuitive notion will be made precise. (An essential feature of our approach is that it does not simply calculate, for every pixel, the grade of membership to each of the individual objects of that pixel and then assigns the pixel to the object for which its grade of membership is maximal. The reason for this is that if a spel is separated from the seed points of Object 1 by

. G.T. Herman is with the Center for Computer Science and Applied Mathematics, Temple University, Philadelphia, PA 19122. E-mail: gabor@euclid.temple.edu. . B.M. Carvalho is with the Center for Computer Science and Applied Mathematics, Temple University, Philadelphia, PA 19122 and also the Department of Computer & Information Science, University of Pennsylvania, Philadelphia, PA 19104-6389. E-mail: bruno@csam.temple.edu. Manuscript received 2 Sept. 1999; revised 5 July 2000; accepted 6 Oct. 2000. Recommended for acceptance by D. Jacobs. For information on obtaining reprints of this article, please send e-mail to: tpami@computer.org, and reference IEEECS Log Number 110537.

0162-8828/01/$10.00 ß 2001 IEEE

HERMAN AND CARVALHO: MULTISEEDED SEGMENTATION USING FUZZY CONNECTEDNESS

461

Fig. 1. Three examples of a set of spels  . In each case, the spels are dots in the plane and     v    f  fog, where  contains the top three dots, v contains the (a) five, (b) four, or (c) three horizontally-centered dots on the left,  contains the three horizontally-centered dots on the right, f contains the three vertically-centered dots on the bottom, and o is the dot on the bottom-right.

spels belonging to Object 2, then it should not be assigned to Object 1. The gestalt that we are trying to capture here is a segmentation in which the chains which determine ªbelonging to an objectº must lie entirely in that object.) An intuitive picture of our algorithm is the following: There are w competing armies (one corresponding to each object). Initially, they each have full strength and they occupy their respective seed spels. All armies try to increase their respective territories, but the moving from one spel to another reduces the strength of the soldiers to be the minimum of their strength on the previous spel and the affinity (for that army or object) between the spels. At any given time, a spel will be occupied by the soldiers of the armies which were not weaker than any other soldiers who reached that spel by that time. Eventually, a steady state is reached in which the objects occupied by each of the armies have a desirable joint property discussed in the next section. A potentially time-consuming step in finding such objects is the calculation of the multiple fuzzy connectedness of all the pixels to the seed pixels. We devised a greedy (and, hence, reasonably efficient [16]) algorithm which provides the desired segmentation. We demonstrate its performance on five mathematically-defined and on six physically-obtained (real) images. The output of the process is a segmentation into fuzzy sets in the classical sense ([15], p. 39) that, for each spel, we also produce a ªgrade of membershipº in the object(s) to which it belongs. The approach we are advocating here turns out to be semiautomatic in its actual applications. We rely on the user of our method to be able to identify seed spels which definitely belong to the various objects into which we desire to segment the images and we suggest (as other advocates of segmentation based on fuzzy connectedness have done before us) that the user-selected seed spels can be used for automatic calculation of the definitions of the strengths of links of each of the objects. Since this implies that the output of our algorithm is user-dependent, we report on experiments (in which five users segmented five images, each five times) which validate the accuracy and robustness of our approach.

2

THEORY

AND

ALGORITHM

The discussion in this section is quite general, it is applicable to arbitrary digital spaces [10] and not to just those defined by traditional rectangular tessellations.

Some of the terms are defined in a slightly novel way. In Sections 3 and 4, we apply these ideas to images defined over both the hexagonal and the standard square tessellations of the plane. In contrast to this, in this section, we illustrate the definitions on sets of spels which are dots in the plane, see Fig. 1. For a positive integer w, an M-semisegmentation of a set  (of spels, short for spatial element) is a function ' which maps each  P  into an (M+1)-dimensional vector '  ' Y ' Y Á Á Á Y ' , such that ' P HY I (i.e., it is nonneH I w H gative but not greater than 1) and for at least one m in the range I m w '  ' , and for all other m it is either 0 m H or ' . We say that ' is an M-segmentation if, for every spel , H ' is positive. H We illustrate these definitions for w  P using the sets  defined in Fig. 1. In all three cases, Figs. 1a, 1b, and 1c, we let '  IY IY H for  P  and '  IY HY I for  P v. In other words, this means that the top three dots belong to the first object and the horizontally-centered dots on the left belong to the second object, with the maximal grade of membership in both cases. The assignment of the other dots to the two objects (and the associated grades of membership) depend, for now intuitively but later more precisely, on the fuzzy connectedness ideas outlined in the previous section. ForpP ,  let '  IaPY HY IaP in Fig. 1a and let '   pwe Ia VY Ia VY H in Figs. 1b and 1c. This reflects the fact that the cluster  of dots is nearer to the cluster v of dots in Fig. 1a, but it is nearer to the cluster  of dots in the other Fig. p ' two cases. For  P f, we let '  IaPY HY IaP inp 1a,    p p p Ia SY HY Ia S in Fig. 1b, and '  Ia VY Ia VY Ia V in Fig. 1c. The last of these assignments reflect the fact that the cluster f of dots is equidistant from the clusters v and  of dots in Fig. 1c, and so it is logical that dots in f have the same grade of membership in both objects. Finally, we may consider that the dot o is simply too far from both objects and let 'o  HY HY H, in which case, ' is a 2-semisegmentation but not a 2-segmentation. Alternatively, we may let 'o  IaRY HY IaR in Fig. 1a and let 'o  IaRY IaRY IaR in Figs. 1b and 1c, in which case, ' is a 2-segmentation. A fuzzy spel affinity on  is a function 2 X  P 3 HY I. We think of Y d as a link and of 2Y d as its 2-strength. (In the previous literature, it was also assumed that 2 is symmetric: for all Y d P  P , 2Y d  2dY ; we do not need this restriction.) We define a chain in    from H to u to be a sequence hH Y Á Á Á Y u i of spels in 

462

IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,

VOL. 23, NO. 5,

MAY 2001

Fig. 2. A region of the plane is distinguished from its background by randomly retaining three out of every four points of a square grid within the region and randomly retaining only one out of every four points in the background (on the left). While the border between the region and its background is far from obvious, areas can be identified which are clearly in the region and in the background, respectively (see the circles on the right). The statistical properties of the distribution of the dots within these regions can then be used to (fuzzily) assign dots to the region and/or to the background (see text).

and the 2-strength of this chain as the 2-strength of its weakest link kÀI Y k Y I k u. (In case u  H, the 2-strength is defined to be 1.) We say that  is 2-connected if, for every pair of distinct spels in , there is a chain in  of positive 2-strength from the first spel of the pair to the second. Again, we illustrate these ideas on the sets  of Fig. 1. Assuming that the unit of length is such that the distance between the nearest distinct points in  is 1, we can define a fuzzy spel affinity on  as any of the following: & HY if   dY 2Y d  I Iak À dkY otherwiseY where k À dk is the Euclidean distance between the dots  and d, & 2Y dY if k À dk QY " 2Y d  P HY otherwiseY and & IaQY if k À dk ~ 2Y d HY otherwiseX

dots, we define for every  P  , i to be the Euclidean distance of  to that other dot in  , which is nearest to it. (Intuitively, i measures the isolation of  from the rest of the dots in  . A property which can be used to distinguish the region from its background in Fig. 2 is the isolation of the dots in it.) A subset  of  containing at least a few dots gives rise to a fuzzy spel affinity on  , defined as follows: Let r and s the mean and the standard deviation of the set of values fi j  P g. Then, @ HY if i T kd À kY r ÀiP R 2 Y d  À  P Ps  e Y otherwiseX (Note that this definition is an example in which the fuzzy spel affinity is not necessarily symmetric. This can arise because d being the nearest distinct dot in  to  does not imply that  is the nearest distinct dot in  to d.) We see that 2 Y d has a nonzero value only if d is a nearest distinct dot in  to  and its value will be high if kd À k is typical of the distances from dots in  to their nearest distinct neighbors. Hence, 2 and 2f appear to be appropriate ways of defining the fuzzy spel affinity for the region and background, respectively, in Fig. 2. In general, an M-fuzzy graph is a pair  Y É, where  is a nonempty finite set and 2  2I Y Á Á Á 2w  with 2m (for I m w) a fuzzy spel affinity such that  is minI m w 2m -connected. (This is defined by minI
m w

RY

Q

Under these definitions, any subset  of  is 2-connected. (Indeed, for any pair Y d of distinct dots in , Y d is a chain in  of positive 2-strength from  to d.) On the other " hand, while v   is 2-connected in Fig. 1a, it is not " 2-connected in Fig. 1c. In all cases,   v    f is " 2-connected, but no subset of  which contains o and an " element distinct from o is 2-connected. The set  itself is ~ 2-connected, but the subset   v  fog is not. If there are multiple objects to be segmented, it is reasonable that each should have its own fuzzy spel affinity. For images, this idea has been introduced in [17] and will be further illustrated in the next section. In this section, we illustrate the idea on clusters of dots in the plane. Consider Fig. 2, which is similar in its nature to Fig. 1h of [11]. It leads to the following. As illustrated in Fig. 2, it is far from obvious for a human being to decide exactly which dots belong to the region and which to the background, but it is reasonably easy to specify sets of dots  and f which are clearly in the region and in the background, respectively. Letting  be the set of all

2m Y d  minI

m w

2m Y dX

From this definition and the previous discussion, it follows that  Y 2I Y 2P  is a 2-fuzzy graph as long as  is any of the three sets of dots in Fig. 1 and 2I and 2P are either the 2 of ~ (1) or the 2 of (3). On the other hand, if either 2I or 2P is the " of (2), then  Y 2I Y 2P  is not a 2-fuzzy graph, since in 2 such a case  is not minI m P 2m -connected. Similarly, the  Y 2 Y 2f  associated with Fig. 2 is not a 2-fuzzy graph. For example, if d is the dot indicated by the arrow (on the right of the figure), then for all  P  we have that 2 Y d  2f Y d  H. For an M-semisegmentation ' of  and for I m w, k the chain hH Y Á Á Á Y u i is said to be a 'm-chain if ' b H, m for H k u. Further, for    Y    and  P  , we use "'YmYY  to denote the maximal 2m-strength of a

HERMAN AND CARVALHO: MULTISEEDED SEGMENTATION USING FUZZY CONNECTEDNESS

463

Fig. 3. Illustration of the desirability of the M-segmentation whose existence (and uniqueness) is guaranteed by the Theorem. Let  be an arbitrary spel and suppose that 'd is known for all other spels d. Then, (for I n w) the s of (6) is the maximal 2n-strength of a chain n l hdH Y F F F Y dv Y i from a seed spel in n to  such that 'd b H (i.e., dl n belongs to the nth object), for H l v. (s is defined to be 0 if there is n no such chain.) Intuitively, the mth object can ªclaimº that  belongs to it if and only if s is maximal. This is indeed how things get sorted out in m (7): ' has a positive value only for such objects. m

'm-chain in  from a spel in  to . (This is 0 if there is no such chain.) We now illustrate these ideas with  consisting of the dots of Fig. 1c, ' defined by V if  P  Y b IY IY HY b ` IY HY  p IY if  P vY  p S '  if  P Y b IapVY IapVY HYp b   X Ia VY Ia VY Ia VY if  P fY ~ 'o  IaRY IaRY IaR and É  2I Y 2P  with 2I  2 of (3) and 2P  2 of (1). Since there is no '1-chain containing an element of v and there is no '2-chain containing an element of  , we have that, for any    , "'YIYYv o  "'YPYY o  H. It is easy to check that "'YIY ffogY o  "'YIY fogY o  IaQX ~ On the other hand, due to the difference between 2I  2 and 2P  2, "'YPYvffogYv o  IaR. More significantly, since there is no '2-chain containing an element of , we have p that "'YPYvfogYv o  Ia SP. Theorem. If  Y É is an M-fuzzy graph and, for I m w, m is a subset (of seed spels) of  such that at least one of these subsets is nonempty, then there exists a unique M-semisegmentation (which is, in fact, an M-segmentation) ' of  with the following property: For every  P  , if for I n w & IY if  P n Y  T sn  mxdP min"'YnY Yn dY 2n dY Y otherwiseY then for I m w &  sm Y if s ! s for I m n '  m HY otherwiseX

For a fixed spel , we can work out the values of the s using n (6) and what we request that, at that spel , (7) be satisfied. What the theorem says is that there is one, and only one, M-semisegmentation which satisfies this reasonable local property simultaneously everywhere, and that this M-semisegmentation is in fact an M-segmentation. The three 2-segmentations that we discussed earlier in association with Fig. 1 are, in fact, examples of what is guaranteed by this theorem in general. In all three cases, the 2-fuzzy graph is  Y 2Y 2, where  is different in the three cases (as shown in Fig. 1a, 1b, and 1c, respectively), 2 is defined by (1), I   and P  v. At a first glance, it appears that the statement of the theorem is unnecessarily complicated in the sense that one maybe able to replace "'YnY Yn d in (6) by 'd . However, this n altered version of the theorem would not be true, as demonstrated by the following simple example. Let   fuY vY wg and let I  fvg. Consider the 1-fuzzy graph  Y f2I g, where & HXIY if v P fY dgY V 2I Y d  IXHY if v TP fY dgX Consider the 1-segmentation 'v  IY I and 'u  'w  rY r. The only value of r for which this 1-segmentation satisfies the property in the theorem as stated is r  HXI. However, were we to replace "'YnY Yn in (6) by 'd , then the property would be n satisfied whenever HXI r IXH and, so, the uniqueness claimed in the theorem would no longer be true. In the previous literature, certain uniqueness results (such as Theorem 5.2.4 of [10]) have been derived from a proposition (Theorem 5.2.1 of [10] or Proposition 2.3 of [9]; less explicitly indicated earlier in [8]), which in the notation introduced in this paper says the following. Proposition. Let  Y f2g be a 1-fuzzy graph with a symmetric 2, let ' be a 1-segmentation of  and let H t I. Then, the binary relation u2Yt on  defined by Y d P u2Yt D "'YIY Yfdg  ! t is an equivalence relation. It turns out that this proposition does not generalize to the case discussed in this paper in which we do not require 2 to be symmetric. This can be seen by the simple example in which   fY dg, 2Y d  IXH, and 2dY   HXI. In this case, Y d P u2YI but dY  P u2YI . So, u2YI is not symmetric and a so is not an equivalence relation and, so, the proposition is not valid in our more general context. Nevertheless, the following argument validates the uniqueness claim stated in the theorem. Suppose that there are two different M-semisegmentations ' and ( of  having the stated property. We choose a spel , such that ' T (  , but d  for all d P  such that mx'd Y (H  b mx' Y (H Y 'd  ( d . H H   Without loss of generality, we assume that 'H ! (H , from   which it follows that, for some m P fIY Á Á Á Y wg, 'm b (m ! H   and, so, by (7), 'm  sm and  TP m . This implies that there exists a 'm-chain hdH Y Á Á Á Y dv i in  of 2m-strength not less than ' b H such that dH P m and 2m dv Y  ! ' . Next, m m we show that hdH Y Á Á Á Y dv i is a (m-chain. W

n

wY

U

Before discussing the validity of this theorem, let us discuss in less mathematical terms what it says. The property stated in the theorem is a reasonable one (see Fig. 3). Furthermore, it is a local one in the following sense:

464

IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,
l

VOL. 23, NO. 5,

MAY 2001

d We need to show that, for H l v, (m b H. This is true for 0, since dH P m . Now, assume that it is true for l À I I l v. Since hdH Y Á Á Á Y dlÀI i is a (m-chain in  of 2m-strength at least ' b H from an element of m , we m have "(YmY Ym dlÀI  ! ' . Since we also know that m l 2m dlÀI Y dl  ! ' , we get td ! ' (where t is defined m m m dl for ( as s is defined for ' in (6)). The only way (m could be 0, is if there were an n P fIY Á Á Á Y wg such that d d d mx'd Y (H  ! (H  (n  td H n
l l l l l l

 b td ! '  '  mx' Y (H X m H H m

By the choice of , this would imply that 'd  ( d , which l cannot be since 'd T H. m   From all this, it follows that (H ! t ! '  ' ! (H , m m H implying that all the inequalities are, in fact, equalities. But   then '  t  (m , contradicting ' b (m and, thereby, m m m validating uniqueness. Next, we show that any M-semisegmentation having the stated property is, in fact, an M-segmentation. We observe that it is a consequence of (7) that, for any spel , '  mxI m w s . Let hH Y Á Á Á Y u i be a chain of positive H m minI m w 2m -strength from a seed spel to an arbitrary k spel . We now show inductively that, for H k u, ' b H. H Clearly, this is so for k  H. Now, suppose that it is so for k À I. kÀI kÀI kÀI  '  s . Choose an m I m w such that ' H m m Then, there is a 'm-chain of positive 2m-strength from a spel k k in m to kÀI . Since 2m kÀI Y k  b H, ' ! s b H. H m We do not give a mathematical proof of the existence of the desired M-semisegmentation; instead, we carefully describe an algorithm which produces it. In designing the algorithm, we aim at making it efficient: As is illustrated in the next section, our implementation of it allowed us to find 3-segmentations of images with over 10,000 spels in less than a fifth of a second. Before getting into a detailed discussion of the algorithm, it is useful to point out that it does not simply run in parallel the fuzzy connectedness algorithm for the segmentation of a single object for each of the objects and then assigns the pixels at the end to the object for which the grade of membership is maximal. (Such an algorithm is discussed in [17].) We consider it more appropriate that the assignment of a spel to an object will be blocked if all chains to that spel from the seed spels of that object are broken by higher claims of other objects. We illustrate this in Fig. 1a, using the ~ 2-fuzzy graph  Y f2Y 2g; see (3) and (1) with I   and P  v. Clearly, there is a chain in  from an element of  to ~ o whose 2-strength is 1/3, but the 2-strength of any chain in  from an element of v to o cannot exceed 1/4. Nevertheless, the unique 2-segmentation of our theorem assigns o to the second object. This is because all chains in  from an element of  to o contain at least one spel  such that there is a chain from v to  whose 2-strength is greater than the ~ 2-strength of any chain from  to . In particular, for any  P   f, there is a chain from an element of v to  whose 2-strength is 1/2, but there is no chain from an element of  ~ to o whose 2-strength is more than 1/3. Our algorithm has to be subtle enough to recognize such breaking of chains for one object by a competing object.

l

l

As the algorithm proceeds, it maintains (and repeatedly changes) an M-semisegmentation '. The claim is that at the time when the algorithm terminates, ' satisfies the property of the theorem. The omitted mathematical details of the proof of this claim resemble those needed to prove the correctness of the simpler Dijkstra's algorithm [16]. The algorithm makes use of a priority queue r of spels , with associated keys ' [16]. Such a priority queue has the H property that the key of the spel at its head is maximal (its value is denoted by Maximum-Key(H), which is defined to be 0 if r is empty). As the algorithm proceeds, each spel is inserted into r exactly once (using the operation r 2 r  fg) and is eventually removed from r (using the operation Remove-Max(H), which removes the spel  from the head of the priority queue). At the time when a spel  is removed from r, the vector ' has its final value. Spels are removed from r in a nonincreasing order of the final value of ' . We use the variable l to store the current H value of Maximum-Key(H). The process is initialized (Steps 1-9 below) by setting ' m to 0, for each spel  and H m w. Then, for every seed spel  P m ,  is put into r and both ' and ' are set to 1. H m Following this, l is also set to 1. At the end of the initialization, the following conditions are satisfied: 1. ' is an M-semisegmentation of  . 2. A spel  is in r if and only if H ` ' l. H 3. l  wximumEueyr. 4. For I m w, m  f P r j '  lg. m The initialization is followed by the main loop of the algorithm. At the beginning of each execution of this loop, Conditions 1 to 4 above are satisfied. The main loop is repeatedly performed for decreasing values of l until l becomes 0, at which time the algorithm terminates (Step 10). There are two parts to the main loop, each of which has a very different function. The first part of the main loop (Steps 11-23 below) is the essential part of the algorithm. It is in here, where we update our best guess so far of the final values of the ' . A m current value is replaced by a larger one if it is found that there is a 'm-chain from a seed spel in the initial m to  of 2m-strength greater than the old value (the previously maximal 2m-strength of the known 'm-chains of this kind) and it is replaced by 0 if it is found that (for an n T m) there is a 'n-chain from a seed spel in the initial n to  of 2n-strength greater than the old value of ' . m The purpose of the second part of the main loop (Steps 24-28 below) is to restore the satisfaction of Conditions 3 and 4 above for a new (smaller) value of l. We now give a detailed specification of the algorithm using the conventions adopted in [16]. 1. for  P  2. do for m 2 H to w 3. do ' 2 H m 4. r 2 Y 5. for m 2 I to w 6. do for  P m 7. do if '  H then r 2 r  fg H 8. ' 2 ' 2 I H m

HERMAN AND CARVALHO: MULTISEEDED SEGMENTATION USING FUZZY CONNECTEDNESS

465

9. l 2 I 10. while l b H 11. for m 2 I to w 12. do while m T Y 13. do remove a spel d from m 14. g 2 f P  j ' ` minlY 2m dY  and m ' lg H 15. while g T Y 16. do remove a spel  from g 17. t 2 minlY 2m dY  18. if l  t and ' ` l then m m 2 m  fg 19. if ' ` t then H 20. if '  H then r 2 r  fg H 21. for n 2 I to w 22. do ' 2 H n  23. if 'H t then ' 2 ' 2 t H m 24. while wximumEueyr  l 25. emoveEwxr 26. l 2 wximumEueyr 27. for m 2 I to w 28. m 2 f P r j '  lg m To help with the understanding of why this algorithm performs as desired, we comment that just prior to entering its main loop (Steps 10-28), there are four kinds of spels. There are those spels d which have previously been put into and have subsequently been removed from r, for these spels, not only does the vector 'd has its final value, but also we have already put into r (and possibly even have already removed from r) every spel  such that 2m dY  b H, for at least one m. (For spels of this first kind, 'd b l.) Second, there are the spels d which are in at least H one of the m , for these spels the vector 'd has its final value, but we may not have yet put into r every spel  such that 2m dY  b H for at least one m. (For spels of this second kind, 'd  'd  l.) This will get done in the next execution H m of Steps 12-20, while Steps 21-23 will insure that ' get updated appropriately. Consequently, the spels  which are in r but not in any of the m are those for which there is a 'm-chain (for the current ') from a seed spel in the initial m to ; for the rest of the spels (those which have not as yet been put into r) there is no 'm-chain (for the current ') from a seed spel in the initial m to . (For spels  of the third and fourth kinds, H ` ' ` l and H  ' , respectively.) H H One tricky aspect of the algorithm is that, as a result of Step 23, a spel of the third kind may become of the second kind and a spel of the fourth kind may become of the third (or even of the second) kind during the execution of the main loop. That the description of the four kinds of spels remains as given in the previous paragraph is insured by Steps 18 and 20. (Step 20 also insures that Condition 2 stated above the algorithm remains satisfied. To see this, observe that Step 14 guarantees that if  is put into g, then H ` minlY 2m dY  and, consequently, the t defined in Step 17 and used in Step 23 is also positive. That Condition 1 stated above the algorithm remains satisfied is obvious from Steps 19-23.) We complete this section with a brief discussion of our implementation of the algorithm. As suggested in [16], we

use a heap to implement the priority queue r. This provides us with efficient implementations of the operations of insertion into r 2 r   and removal from (Remove-Max(H)) the priority queue, as well as of Step 28. In applications it is typically the case that, for every spel d, there is at most a fixed number of spels  such that Æw 2m dY  b H and a list of all such  is inexpensive to mI produce. In such a case, the cost of executing Step 14 becomes proportional to a constant (four or six in the examples of the next section) independent of the size of  . Using v to denote this constant, the computational complexity of the algorithm is O(xlog x  wv), where x is the number of elements in  .

3

APPLICATION TO MULTISEEDED IMAGE SEGMENTATION

One of the beauties of the segmentation approach above is that in many applications, the appropriate fuzzy spel affinities can be automatically created by a computer program, based on some minimal information supplied by a user [4], [9], [10]. We demonstrate this in Fig. 4. On the left are images defined on a  consisting of regular hexagons which are inside a large hexagon (with 60 spels on each side, a total of 10,621 spels). In all the examples of Fig. 4 w  Q. We now describe one of the possible ways of specifying 2m and m I m Q. The user points (and clicks) at some spels in the image and m is formed by these spels and the six neighbors of each. We define gm to be the mean and hm to be the standard deviation of the gray values of the spels of m and we define m to be the mean and m to be the standard deviation of the absolute differences between gray values of pairs of adjacent spels in m . Then, 2m Y d is defined to be 0 if  and d are not adjacent and to be &gm Yhm g  &m Ym aP if they are, where g is the mean and  is the absolute difference of the gray values of  and d and the function &rYs x is obtained from a Gaussian distribution with mean r and standard deviation s by multiplying it by a constant so that the peak value becomes 1. The right column of Fig. 4 shows the resulting maps of the 'm , for I m Q. The seed sets m consist of the brightest spels. (For the first image, we selected the seed spels so that I  P , for the second image, we selected the seed spels so that P  Q , and for the rest of the images, the three sets of seed spels are pairwise disjoint, which happens to resultÐdue to the large number of gray levels used in the images to be segmentedÐin the three objects being pairwise disjoint as well). The time taken to calculate these three maps using our algorithm on a 450 MHz Pentium III personal computer were between 180 ms and 190 ms for each of the seven images (average = 185.71 ms). Since these images contain 10,621 pixels, we conclude that the execution time is less than 20 microseconds per pixel. The same was true for all the other image segmentations that we tried, some of which are reported in what follows. To permit comparisons with other algorithms, we also applied our algorithm to a range of real images which appeared in the recent image segmentation literature. Since in all these images  consists of squares inside a rectangular

466

IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,

VOL. 23, NO. 5,

MAY 2001

Fig. 4. The first five of the images on the left were mathematically defined, so that they include various levels of noise and shading. The last two images on the left were obtained using magnetic resonance imaging (MRI) of heads of patients. On the right, we show the corresponding three maps (obtained by the method described in the text) by assigning the color rY gY   PSS Â ' Y ' Y '  to the spel . Note that not only the hue, but also the I P Q brightness of the color is important: The less brightly colored red areas for the last two images correspond to the ventricular cavities in the brain, correctly reflecting a low grade of membership of these spels in the object which was defined by seed spels which are all in brain tissue.

HERMAN AND CARVALHO: MULTISEEDED SEGMENTATION USING FUZZY CONNECTEDNESS

467

Fig. 4. (continued).

region, the automatic calculation of the fuzzy spel affinities that is described near the beginning of this section (for regular hexagons inside a hexagonal region) has to adapted. In our adaptation, we still defined adjacency to mean that the squares have exactly one edge in common (the so-called 4-adjacency [10]), but the sets of seeds are formed by the squares at which the user points together with the eight other squares which share an edge or a vertex with that square. Except for this adaptation, the previous specification is verbatim what we used for the experiments which we now describe. In [18], Pollak et al. demonstrate their proposed technique to segment an SAR image of trees and grass

(their Fig. 1, our Fig. 5a). They point out that ªthe accurate segmentation of such imagery is quite challenging and in particular cannot be accomplished using standard edge detection algorithms.º They validate this claim by demonstrating how the algorithm of [19] fails on this image. As illustrated in Fig. 5b, our technique produces a satisfactory segmentation. In this image, the computer time needed by our algorithm was 0.6 seconds (on the same 450 MHz Pentium III personal computer which we used for all our experiments), while according to a personal communication from Pollack, the method of [18] ªtook about 50 seconds to reach the 2-region segmentation for this 201-by-201 image on Sparc 20, with the code written in C.º

Fig. 5. An SAR image of (a) trees and grass and (b) its 2-segmentation.

468

IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,

VOL. 23, NO. 5,

MAY 2001

Fig. 6. An aerial image of (a) San Francisco and (b) an indoor image of an office. The original images (from [20]) are on the top, the other images are multiseeded segmentations produced by our approach (see text).

In Fig. 6, we report on the results of applying our approach to two physically-obtained images from [20]: One (on the top-left) is an aerial image of San Francisco and the other (on the top-right) is an indoor image of an office. The 2-segmentation of San Francisco is into land and sea, the 3-segmentation separates out Golden Gate Park from the rest of the land. For the segmentation of the office scene (as well as the segmentation in Fig. 7), Q ` w ` U and, so, we used a different colored hue for each object with gray for

spels which belong to multiple objects; the lightness of the color indicates the grade of membership. In the 5-segmentation shown in the middle, the bottom of the sofa on the left is merged into the same object as the carpet on the floor. Indeed, this also happens with the unsupervised texture segmentation reported in [20]. However, while separating these two regions with an unsupervised texture segmenter seems an unreasonable task (the regions are very similar texturally, it is only our general knowledge

HERMAN AND CARVALHO: MULTISEEDED SEGMENTATION USING FUZZY CONNECTEDNESS

469

Fig. 7. (a) A range image and (b) its segmentation.

of the world which tells us that one should belong to the sofa), our method allows us to introduce an extra object. In the 6-segmentation (on the bottom-right), the bottom and lower-part of the arm of the sofa are detected as a separate object. It is stated in [20] that the times needed for the segmentations reported ªare in the range of less than five secondsº (on a Sun UltraSparc). Our times to obtain the segmentations shown in Fig. 6 are all between 3.8 and 4.2 seconds. However, there is a basic difference in the resolutions of the segmentations. Since the segmentation method used in [20] is texture based, the original 512 Â 512 images are subdivided into 64 Â 64 ªsitesº using a square window of size 8 Â 8 per site. In the final segmentations of [20], all pixels in a particular window are assigned to the same object. As opposed to this, in our segmentations, any pixel can be assigned to any object. Another way of putting this is that we could also make our spels to be the 8 Â 8 windows of [20] and thereby reduce the size of the  to be a 64th of what it is currently. This should result in a two order of magnitude speedup in the performance of our segmentation algorithm (at the cost of a loss of resolution in the segmentations to the level used in [20]). Our final image from the recent literature is on the left of Fig. 7. It is a range image from [13]. As can be seen from the segmentation on the right of Fig. 7, this is an example in which the simple approach proposed in this section for calculating the fuzzy spel affinities from the gray values of the pixels fails: The segmentation that is produced (in less than 2 seconds) is not the correct one (based on higherorder knowledge of the object under consideration). The ªfinal segmentationº shown in Fig. 27d of [13], while not perfect, is in much better correspondence with human intuition. However, for the purpose of segmentation, the method of [13] starts with assigning to each pixel a sixdimensional feature vector (consisting of the estimated spatial coordinates of the surface point shown at that pixel, together with the coordinates of the estimated unit normal to the surface at that point). The method described in this section for calculating the fuzzy spel affinities based on Gaussian distributions determined by the gray values of the seed pixels is easily expandable to a method for calculating the fuzzy spel affinities based on (multivariate) Gaussian distributions determined by the feature vectors of the seed

pixels. The algorithm given in the previous section is then applicable, without any changes, to achieve segmentation using fuzzy spel affinities defined in this more sophisticated way. In brief, while the simple approach to calculating the fuzzy spel affinities proposed in this section is not guaranteed to lead to a desired segmentation in all cases, the general algorithm of the last section has a more universal appeal and its practical usefulness is only limited by our ability to find the definitions of the fuzzy spel affinities which are appropriate to the application at hand.

4

ACCURACY

AND

ROBUSTNESS

Since in the method discussed in the last section, the affinities are based on manually selected seeds, it follows that (in spite of the uniqueness property expressed in our theorem) the practical performance of the algorithm as implemented need to be experimentally evaluated, both for accuracy and for robustness. In this section, we report on such experiments and their results. In all these experiments, we used the first five images on the left of Fig. 4. Since all these images were based on mathematically defined shapes (onto which we imposed gray values, followed by noise and shading), the ªcorrectº segmentation of the images were known to us (but not to the users who were the subjects of our experiments). An interactive program was created whose first panel had the following instructions: . You will be asked to select four seeds for each object in the image by clicking at some point on the image and then clicking the button [Set Spel]. The program will not let you set a spel that does not belong to the object in question, issuing a warning. The images can have two or three objects and each one will have its associated window explaining which regions correspond to the objects to be detected and their correspondent numbers. After selecting the seeds you should click the button [Run MFuzzy Alg]. After each segmentation is completed, click on the button [Next Image] to go to the next image. After the fifth image is segmented, you can click either [Quit] or [Next Image] to exit the program.

.

.

470

IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,

VOL. 23, NO. 5,

MAY 2001

TABLE 1 Point Accuracy of Segmentations

You must close this window to continue, but you can move the specific instructions windows and keep them while selecting the seeds. Please follow the instructions on those windows. . Thank you for your help. After these, the five images were presented (always in a newly-calculated random order), each accompanied by a set of instructions. For example, the instructions for the first and fifth image from the left of Fig. 4 were the following: The object number 1 is the s shaped object and the varying background is the object number 2. . The object number 1 is the rectangular area of varying intensity, object number 2 is the bottom part of the varying background and object number 3 is the upper part of the varying background. Five volunteer users, who were not familiar with the images, were asked to work five times each with this interactive program. Since, in each session with the program, all five images were processed, this resulted in a total of 125 segmentations. We now report on the various ways we analyzed these 125 outputs. We considered two reasonable ways of measuring the accuracy of the segmentations: In one, we simply consider if the spel is assigned to the correct object, in the other, we .

.

take into consideration the grade of membership as well. The point accuracy of a segmentation is defined as the number of spels correctly identified divided by the total number of spels multiplied by 100. The membership accuracy of a segmentation is defined as the sum of the grades of membership of all the spels which are correctly identified divided by the total sum of the grades of membership of all spels in the segmentation multiplied by 100. In Tables 1 and 2, we report on our results. The entries in these tables (and in later ones) are to be interpreted as follows: If the entry in the cell labeled User i and Image j is x Æ y that means that x is the mean and y is the standard deviation of the accuracies of the five segmentations of Image j by User i which were obtained during the five separate sessions. The Average entries for a particular user report on the mean and standard deviation of the accuracies of the 25 segmentations performed by that user, while the Average entries for a particular image report on the mean and standard deviation of the accuracies of the 25 segmentations of that image. Finally, the entry in the cell labeled Average/Average reports the mean and standard deviation of the accuracies of all the 125 segmentations. The first thing to note about these tables is that they are rather similar. This is reassuring, since the definitions of both of the accuracies were somewhat ad hoc and, so, the

TABLE 2 Membership Accuracy of the Segmentations

HERMAN AND CARVALHO: MULTISEEDED SEGMENTATION USING FUZZY CONNECTEDNESS

471

TABLE 3 Intrauser Consistency of the Segmentations

fact that they yield similar results indicates that the reported figures of merit are not oversensitive to the precise nature of the definition of accuracy. The second thing to note is that there is an outlier in these tables, namely, the entry for User 1 and Image 1. The reason for this is that in one of the sessions, User 1 placed all the seeds for the background in Image 1 more or less vertically aligned, resulting in a fuzzy spel affinity for the background which did not properly take into account the horizontal shading across the background. This resulted in much of the background being assigned to the object containing the seeds which were placed into the s-shape. In any practical application, this error would have been immediately obvious to the user (since the segmentation appears within a second of entering the seeds); however, in our automated experiment, there was no option given to the users to correct any errors in seed placement. This single uncorrected error makes all our average results worse than they would be in an actual application. Nevertheless, the results are still quite impressive. The average error (defined as ª100 less point accuracyº) over all segmentations is less than 3 percent, the average errors for the first four images are all less than 4 percent, while for the fifth one it is less than 8 percent. (The difficulty that the users had with the fifth image is the following: In the ªcorrectº segmentation, the upper and lower halves of the image were separated at exactly half way. Since the users were not informed of this fact, there was no reason why they would have placed the seeds symmetrically above and below the horizontal central line and this resulted in the two halves being separated in the segmentations somewhat off center.) This compares quite favorably with the state-of-the-art: In [20], Hoffmann et al. report that a ªmean segmentation error rate as low as 6.0 percent was obtained.º

In order to measure the robustness of our procedure, we need to define the similarity of two segmentations. The point similarity of two segmentations is defined as the number of spels which are assigned to the same object in the two segmentations divided by the total number of spels multiplied by 100. The membership similarity of two segmentations is defined as the sum of the grades of memberships (in both segmentations) of all the spels which are assigned to the same object in the two segmentations divided by the total sum of the grades of membership (in both segmentations) of all the spels multiplied by 100. (Note that, for both these measures of similarity, identical segmentations will be given the value 100 and segmentations in which every spel is assigned to a different object in the two segmentations will be given the value 0.) Because of the likeness of Tables 1 and 2, in what follows we do not report on results based on both of these definitions of similarity, but rather select the one which appears to us the more appropriate. In Table 3, we report on the consistency of the users with themselves. Since User i segmented Image j five times, there are 10 possible ways of pairing these segmentations. In the cell labeled User i and Image j of Table 3, we report on the mean and standard deviation of the membership similarity for these 10 pairs of segmentations. Again, the results are quite satisfactory. In Table 4, we report on the consistency between users. In order to do this, for each user and each image, we selected the most typical segmentation by that user of that image. This is defined as that segmentation for which the sum of membership similarities between it and the other four segmentations by that user of that image is maximal. This way, we obtained five segmentations for each Image j (the most typical ones for each of the five users) and again

TABLE 4 Interuser Consistency of the Segmentations

472

IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,

VOL. 23, NO. 5,

MAY 2001

TABLE 5 Consistency of the Segmentations under Object Merging

there are 10 possible pairings of these five segmentations. In the cell labeled Image j of Table 4, we report on the mean and standard deviation of the membership similarity for these 10 pairs of segmentations. Note that the interuser consistency is even better than the intrauser consistency, mainly due to the selection of most typical segmentation for each user we eliminate the influence of the relatively bad segmentations. Finally, we did some calculations of the sensitivity of our approach to w (the predetermined number of objects in the image). In the third image, the distinction between the red and green objects and in the fifth image between the green and blue objects is artificial; the nature of the regions assigned to these objects is the same (see Fig. 4). The question arises: If we merge these two objects into one, do we get a similar 2-segmentation as what would be obtained by merging the seed points associated with the two objects into a single set of seed points and then applying our algorithm? (This is clearly a desirable robustness property of our approach.) Table 5 reports on the analysis of doing just this for the total of 50 readings by our five users on Images 3 and 5.

5

DISCUSSION

In this paper, we provided an algorithm for the segmentation of multiple objects which combines 1) very general applicability, 2) ease of use, and 3) rapid response. In fact, items 2 and 3 are interrelated: The rapid response provides the user with immediate feedback which makes possible interactive correction of the information provided to the program. What is the basic principle here? The user is presented with some image, such as the dots of Fig. 2 or the gray level pictures of Fig. 4. Typically, for a human endowed with a general understanding of images (or, better yet, for an expert knowledgable in the field of endeavor which gave rise to the images), it will be easy to identify regions or points in the images which definitely belong to different objects which are to be distinguished from each other. The algorithm proposed here produces a rapid feedback showing the consequences of the user-provided identification. At this moment, the user may accept the resulting

segmentation or may redefine the identifications provided to the program in view of the (presumably undesirable) nature of what the program has returned. (For example, one may reasonably argue that there should be additional pixels assigned to the red region on the lower-right part of the last image of Fig. 4. Such a situation can be remedied by introducing additional seed spels.) In fields where we do not have, statistically-speaking, a complete knowledge of the distribution of the images which we are likely to encounter (and this is more the rule than the exception), such interactive approach is likely to be as reliable (and often less misleading) than approaches using some idealized model of the world (based on incomplete knowledge). A basic potential weakness of our approach is that the outcome may be more dependent on the actions of the user than on the image being segmented. The experiments that we have reported in the previous section indicate that this is not the case. A real fault of the approach, as opposed to unsupervised segmentation approaches (such as reported in [20]), is that since it makes essential use of human input, it cannot be used in autonomous robotics. The main result of the paper (referred to as the Theorem) and the accompanying algorithm is very general. In one sense, it cannot possible fail: It will do exactly what is claimed. On the other hand, in some specific instances, it may produce undesirable results (see Fig. 7). However, one can never say that such a thing has been a consequence of the general approach: The possibility always exists that the user made an inappropriate choice of the affinities (or, at a higher level, in the general way of calculating the affinities from the user provided information). For example, the affinities calculated based on (4) are clearly inappropriate for segmenting the dot clusters of Fig. 2, since they do not even provide us with a 2-fuzzy graph (and, so, the Theorem is not applicable). However, the situation can easily be remedied, by redefining the affinities so that they are no longer zero-valued for all but the very nearest neighbors. Such an adjustment of the details of a general approach to specific applications is the norm in the field of segmentation; see how this is done for detecting gestalt clusters in [11] and it is the essence of Bayesian optimization approaches based on Markov Random Fields (see, e.g., [21]) which mandate the selection of a Gibbs distribution as

HERMAN AND CARVALHO: MULTISEEDED SEGMENTATION USING FUZZY CONNECTEDNESS

473

a prior specific to the field of application. It is hard to compare two such general approaches from the point of view of accuracy since, in both cases, there are so many user dependent details of an actual implementation that any single set of choices cannot be generalized to statements about the overall approach. There is one thing that we can say with confidence (based on much computational experience) about our approach, as opposed to approaches involving stochastic optimization (such as [21]): Our approach is faster. Although we do not have a similar personal experience with other approaches (such as those advocated in [22]), our reading of the reported results in the literature imply to us that our proposed algorithm is very fast (in computational time) as compared to most of the previous art. The proposed approach belongs to the general class of graph-theoretic clustering methods. There is a large literature on these; in addition to the already cited papers, see [23], [24]. However, the literature prior to [17] assumed that a single labeled graph is to be used. In our paper, we have demonstrated that the extension of such approaches to what we have defined as an M-fuzzy graph is useful; combined also with the newly-introduced notion of M-semisegmentation, it provides both a strong theory and a promising new algorithm for clustering. It has been argued in [8] that a good clustering algorithm should satisfy three particular properties. We now state these properties, as they have been succinctly rephrased in [11], and discuss how our algorithm relates to them. 1. ªInput data should consist solely of a point set and a matrix of similarities.º The point set here corresponds to our  and, due to our generalization, the single matrix of similarities is replaced by w fuzzy affinities. However, in addition, we do need some seed spels. What's good and bad about this additional input requirement has been discussed earlier in the section. We also point out that in our implementation, the ªmatrix of similaritiesº are not given explicitly, rather, we calculate its entries (the fuzzy affinities) if and when they are needed (in Step 14 of the algorithm). The practical computational complexity of our algorithm is less than the ywx P  required to compute w ªmatrices of similarities.º ªThe method should be such that a clear, explicit, and intuitive description of what the clustering accomplishes is possible.º Such a description is embedded in our theorem and the discussion which follows it (including Fig. 3). ªThe method should be invariant under monotone transformations of similarity measure.º We now make precise in our context, the strong sense in which this property is satisfied by our algorithm. Let 0 be a strictly monotone mapping of HY I onto HY I. If  Y 2I Y Á Á Á Y 2w  is an M-fuzzy graph, then so is  Y 02I Y Á Á Á Y 02w . (By definition, 02m Y d  02m Y d.) Furthermore, if for given seed spels ' and ( are the M-segmentations whose

existence and uniqueness are guaranteed by the theorem for  Y 2I Y Á Á Á Y 2w  and  Y 02I Y Á Á Á Y 02w Y
 respectively, then (m  0'  for all  P  and m H m w. We forego providing the details of the quite easy proof.

ACKNOWLEDGMENTS
This research has been supported by NIH Grant HL28432 (GTH and BMC), US National Science Foundation Grant DMS96122077 (GTH), and CAPES-BRASILIA-BRAZIL (BMC).

REFERENCES
[1] [2] S.G. Dellepiane, F. Fontana, and G.L. Vernazza, ªNonlinear Image Labeling for Multivalued Segmentation,º IEEE Trans. Image Processing, vol. 5, pp. 429-446, 1996. J.K. Udupa, L. Wei, S. Samarasekera, Y. Miki, M.A. van Buchem, and R.I. Grossman, ªMultiple Sclerosis Lesion Quantification Using Fuzzy-Connectedness Principles,º IEEE Trans. Medical Imaging, vol. 16, pp. 598-609, 1997. H.A. Moghaddam and J.F. Lerallut, ªVolume Visualization of the Heart Using MRI 4D Cardiac Images,º J. Computer Information Techology, vol. 6, pp. 215-228, 1998. B.M. Carvalho, C.J. Gau, G.T. Herman, and T.Y. Kong, ªAlgorithms for Fuzzy Segmentation,º Pattern Analysis Applications, vol. 2, pp. 73-81, 1999. P.K. Saha, J.K. Udupa, and D. Odhner, ªScale-Based Fuzzy Connected Image Segmentation: Theory, Algorithms, and Validation,º Computer Vision Image Understanding, vol. 77, pp. 145-174, 2000. B.L. Rice and J.K. Udupa, ªClutter-Free Volume Rendering for Magnetic Resonance Angiography Using Fuzzy Connectedness,º Int'l J. Image Systems Technology, vol. 11, pp. 62-70, 2000. A. Rosenfeld, ªFuzzy Digital Topology,º Information and Control, vol. 40, pp. 76-87, 1979. S.C. Johnson, ªHierarchical Clustering Schemes,º Psychometrika, vol. 32, pp. 241-254, 1967. J.K. Udupa and S. Samarasekera, ªFuzzy Connectedness and Object Definition: Theory, Algorithms, and Applications in Image Segmentation,º Graphic Models Image Processing, vol. 58, pp. 246261, 1996. G.T. Herman, Geometry of Digital Spaces. Boston: Birkhauser, 1998. C.T. Zahn, ªGraph-Theoretic Methods for Detecting and Describing Gestalt Clusters,º IEEE Trans. Computer, vol. 1, pp. 68-86, 1971. N. Ahuja, ªDot Pattern Processing Using Voronoi Neighborhoods,º IEEE Trans. Pattern Analysis and Machine Intelligence, vol. 3, 336-343, 1982. A.K. Jain, M.N. Murty, and P.J. Flynn, ªData Clustering: A Review,º ACM Computer Surveys, vol. 31, pp. 264-323, 1999. J.C. Gower and G.J.S. Ross, ªMinimum Spanning Trees and Single Linkage Cluster Analysis,º Application Statistics, vol. 18, pp. 54-64, 1969. S.K. Pal and D.K.D. Majumder, Fuzzy Mathematical Approach to Pattern Recognition. New Delhi, India: Wiley Eastern Ltd., 1986. T.H. Cormen, C.E. Leiserson, and R.L. Rivest, Introduction to Algorithms. Cambridge, Mass.: MIT Press, 1990. J.K. Udupa, P.K. Saha, and R.A. Lotufo, ªFuzzy Connected Object Definition in Images with Respect to Co-Objects,º Proc. SPIE Image Processing, K.M. Hanson, ed., vol. 3661, pp. 236-245 1999. I. Pollak, A.S. Willsky, and H. Krim, ªImage Segmentation and Edge Enhancement with Stabilized Inverse Diffusion Equations,º IEEE Trans. Image Processing, vol. 9, pp. 256-266, 2000. G. Koepfler, C. Lopez, and J.-M. Morel, ªA Multiscale Algorithm for Image Segmentation by Variational Method,º SIAM J. Numerical Analysis, vol. 31, pp. 282-299, 1994.

[3] [4] [5]

[6] [7] [8] [9]

[10] [11] [12] [13] [14] [15] [16] [17] [18] [19]

2.

3.

474

IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,

VOL. 23, NO. 5,

MAY 2001

[20] T. Hofmann, J. Puzicha, and J.M. Buhmann, ªUnsupervised Texture Segmentation in a Deterministic Annealing Framework,º IEEE Trans. Pattern Analysis and Machince Intelligence, vol. 20, pp. 803-818, 1998. [21] S. Geman and D. Geman, ªStochastic Relaxation, Gibbs Distributions, and the Bayesian Restoration of Images,º IEEE Trans. Pattern Analysis and Machince Intelligence, vol. 6, pp. 721-741, 1984. [22] S.C. Zhu and A. Yuille, ªRegion Competition: Unifying Snakes, Region Growing, and Bayes/MDL for Multiband Image Segmentation,º IEEE Trans. Pattern Analysis and Machince Intelligence, vol. 18, pp. 884-900, 1996. [23] L.G. Shapiro and R.M. Haralick, ªDecomposition of Two-Dimensional Shape by Graph-Theoretic Clustering,º IEEE Trans. Pattern Analysis and Machince Intelligence, vol. 1, pp. 10-20, 1979. [24] J. Shi and J. Malik, ªNormalized Cuts and Image Segmentation,º IEEE Proc. Computer Vision Pattern Recognition. pp. 731-737, 1994.

Gabor T. Herman received the PhD degree in 1968. From 1969 to 1981, he was with the Department of Computer Science, State University of New York (SUNY) at Buffalo, where he directed the Medical Image Processing Group. From 1981 to 2000, he was a professor in the Medical Imaging Section of the Department of Radiology at the University of Pennsylvania, during which time he was the editor-in-chief of the IEEE Transactions on Medical Imaging. Currently, he is the director of the Center for Computer Science and Applied Mathematics at Temple University. His books include Image Reconstruction from Projections: The Fundamentals of Computerized Tomography (Academic, 1980), 3D Imaging in Medicine (CRC, 1991 and 2000), Geometry of Digital Spaces (Birkhauser, 1998), and Discrete Tomography: Foundations, Algorithms and Applications (Birkhauser, 1999). He is a fellow of the IEEE. Bruno M. Carvalho received the BSc degree in computer science from the Federal University of Rio Grande do Norte, Brazil, in 1992, the MSc degree in computer science from the Federal University of Pernambuco in 1995, and the MSc degree in engineering from the University of Pennsylvania in 1999. Currently, he is a PhD student in the Department of Computer and Information Sciences at the University of Pennsylvania. His main interests are medical imaging, computer graphics, and computer vision. He is a student member of the IEEE.


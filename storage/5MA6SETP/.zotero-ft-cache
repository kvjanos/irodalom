20
Computer Analysis of Cloned Sequences
Paul R. Caron 1. Introduction 1.1. Goals of Analyses Analysis of the data generated from cDNA sequences, an important step m thefinalstages of any sequencing project, can provide insights into gene structure and function as well as help to direct the experimental approaches to obtaming the sequence of a full-length clone even when only prelimmary data are available. The types of analyses that should be performed will depend on the inraiediate goal, and may evolve from trying to identify whether a clone is genuine or just an artifact to the stage where one would like to draw conclusions about function and domain structure of a previously unknown gene product encoded by the cDNA clone. This chapter provides an overview of the types of analyses that should be performed to extract the most information from a sequence. No attempt is made to review the current status of sequence analysis software, but particular programs are used to illustrate the general approaches that should be taken. 1.2. Software Choices There are currently sequence analysis software programs for each of the major computer operating systems. Although many of these software packages have very useful functions, the exponential growth of the sequence databases necessitates the use of centralized computing facilities, which are able to handle the large volume of data associated with the sequence databases as well as provide the computing power necessary to search these data rapidly. These resources may be databases and programs accessible to the users at individual sites or network-based program servers. This chapter discusses both approaches, using the programs that are part of the Genetics Computer Group's (GCG's) (MadiFrom Methods in Molecular Biology, Vol 69- cDNA Library Protocols Edited by I G Cowell and C A Austin Humana Press Inc, Totowa, NJ

247

248

Caron

son, WI) Wisconsin Sequence Analysis Packageâ„¢ for most of the examples (1). Section 4. contains pointers for accessmg network-based searching services. Although many other implementations of most of the fimctions in the GCG package exist, this package is widely available and provides a consistent interface to a multitude of sequence analysis programs. This package is available for VMS and a number of UNIX operating systems. This chapter specifically discusses using the UNIX command-line interface to GCG release 8.0 Section 4. contains a summary of the differences between the UNIX and VMS implementations. No discussion of any graphical interface to the GCG programs or any similar programs is presented. This chapter presents the general methodology needed to characterize a recently cloned sequence. It is impossible in this brief summary to cover thoroughly all of the options for the programs discussed, those interested in more detailed information should consult Methods in Molecular Biology, vol. 24 in this series (2) as well as the original program documentation. Comparisons between the various databases' searching techniques can be found in Altschul et al. (3). Throughout this chapter, text in bold should be entered by the user, <retum> is used to denote pressing the "return" or "enter" key; <ctrl-d> signifies pressing "d" while holding down the "control" key; and the user should replace <filename> with the name of his or her file. 2. Materials Most of the programs discussed in this chapter are part of release 8.0 of the Wisconsin Sequence Analysis Package available from the GCG. The examples were run under IRIX 5.0 on a Silicon Graphics computer. However, the commands should be virtually identical under all of the UNIX operating systems currently supported by GCG. Translation of the commands to VMS is straightforward and is discussed in Section 4. A VTIOO terminal connection to the host enables users with a variety of desktop computers and workstations to use the programs similarly. Unless specifically stated, the default values were used for all optional parameters in the examples presented. Macaw (4) and Nentrez are available from the National Center for Biotechnology Information (NCBI) in both Mac and Windows versions. Macaw version 2.0.5 and Nentrez version 3.015 were obtained by anonymous ftp from ncbi.nlm.nih.gov. Local copies of the sequence databases were obtained from the NCBI and reformatted with the tools provided with the GCG package. Remote databases were accessed from the NCBI. Direct access to the internet is required to use programs, such as Nentrez or Network Blast, both of which also require preregistration with the NCBI. Access to these programs is also available without preregistration through the World Wide Web (WWW) at http://www.ncbi.nlm.nih.gov.

Computer Analysis of Cloned Sequences
Enter new sequence data getseq, reformat, gelenter Combine with sequence data from other gels gelmerge, gelassemble Search of nucleotide databases blast, fasta Vector or repetitive sequences found

249

Repeat until full length sequence is obtained

Identification of the location of sequence ambiguities and possible open reading frames map, codonpreference

/"
Check clone

^

T
Generate more primers for sequencing or cloning Analyze sequence of potential protein product

T

Fig. 1. Initial characterization of nucleotide sequence data.
3. Methods

The sequence analysis problem can be divided into two phases as depicted in Figs. 1 and 2. The first phase involves obtaining a full-length cDNA with high confidence in the reliability of the nucleotide sequence. In the second phase, one attempts to predict what this cDNA encodes, and how much can be extrapolated about the structure and function of the presumed protein product. Theflowchartspresented in these twofiguresdisplay the general approaches to the problems, whereas specific programs are discussed in the text. 3.1. Data Entry/Fragment Assembly Sequence data can be entered into a computerfileeither automatically from a DNA sequencing system or manually using custom software or a word processor. The DNA sequence should be saved either directly in a GCG format or as a plain text file. The file containing the sequence data can be transferred directly to the system running GCG and "reformatted," or for short sequences, the sequence data can be "cut and pasted" into GCG-compatiblefiles.Throughout this chapter, it is assumed that files are in a compatible format for subse-

250
Search protein databases for homologs blast, fasta

Caron

Search for conserved motifs motifs, profllescan

i

Multiple sequence alignment of close homologs pileup, macaw

Extrapolation of potential function of product of a cDNA clone

Generate profiles of regions of highest similarity profilemake

Identification of domain structure

i

Search protein databases for additional homologous sequences profilesearch, profllesegments

T

Fig. 2. Identification of structure and function of protein product quent analysis. Type reformat <filename> to format a noncompliant text file into a GCG-compatible format. Tools are also available to convertfilesdirectly from GenBank, EMBL, FASTA, PIR, Staden, and IntelliGenetics formats. 3.1.1. Entering a New Sequence Directly into a File Type getseq <retum>, followed by the name of a file in which to store the sequence. Paste the sequence, followed by <ctrl-D>. Nucleic acid sequence can be represented by any valid lUPAC symbols. 3.1.2. Assembling Multiple Fragments Often sequence data are obtained from multiple gels that result from sequencing-related clones and the use of primers originating on both strands of the DNA. Depending on the size and complexity of the sequence project, it may be possible to assemble these data into a single consensus sequence using the gel reading software or a word processor. At other times, it will be necessary to use fragment assembly software to denve a consensus sequence. Details for using the GCG fragment assembly tools can be found in Chapter 2 of Methods in Molecular Biology, vol. 24, as well as in the GCG program manual. 3.2. Restriction Site Mapping The location of commercially available restriction sites within a sequence are valuable landmarks that can be used to compare locations within a sequence

Computer Analysis of Cloned Sequences

251

BB as A rot p HY o II I / TGGTACAGGATCCTTCCCAATTTGATGTrCTTGTTATGCCAAATTTGTATGGAGACATCC X + + + + + + 60 ACCATGTCCTAGGAAGGGTTAAACTACAAGAACAATACGGTTTAAACATACCTCTGTAGG a b o W Y R I L P N L M F L L C Q I C M E T S G T G S P P I * C S C Y A K F V W R H P V Q D P S Q F D V L V M P N L Y G D I L B D E 3 r S Ac HpBS a p po a2st I a oR e4gu X I II IIII I / / TTAGTGACTAOTGTGCAGGAATTCATCGGAGGCCTCGGTGTGACACCAAGTGGCAACATT 61 + + + + + + 120 AATCACTGATCACACGTCCTTAAGTAGCCTCCGGAGCCACACTGTGGTTCACCGTTGTAA a b c L V T S V Q E F I G G L G V T P S G N I * * L V C R N S S E A S V * H Q V A T S D * C A G I H R R P R C D T K W Q H

Fig. 3. Example of the output from map. The command map -six was used to locate the position of restriction enzyme cleavage sites m the sequence. Ammo acid translations in the three forward reading frames is shown. Asterisks indicate the location of stop codons. with DNA fragment sizes obtained while cloning. Identification of new sites in the sequence would provide additional handles that can be used to manipulate the clone further.

3.2.1. Generating a Linear Restriction Map
The map command will generate a linear restriction map of a nucleotide sequence and can display the translated amino acid sequence below it. This type of display allows one to visualize the correspondence of the nucleotide sequence with open reading frames and stop codons. An example of the output of this command, in which the restriction enzyme list was limited to enzymes with six or more nucleotides in their recognition site, is shown in Fig. 3. Files other than the default can be used as a source of enzyme or factor recognition specificities and amino acid translation schemes by command line specification.

3.2.2. Generating a List of Restriction Sites
A tabular list of the location of restriction enzyme sites can be generated by the command mapsort. Similar to the map command, the file that defines cleavage specificity can be defined at the command line.

252 3.3. Finding Open Reading Frames

Caron

Viewing the translated amino acid sequence generated by the map command IS useful in identifying stop codons m a newly sequenced region and locating regions m the cDNA sequence that contain potential frame shifts. Searching protein sequences against all reading frames of a DNA sequence using programs, such as blast, can also identify possible frame shifts. Other statistical analyses of the DNA sequence can also be used to identify the correct translation frame(s). 3.3.1. Codonpreference Each organism has a set of codons that are used preferentially when expressing proteins of relatively high abundance. This bias can be used to locate the coding vs noncoding reading frames of a sequence. The program codonpreference uses the information contained in codon usage tables for a given organism to identify regions of the sequence that most likely encode protein (5). Codon usage tables for a variety of organisms from Escherichia coli to human are available in the GCG package. Tables of any specificity can be generated using the program codonfrequency See Section 4. for details on configuring the GCG package for graphic output before running codonpreference. 3.3.2. Testcode An additional measure of the potential of a region to encode a protein can be obtained by analyzing the distribution of nucleotides in every third position, The degeneracy of the genetic code allows this position to have much more variability than the others while conserving the amino acid sequence. The program testcode uses a statistical analysis of the nucleotide sequence to predict the location of coding vs noncoding regions (6). 3.3.3. Translate The protein sequence can be extracted from the cDNA sequence once the proper open reading frame has been identified using the translate program. This program requires that one know the nucleotide number of the starting and ending codon. 3.4. Homology with Otiier Proteins/Genes 3.4.1. Local vs Network Searching Probably the most important question to ask when obtaining a new sequence is "What is this sequence similar to?" One would like to know if this is a homolog of, or identical to, a previously identified sequence. Obviously, one

Computer Analysis of Cloned Sequences

253

would like to perform a thorough search using the most recent and complete databases. Unfortunately, with the exponential growth of these data and daily new releases, maintainmg an up-to-date local copy of these databases requires much time and storage space. Thus, to make the most efficient use of resources, there has been a shift toward using network servers to perform the searches. Searching local databases has advantages in terms of complete control of data security, response time, and unlimited number of queries. 3.4.2. Blast Blast searches are very fast searches used to find local segments of homology; no gaps in the aligned segments are allowed (7). The GCG implementation of blast allows searching of local databases as well as remote databases using servers at NCBI. This program can be used to query nucleotide sequences against nucleotide sequence databases, or the query sequence can be translated into amino acid sequences to search protein sequence databases. Protein query sequences can likewise be used to search either the protein or nucleotide databases. Starting with a nucleotide query sequence, blast searching of nucleotide sequences willfindvery closely related sequences, whereas searching of protein sequences will potentially identify more distant homologs. This is apparent in the results of blast searches using a sample sequence m Fig. 4. An estimate of the probability of a match is calculated based on the highest scoring match, but caution should be used when interpreting this number owing to repetitive sequences and contamination by vector sequences. 3.4.3. Fasta The fasta program allows sequence searching for regions of local homology; unlike blast, gaps are allowed (8). This program is more sensitive than blast when searching nucleotide databases. Another advantage is that the GCG version of fasta is able to search local sequence databases in the format used by the other GCG programs. The blast program requires that local databases be reformatted before searching, which increases the amount of storage space processing time required to maintain up-to-date data. 3.5. Retrieving Homoiogous Sequences and Descriptions 3.5.1. Fetch Copies of sequences of interest that are stored in a local copy of a sequence database can be obtained using the fetch program. Typing fetch followed by the accession number or sequence ID will create afilecontaining the complete database entry. The command fetch -outf=term: or fetch -outf=gcgstdout will retrieve the sequence entry to the terminal window.

Sequences producing High-scoring Segment Pairs: gb|U07e81IHSU07681 gbIU07980 1617(707980 einblX67310 ITBBISODEH gblM33099IBACIFMD Human NAD<H)-specific isocitrate deh... Gos taurus NAD-t--dependent isocitrate... S.tuberosum mRNA for beta-isopropylm,. . B.coagulans 3-isopropylmalate dehydr...

High Score 383 329 179 110

Smallest Sum Probability P(N) N 1.6e-35 1.7e-29 6.2e-06 0,9999 2 2 1 1

B
sp IP41563 I IDH3_B0VIN gp|U07681|HSU07681_l spl P29696 |LEU3_S0LTU apIP40495IYIJ4_yEAST pir|S20606IS20e06 splP30125ILEU3_EC0LI sp I P37412 I LEa3_SALTY plrlA43934IM3934 apIP33197IIDH_THETH gp|U07940ILPU07940_3 apIP415e4IIDHa_XACFA splP41565IIDHG_RAT pir|S39064|S39064 splQ02143 ILE:U3_LACLA gp IM9 07 611 LACLEUILV_2 spIP28241IIDH2_yEAST gpIZ46242ICBF3 5G12_2 sp I P39126 I IDH_BACSU spIP29102ILEU3_BRANA pdbl4ICDl pdb|3ICDI pdb|6ICDI pdb|7ICDI spIP319S8ILEU3_CL0PA apIP12010ILEU3_BACC0 gpIM33099IBACIPMD_1 sp I P24404 I LEU3_AGRT0 pir|A55591IA55591 spIPO 5644 ILEU3_BACCA spIP24098ILEU3_THEAQ pir|JX028eiJX0286 pdblllPDI pirlS41223|S41223 gp|U25634|AVU25634_3 sp I P05645 I LEU3_BACSU sp IP41560 I IDHl_VrBAl pir|B49341IB49341 pir{S43888|S4388S sp1Q00412ILEU3_SPIPL pirlA44851IA44851 splP24015ILEU3_LEPIM ap I P41019 I LEU3_BACME gp|U00022|U00022_23 spIP28834IIDH1_YEAST spIP00351ILEU3_THETH ISOCITRATE DEHYDROGENASE {NAD), . . +3 NAD(H)-specific isocitrate dehy. . +3 3-ISOPROPYLMAlATE DEHYDROGENASE. . +3 HYPOTHETICAL 40.1 KD PROTEIN IN. . +3 leuB protein - Salmonella typhi. . +3 3-ISOPROPYIiMALATE DEHYDROGENASE. . +3 3-ISOPROPyLMALATE DEHYDROGENASE. . +3 Isocitrate dehydrogenase (NADP+. . +3 ISOCITRATE DEHYDROGENASE (NADP). . +3 DlpA [Legionella pneumophila] +3 ISOCITRATE DEHYDROGENASE (NAD) , . . +3 ISOCITRATE DEHYDROGENASE (NAD),. . +3 isocitrate dehydrogenase (NAD+). . +3 3-ISOPROPYLMALATE DEHYDROGENASE. . +3 leuB gene product [Lactococcus . . +3 ISOCITRATE DEHYDROGENASE (NAD),. . +3 F35G12.2, similar to isocitrate. . +3 ISOCITRATE DEHYDROGENASE (NADP). . +3 3-ISOPROPYLMALATE DEHYDROGENASE. . +3 Phosphorylated Isocitrate Dehyd. . +3 Isocitrate Dehydrogenase (E.C.I. . +3 Isocitrate Dehydrogenase (E.C.I. . +3 Isocitrate Dehydrogenase (E.C.I. . +3 3-ISOPROPYLMALATE DEHYDROGENASE. . +3 3-ISOPROPYLMALATE DEHYDROGENASE. . +3 B.coagulans 3-isopropylmalate d. . +3 3-ISOPROPYLMALATE DEHYDROGENASE, . +3 isocitrate dehydrogenase (NADP+. . +3 3-ISOPROPYLMALATE DEHYDROGENASE. . +3 3 -ISOPROPYLMALATE DEHYDROGENASE. . +3 3-isopropylmalate dehydrogenase. . +3 3-Isopropylmalate Dehydrogenase. . +3 3-isopropylmalate dehydrogenase. . +3 ttuC gene product [Agrobacteriu. . +3 3-ISOPROPYLMALATE DEHYDROGENASE. . +3 ISOCITRATE DEHYDROGENASE (NADP). . +3 isocitrate dehydrogenase {NADP+. . +3 leuB protein - Neisseria lactam. . +3 3-ISOPROPYLMALATE DEHYDROGENASE. . +3 3-isopropylmalate dehydrogenase. . +3 3-ISOPROPYLMALATE DEHYDROGENASE. . +3 3-ISOPROPYLMALATE DEHYDROGENASE. . +3 pbpC [Mycobacterium leprae] -2 ISOCITRATE DEHYDROGENASE (NAD),. . +3 3-ISOPROPYLMALATE DEHYDROGENASE. . +3 131 131 110 84 98 98 98 71 71 72 96 96 96 78 78 61 84 55 79 53 53 53 53 77 76 76 76 53 75 74 74 73 73 52 73 48 48 71 71 71 71 71 32 67 64 3.1e-17 3,5e-17 1.2e-12 4.4e-08 1.4e-06 1.4e-06 1.4e-06 1.5e-06 1.5e-06 2.0e-06 2.7e-06 2.8e-06 2.Se-0S l.le-05 l.le-OS 5.8e-05 0.00013 0.00045 0.00066 0.00082 0.00082 0.00082 0.00082 0.0012 0.0017 0.0017 0.0017 0.0018 0.0023 0.0032 0.0032 0.0044 0.0044 0.0044 0.0044 0.0071 0.0071 0.0082 0.0084 0.0084 0.0084 0.0084 0.029 0.030 0.076 2 2 2 2 1 1 1 2 2 2 1 1 1 2 2 2 1 2 1 2 2 2 2 1 1 1 1 2 1 1 1 1 1 2 1 2 2 1 1 1 1 1 3 1 1

Fig. 4. Comparison of the output from blast searches of nucleotide vs protem databases. (A) Example of the output from a blast search using the nucleotide sequence in Figure 1 against a nucleotide database. (B) Same sequence used to search a protein database with blast.

254

Computer Analysis of Cloned Sequences 3.5.2. Retrieve E-mail Server

255

Complete sequence entries can be retrieved directly from the NCBI by text terms or accession numbers. An example of how to obtain the complete GenBank sequence entry for entry U07681 follows: mail retrieve@ncbi.nlm.nih.gov DATALIB genbank BEGIN U07681 Send an e-mail message containing the word help to retrieve@ncbi.nlm.nih.gov to obtain the complete help file. 3.5.3. Entrez Entrez is a program created at the NCBI that allows query and retrieval of an mtegrated set of databases consisting of nucleotide, protein, structure, and reference databases. Entries can be retrieved based on a number of criteria, including accession number, text terms, author, taxonomy, and similarity to other entries in the databases. Entries retrieved by entrez are all crossreferenced, such that starting with the accession number of a sequence of interest, one can quickly obtain the corresponding nucleotide and protein sequence entries, as well as those of related entries, literature references, abstracts, and links to structural information when available. The entrez program is available by anonymous ftp from ncbi.nlm.nih.gov and is available for most major computing platforms. Use of the network version of this program requires preregistration with the NCBI. A WWW interface to network entrez is accessible to anyone at http://ncbi.nlm.nih.gov. 3.6. Multiple Alignment of Homologous Sequences Once a sequence has been identified as encoding a member of a potential gene family, important information concerning gene structure and function can be extracted from a multiple alignment of related sequences. There are several approaches to multiple-sequence alignment. Only two are presented here: the automated method of GCG's pileup and the interactive method of macaw. 3.6.1. Pileup A multiple-sequence alignment is produced by pileup using a progressive alignment algorithm in which the sequences are clustered by pairwise comparison. This alignment method works best if the sequences are very similar and because this method requires that all the sequences be aligned; it fails when one or more of the sequences are not true homologs. The alignment produced

256
1 IDH_BACSU MAQ IDH_ECOLI MESKVWPAQ IDH1_YEAST MLNRTI AKRTLATAAQ IDH2_yEAST MLRNTrFRNT SRRFLATVKQ 1DH_THETH MPLITTETG 51 IDH_BACSU IWNAASKVLE AAVEKAYKGE IDH_ECOLI VTPAMLKWD AAVEKAYKGE IDH1_YEAST ITDSVRTIFE AE N IDH2_YEAST ISKSVKKIFS AA N IDH_THETH CVEATLKVLE AA K GEKITVSNC3V GKKITLQNGK AE RTLP PSIGRYTGKP KKMH LNVPNNPIIP LNVPENPIIP KKYGGRFTVT NPSTGKYTVS VLEDGRKLIT 50 PIEGDOTGPD YIEGDGIGVD LIPGDGVGKE FIEGDGIGPE VIPGDGIGPE

Caron

100 KKITWKEVYA GEKAYNKTGE . .WLPAETLD RKISWMEIYT GEKSTQVYGQ DVWLPAETLD IPIDW.E. .T INIKQ. . .TD HKEGVYEAVE VPIEW.E..S CDVSPIFVNG LTTIPDPAVQ APLAY EVRE AGASVPRRGI ASGVPQETIE

150 101 IDH_BACSU VIREYPIAIK GPLTTPVGG. GIRSLNVALR QELDLFVCLR PVRYPTGVPS IDH_ECOLI LIREYRVAIK GPLTTPVGO. GIRSLNVALR QELDLYICLR PVRYYQGTPS IDH1_YEAST SLKRNKIGLK GLWHTPADQT GHGSLNVALR KQLDIYANVA LFKSLKGVKT IDH2_YEAST SITKNLVALK GPLATPIGK. GHRSLNLTLR KTFGLFANVR PAKSIEGPKT IDH_THETH SIRKTRWLK GPLETPVG.Y GEKSANVTLR KLPETYANVR PVREFPNVPT IDH_BACSU IDH_ECOLI IDH1_YEAST IDH2_YEAST IDH_THETH IDH_BACSU IDH_ECOLI IDH1_YEAST IDH2_YEAST IDH_THETH IDH_BACSU IDH_ECOLI IDH1_YEAST IDH2_YEAST IDH_THETH IDH_BACSU IDH_ECOLI IDH1_YEAST IDH2_YEAST IDH_THETH IDH_BACSU IDH_ECOLI IDH1_YEAST IDH2_YEAST IDH_THETH 151 200 PVKRPEDTEM VIFRENTEDI YAGIEYAKGS EEVQKLISFL QNEIJJVNKIR PVKHPELTDM VIPRENSEDI YAGIEWKADS ADAEKVIKFL REEMGVKKIR RIP. .DI .DL IVIRENTEGE FSGLEHESVP G W E TYE. .NV.DL VLIRENTEGE YSGIEHIVCP G W Q PYAGRGI .DL VWRENVEDL YAGIEHMQTP SVAQ 201 FPETSOIGIK FPEHCGIGIK SLK SIK TLK PVSEEGTSRL PCSEEGTKRL VMTRPKTERI LITRDASERV LISWKGSEKI VRAAIDYAIE VRAAIEYAIA ARFAPDFAKK IRYAFEYARA VRFAFELARA HGRKSVTLVH NDRDSVTLVH YNRKSVTAVH IGRPRVIWH EGRKKVHCAT 250 KGNIMKPTEG KGNIMKFTEG KANIMKLGDG KSTIQRLAEG KSNIMKLAEG

251 300 AFKNWGYELA EKEYGDKVFT WAQYDRIAEE QGKDAANKAQ SEAEAAGKII AFKDWGYQLA REEFGGELID GGPWLKV KNPNTGKEIV LFRNIITEIG QKEYPD ID LFVNVAKELS .KEYPD LT . . PKRAFEOV AOEYPD IE 301 IKDSIADIFL IKDVIADAFL VSSIIVDNAS LETELIDNSV AVHIIVDNAA 351 PGANINYETG PGANIGDEC. AGANPGRDY. PSANIGHKI. PSANIGNEV. QQILTRPNEF QQILLRPAEY MQAVAKPHQF LKWTNPSAY HQLVKRPEQF HAIFEAT.HG .ALFEAT.HG .AVFEPGSRH .SIFEAV.HG .AIFEAV.HG 350 . .DWATMNL NGDYISDALA ACVGG.IGIA ..DVIACMNL NGDYISDALA AQVGG.IGIA . .DVLVTPSM YGTILGNIGA ALIGGP.GLV TDAVSVCPNL YGDILSDLNS GLSAGSLGLT . .EVIVTTNM NGDILSDLTS GLIGG.LGFA TAPKYAGLDK TAPKYAGQDK VGLDIKGQNV SAPDIAGQDK SAPKYACraW VNPSSVILSG VNPGSIILSA ANPTAMILSS ANPTALLLSS INPTAVLLSA 400 VLLLEHLGWN EMMLRHMGWT TLMLNHLGLN VMMLNHMGLT VMMLRYLEEF

Fig. 5. Example of an alignment produced by pileup

by pileup should be inspected and manually edited, if necessary, before proceeding to use this alignment in any further analysis. Figure 5 demonstrates a portion of an alignment produced by pileup.

Computer Analysis of Cloned Sequences 3.6.2. Macaw

257

The macaw program offers a different approach to multiple sequence (4). This program runs on both Macintosh and Windows operating systems, and allows mteractive alignment of multiple sequences. Regions of high similarity can be aligned with high stringency and locked into place. Then intervening regions can be aligned with reduced stringency, until the entire sequence is aligned. Sequences that do not have similarity in multiple segments are quickly identified, allowing the alignment to be properly interpreted. 3.7. Identification of Functional Domains 3.7.1. Motifs Conserved protein sequence motifs, such as nucleotide binding sites and protein modification sites, which have been identified in the PROSITE database, can be identified using the motifs program in the GCG package. The PROSITE database also contains detailed documentation about the proteins containing each motif and a list of known false-positive and false-negative sequences. 3.7.2. ProfileScan Multiple alignments of related protein sequences have been used to calculate tables in which a score is given for every amino acid at each position based on its frequency of occurrence (9). Sets of these profile tables can be used by profilescan to search a protein sequence for regions of high similarity with these protein families. 3.7.3. ProfileSearch Profiles can also be created from multiple-sequence alignments produced by pileup or macaw, and used to search the protein sequence databases for more homologs. These searches have the potential to be much more sensitive than blast or fasta searches, but take much longer to run. Ideally, a profile should be created using only the most conserved regions of the alignment. This profile can then be used by profilesearch to search the database, and the results can be aligned with the query profile by the program profilesegments. As with any of these searching techniques, this can be an iterative process, with more sequences added to the alignment with each pass. 3.8. Submission of Completed Sequences to Databanks New sequence data should be submitted to the genetic databanks when it is complete. There is rapid sharing of the data by the International Collaboration of Nucleotide Sequence Databases, and it is therefore only necessary to submit

258

Caron

to one database: GenBank, EMBL, or DDBJ. Deposition of sequence data is preferably done either through WWW servers: http://www.ncbi.nlm.nih.gov, http://www.ebi.ac.uk, or e-mailing a completed submission form to gb-$ub@ncbi. nlm.nih.gov, datasubs@ebi.ac.uk, or ddbjsub@ddbj.nig.ac.jp. Most journals require that sequence data be deposited and an accession number be obtained before publication. It is possible to request that the data not be released until the article is published in the scientific press.

4. Notes 4.1. GCG Introduction
1 Logging on and starting GCG. Users should have an account established by their system administrator on a machine that is running the GCG software The exact instructions for starting GCG vary by system and should be obtained from the administrator. 2 GCG help' There are many more programs and program options than can be presented in this limited format. Details of these can be found in the printed GCG manual or found online by typing genmanual Alternatively, entering genhelp will bring up a help file in which each program is listed m alphabetical order A list of command line options for each program can also be obtained by entering the program name followed by -check. 3. Program prompting: Most GCG programs need, and ask for, at least one input file name. In addition, many programs write their output into a file and ask for an output file name. Usually the program suggests a default answer by presenting it within parentheses and asterisks, for example (* filename.out *) One can accept the default answer by pressing return or type another value then press return Most programs are insensitive to unexpected responses and simply repeat the question if something unacceptable is entered 4. Command line structure: There are three types of parameters that can be specified on the command line when executing a GCG command. a. Required parameters' Items such as input sequence name, beginning and ending positions, and output file name must be supplied or else the program will pause to allow input of any missing parameters. Use of-default disables this interactive input and forces the use of the default program values for any option that is not specified. b. Local datafiles:There is the option of changing the data file that the program will use by specifying a new file on the command line or by having a file of the same name as the default file in the local directory. These include translation tables, sequence comparison tables, restriction enzyme lists, and so forth. c Optional parameters: Most programs have several options that can only be set on the command line. These include such options as the output line width, limits on the lengths of results, and so on. A list of optional parameters for each program can be found by using genhelp or by using the -check command line qualifier.

Computer Analysis of Cloned Sequences Table 1 General File Utility Commands in VMS and UNIX Operating Systems
Function List a file Delete a file Copy a file Rename a file VMS command type <filename> delete <filename> copy <filenamel> <filename2> rename <filenamel> <filename2> UNIX command

259

cat <filename> rm <filename> cp <filenamel> <filename2> mv <filenamel> <filename2>

5 Graphic output: GCG programs support an array of graphic output drivers, including postscript, HPGL, tektromcs, and XWindows. Users should see Appendix C of the Wisconsin Sequence Analysis Package for details. 6. Customizing GCG data files: GCG data files including restriction enzyme lists, and translation tables can be retrieved and edited. Type fetch <filename>, and a local copy of the file will be retrieved to the local directory. The local copies of these files will then be used as default.

4.2. UNIX vs VMS
7 GCG command differences: There are several major differences between the VMS and UNIX operating systems that are of concern to users of the GCG programs The GCG command names are identical in both systems, but commands may be abbreviated and file names are case insensitive in VMS, whereas not in UNIX. A slash, "/" is used to identify a command-lme option in VMS, whereas in UNIX, a dash,"-", is used. Commands may be extended over multiple lines by entering a "-" at the end of each line in VMS or a "\" in UNIX 8 File utilities: File names in VMS follow the pattern DISK:[DirjFilename.txt, whereas in UNIX, the pattern is /dir/filename.txt. See Table 1 for other general file utility commands.

4.3. Sequence Contamination
9. Vector sequence contamination Unfortunately, a large number of sequences that are deposited into sequence databases either represent portions of the cloning vector or are contaminated with portions of the cloning vector sequence. A blast search performed at the earliest stages of the sequence will usually indicate whether the sequence is from a potentially interesting clone or from a cloning artifact. Precautions should be taken in thefinalstages of preparing the sequence to eliminate the deposition of any extraneous sequences into the databases. 10. Degenerate primer sequence contamination: The sequences that are complementary to degenerate primers used to amplify the DNA prior to cloning should be removed from the sequence prior to performing any sequence comparison search. These sequences, which often represent conserved regions and thus have a high likelihood offindinga match in the database, are not necessarily part of the origi-

260

Caron
nal coding sequence. These primer sequences should also be removed from the sequence before deposition into the sequence databases.

4.4. Sequence Searching Over the Internet
11. A number of resources are available for searching the sequence databases over the internet. Gateways to various search engines can be found at http:// www.ncbi.nlm.nih.gov, http://www.ebi.ac.uk, http://www.blocks.fhcrc.org, http://dot.imgen.bcm.tmc.edu:9331

References
1 Genetics Computer Group (1994) Program Manual for the Wisconsin Package, Version 8. Madison, WI. 2 Griffin, H G. and Griffin, A M , eds (1994) Methods in Molecular Biology, vol 24, Computer Analysis of Sequence Data, parts I and II, Humana Press, Totowa, NJ. 3 Altschul, S. F , Boguski, M S., Gish, W., and Wootton, J C (1994) Issues in searching molecular sequence databases. Nat. Genet. 6, 119-129 4 Schuler, G. D , Altschul, S. F , and Lipman, D. J (1991) A workbench for multiple alignment construction and analysis Proteins. Struct Funct, and Genetics 9, 180-190. 5. Gribskov, M , Devereux, J., and Burgess, R R. (1984) The codon preference plot, graphic analysis of protein coding sequences and prediction of gene expression Nucleic Acids Res. 12, 539-549 6. Fickett, J. W. (1982) Recognition of protein coding regions in DNA sequences Nucleic Acids Res. 10, 5303-5318. 7 Altschul, S. F., Gish, W., Miller, W., Myers, E W , and Lipman, D. J (1990) Basic local ahgnment search tool J. Mol Biol 213,403-^10. 8. Pearson, W. R. and Miller, W. (1992) Dynamic programming algorithms for biological sequence comparison. Methods Enzymol 210, 575-601 9. Gribskov, M., Luethy, R., and Eisenberg, D (1989) Profile analysis Methods Enzymol. 183, 146-159.


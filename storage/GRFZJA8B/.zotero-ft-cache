A Fast 3D Correspondence Method for Statistical Shape Modeling
Pahal Dalal, Brent C. Munsell, Song Wang∗ Jijun Tang and Kenton Oliver , Department of Computer Science and Engineering University of South Carolina, Columbia, SC 29208, USA Hiroaki Ninomiya, Xiangrong Zhou and Hiroshi Fujita Department of Intelligent Image Information Division of Regeneration and Advanced Medical Sciences Graduate School of Medicine, Gifu University, Japan Abstract
Accurately identifying corresponded landmarks from a population of shape instances is the major challenge in constructing statistical shape models. In this paper, we address this landmark-based shape-correspondence problem for 3D cases by developing a highly efﬁcient landmark-sliding algorithm. This algorithm is able to quickly reﬁne all the landmarks in a parallel fashion by sliding them on the 3D shape surfaces. We use 3D thin-plate splines to model the shape-correspondence error so that the proposed algorithm is invariant to afﬁne transformations and more accurately reﬂects the nonrigid biological shape deformations between different shape instances. In addition, the proposed algorithm can handle both open- and closed-surface shape, while most of the current 3D shape-correspondence methods can only handle genus-0 closed surfaces. We conduct experiments on 3D hippocampus data and compare the performance of the proposed algorithm to the state-of-the-art MDL and SPHARM methods. We ﬁnd that, while the proposed algorithm produces a shape correspondence with a better or comparable quality to the other two, it takes substantially less CPU time. We also apply the proposed algorithm to correspond 3D diaphragm data which have an open-surface shape. corpus-callosum shapes between schizophrenia patients and normal controls. Certain shape structures are also related to other diseases by constructing and comparing the statistical shape models [6, 14, 22]. In [7, 25], statistical shape models are successfully used to guide image segmentation by detecting the structures with desirable shapes. While earlier research efforts focused on the 2D case, where each shape instance is a contour, current efforts primarily focus on 3D surface shape instances, because most anatomic structures bear a 3D shape [28]. This paper focuses on the 3D case and therefore, we formally deﬁne a shape instance to be a shape surface that may be closed or open. To construct a statistical shape model from a collection of training shape instances, the main difﬁculty is the required step of (landmark-based) shape correspondence, which identiﬁes a set of corresponded landmark points across the given training shape instances. This way, each shape instance is represented by a certain number of landmarks, which facilitate the construction of statistical shape models. Note that, as in most prior work [2, 3, 7], the identiﬁed corresponded landmarks may not be coincident with any anatomically signiﬁcant point of a structure. Prior research [3, 10] reveals that a small error in shape correspondence may substantially inﬂuence the accuracy of the resultant statistical shape models. Shape correspondence is a well known challenging problem, especially in the 3D case, because of the non-linear shape description and non-rigid shape variation. Many methods have been developed for shape correspondence in recent years [1, 3, 5, 8, 9, 10, 18, 19, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34]. Among them, the minimum description length method (MDL) [10] and the spherical harmonics descriptors method (SPHARM) [4, 15] are treated by many researchers as two of the state-ofthe-art methods that have been successfully used for 3D shape correspondence. Speciﬁcally, in MDL, the shape-

1. Introduction
Statistical shape modeling provides an effective way to quantitatively describe various shape structures and their possible variations. It has been widely used in many important computer-vision applications, especially in medicalimaging. For example, in [2, 3], statistical shape models are constructed to accurately locate subtle differences of
∗ Corresponding

author. Email: songwang@cse.sc.edu.

1-4244-1180-7/07/$25.00 ©2007 IEEE

correspondence error is measured by the required bit-length to transmit the resulting statistical shape model and all the training shape instances used to construct this model. Given the high complexity of this shape-correspondence error, random optimization algorithms, such as the genetic algorithm [10, 13, 24, 29, 30], are usually used to solve this problem. Recently, Heimann et al. [17] adapted this MDL-based shape-correspondence error and suggest a gradient-descent algorithm to ﬁnd a local-optimal solution. In SPHARM, using the ﬁrst order ellipsoid from the spherical harmonic coefﬁcients, the spherical parametrization are aligned to establish the correspondence across 3D shape instances [4]. However, both MDL [17] and SPHARM can only handle genus-0 closed-surface shape since they need to ﬁrst apply a conformal mapping to map each shape surface to a sphere. Furthermore, both methods are computationally expensive given the complexity of the conformal mapping. In this paper, we develop a new landmark-sliding based algorithm to achieve a faster 3D correspondence for both closed- and open-surface shapes. Speciﬁcally, we ﬁrst construct a rough initial correspondence between two shape surfaces by removing the possible translation, rotation and scaling transformations. We then slide these roughly corresponded landmarks on the respective shape surface to minimize a speciﬁed shape-correspondence error. In this paper, we use 3D thin-plate splines to model the shapecorrespondence error so that the proposed algorithm is invariant to afﬁne transformations and more accurately reﬂects the nonrigid biological shape deformations between different shape instances. We conduct experiments on 41 instances of closed-surface hippocampus shape and compare the performance of the proposed method to that of both MDL and SPHARM. We also apply the proposed method to correspond 18 instances of open-surface diaphragm shape.

a target shape surface V to a template shape surface U . Furthermore, we assume that UL , or the landmarks in the template U , are known and ﬁxed: denote them as ui = (uix , uiy , uiz ), i = 1, 2, . . . , n. The goal is then to identify n corresponded landmarks VL , or vi = (vix , viy , viz ), i = 1, 2, . . . , n, on the target surface V . If we have an algorithm to accomplish this two-instance shape correspondence, we can easily extend it to handle multiple-instance shape correspondence. Speciﬁcally, to correspond more than two shape instances, we can pick one of them as the template, construct the landmarks in this template, and then repeat the two-instance shape correspondence algorithm to correspond each of the remaining shape instances to this template. The major problem is then to deﬁne a shapecorrespondence error φ between UL and VL . We wish this error to well describe the underlying nonrigid deformation between two shape surfaces. Usually, it is desirable that this error is invariant to the afﬁne transformations of rotation, translation, and scaling. In addition, we wish VL to well represent the shape surface V instead of being aggregated in a small local area on the surface V . We denote this shape-representation error to be R(VL ) and suggest a shape-correspondence error in the form of φ(UL , VL ) = d(UL , VL ) + λ · R(VL ), (1) where d(UL , VL ) is a measure of the nonrigid shape deformation between UL and VL and λ > 0 is a balance factor.

2.1. Deﬁnition of d(UL , VL )
In this paper, we use the 3D thin-plate splines [2, 12, 31] to model the nonrigid deformation between the template and target shape surfaces and use the thin-plate bending energy as d(UL , VL ). In particular, the thin-plate spline ﬁnds a mapping t = (tx , ty , tz ) from UL to VL , i.e., vix = tx (ui ), viy = ty (ui ), and viz = tz (ui ), i = 1, 2, . . . , n. The thinplate bending energy, which measures the required energy to deform a volume to match these two sets of landmarks, is then characterized by
∞

2. Surface Representation and Problem Description
In this paper, we consider three different representations for each shape surface S: (a) point cloud SP , extracted or labelled directly from medical images, (b) triangle mesh ST , constructed from the point cloud SP , and (c) landmarks SL , identiﬁed in the shape correspondence. Among them, SP is the original data form of the shape surface and consists of a dense set of surface points. ST can be constructed from these surface points by a mesh-generation tool. In this paper, we use the COCONE package developed by Dey and Giesen [11] to generate the triangle mesh ST . The ﬁnally identiﬁed landmarks SL may not be contained in SP , but they are located on (or very close to) the underlying continuous surface S modelled by SP so that they can represent well this surface. For simplicity, let’s consider the case of corresponding

d(UL , VL ) =
−∞

(L(tx ) + L(ty ) + L(tz )) dxdydz,
∂2 ∂x2
2

where L(·) =
∂ 2 ∂y∂z + 2 quadratic form
2

2

+
2

∂2 ∂y 2

2

+

∂2 ∂z 2

2

+2

∂2 ∂x∂y

2

+

2

∂ ∂z∂x

. It can be further simpliﬁed to a (2)

T T T d(UL , VL ) = vx Lvx + vy Lvy + vz Lvz ,

where vx , vy and vz are the columnized vectors that contain the x, y and z coordinates of the landmarks in VL , respectively. L is the n × n upper left submatrix of K DT D 0
−1

,

1 where the n×n matrix K has element kij = − 8π ui −uj and the n × 4 matrix D = [1n×1 , ux , uy , uz ] with ux , uy and uz being the columnized vectors that contain the x, y and z coordinates of the landmarks in UL , respectively. The thin-plate bending energy is invariant to any afﬁne transformation, i.e., if the mapping t is afﬁne, the resulting bending energy is always zero.

2.2. Deﬁnition of R(VL )
Ideally, we may need to check the ﬁtting error between VL and the continuous surface V underlying the point cloud VP to deﬁne this representation error. However, this may lead to a very complex function that precludes efﬁcient algorithms for optimization. In this paper, we adopt an alternative way: we ﬁrst co-align the template U and the target V by removing their relative rotation, translation and scaling transformations and then require a spatial-distribution consistency between UL and VL . Here, we simply set
n

We then remove the rotations between the template and the target by aligning their principal axes. Consider the template shape surface UT as an example. Suppose the template triangle mesh UT contains m triangle faces with areas W1 , W2 , · · · , Wm , respectively. For each triangle, we calculate its centroid as the average of its three vertices. Denote the centroid of these m triangles as c1 , c2 , · · · , cm , i respectively. Denote ri = PWi cWj and each ri = m
j=1

(rix , riy , riz )T is a 3D vector. We can then create a 3 × 3 covariance matrix   m m m 2 i=1 rix i=1 rix riy i=1 rix riz m m m 2  . (3) i=1 rix riy i=1 riy i=1 riy riz m m m 2 rix riz riy riz riz i=1 i=1 i=1 Applying an eigenvalue decomposition to this matrix yields three orthogonal principal vectors e1 , e2 , and e3 with three corresponding eigenvalues being sorted in a decreasing order. We then rotate the whole template shape surface so that e1 and e2 are aligned with x- and y- axes, respectively. However, we must determine whether to align e1 and e2 to positive or negative directions of the x- and y-axes, so that they are consistent when processing both template and m target surfaces. In this paper, we calculate i=1 Wi (e1 ·ci ), where · indicates the operation of dot product. If its value is positive, we align e1 to the positive direction of xaxis. Otherwise, we align e1 to the negative direction of x- axis. Similarly, we can use the same strategy to determine the unique rotation to align e2 to the y- axis. For the target shape surface, we perform the same eigenvaluedecomposition and axis rotations. This will make the template and target to have the same orientations. There are rare cases where such eigenvalue-decomposition and axis rotation strategy fail to work i.e. when any two eigenvalues of the covariance matrix are too close to each other and/or m m the value of i=1 Wi (e1 · ci ) (or i=1 Wi (e2 · ci )) is very close to zero. However, for most shapes with certain amount of complexity, we ﬁnd that this strategy can effectively remove the rotation transformations between two shape instances. In some applications, the target V and the template U may be a priori known to be aligned (or partially aligned) by having no translation, rotation, and/or scaling transformations. For example, the diaphragm shape data used in Section 4 have no rotation transformation among them since they are extracted from medical images that are known to be aligned. In such cases, we can turn off the corresponding aligning operations to save computational time.

R(VL ) =
i=1

ui − vi

2

after removing the afﬁne transformations between U and V . This can effectively prevent all the target landmarks VL from aggregating in a small area on the surface V . Note that, the thin-plate-spline based shape-deformation measure d(UL , VL ) may not be sufﬁcient to prevent the aggregation of the target landmarks in the shape correspondence. In fact, from Eq. (2), we can see that, if all the coordinates of the target landmarks VL are scaled to half of their original values, d(UL , VL ) will be reduced to one-fourth of its original value. Therefore, when all the target points are moved closer to each other, the value of d(UL , VL ) may get smaller. The introduction of the term R(VL ) can effectively avoid this problem. In the following, we develop a shapecorrespondence algorithm to identify target landmarks VL that minimizes the shape-correspondence error (1).

3. Proposed Method
The proposed shape correspondence algorithm consists of three steps: (a) efﬁciently aligning U and V by removing translation, rotation, and scaling transformations, (b) constructing the template landmarks UL and an initial estimate of VL , and (c) reﬁning VL by a landmark-sliding algorithm that minimizes the shape-correspondence error (1).

3.1. Aligning the Target V and the Template U
This step is operated on UT and VT , the triangle mesh representations of the template and the target. We ﬁrst remove the location and scaling differences between UT and VT by moving their centers of mass to the origin and normalizing their sizes to be the same.

3.2. Constructing UL and an Initial Estimate of VL
By selecting one shape instance as the template U , constructing the template landmarks UL is independent of any other training shape instances. The basic consideration is

that UL is sufﬁciently dense to represent the surface U and sufﬁciently sparse for the construction of a compact statistical shape model. In this paper, we uniformly divide the 3D space into equal-size cubic grid cells. For each cell containing some surface point in UP , we pick the one closest to the center of the this cell as a landmark in UL . This process is shown in Fig. 1, where the cells are shown in 2D for convenience. We can tune the size of the grid cell to control the number or the density of the template landmarks UL .

(a)

Template Landmark Target Surface Point

(b)

Template Landmark Target Landmark

Figure 2. An illustration of ﬁnding an initial estimate of the target landmarks VL .

Template surface point Template landmark

estimate the tangent plane by ﬁtting all the surface points in VP that are located in a small neighboring area centered at vi . This tangent plane can be described by two linearly-independent, unit-length tangent vectors pi and qi in this plane. After a step of sliding, the target landmark vi will be moved to vi + αi pi + βi qi , where αi and βi are the sliding distances along two tangent vectors. The problem is then to locate the optimal sliding distances αi and βi , i = 1, 2, . . . , n so that after this sliding, the shapecorrespondence error (1) will be minimized. First, the shape-correspondence error (1) after a step of sliding can be written as φ(UL , VL ; α, β) = (v + P α + Q β)T L(v + P α + Q β)
∈{x,y,z} n 2

Figure 1. An illustration of constructing the template landmarks UL from point clouds UP . Note that, we show 2D grid cells here for illustration.

By removing the possible rotation, translation and scaling transformations between the template and target, we can construct an initial estimate of the target landmarks VL . We construct VL by ﬁnding, from the target point cloud VP , the points with small distance to the template landmarks UL . Speciﬁcally, for each template landmark ui , we ﬁnd from all the surface points in VP the one with the smallest Euclidean distance as the initial estimate of the target landmark vi , i = 1, 2, . . . , n, as shown in Fig. 2. To avoid the possible problem of ﬁnding the same target surface point for two different template landmarks, we exclude a target surface point from the search space if it has been included in VL in previous searches. Since the template and the target shape surfaces are pre-aligned, this simple algorithm is able to ﬁnd VL that correspond roughly to UL .

+λ
i=1

v i + α i p i + β i qi − u i

,

where α = (α1 , α2 , . . . , αn )T β P Q = (β1 , β2 , . . . , βn )T = diag(p1 , p2 , . . . , pn ) = diag(q1 , q2 , . . . , qn ), ∈ {x, y, z},

3.3. Reﬁning the Target Landmarks by Iterative Landmark Sliding
With the template landmarks UL , we can iteratively reﬁne the initially estimated VL by sliding VL on the surface V . We achieve this goal by sliding landmarks vi on the tangent plane passing through vi . Each step of sliding aims at minimizing the shape-correspondence error (1). We

and pi = (pix , piy , piz ) and qi = (qix , qiy , qiz ). Another consideration is that we should prevent the target landmarks VL from moving away from the target surface V since we expect the resulting corresponded landmarks VL to well represent the surface V . The best way to solve this problem is to restrict the maximum distance for each step of the sliding and to project the target landmarks after each step of sliding back to the surface V . For example, the projection can be achieved by ﬁnding, from VP , the surface points with the smallest Euclidean distance to the target landmarks after the sliding. In practice, we ﬁnd that it is usually sufﬁcient by only setting the maximum distance for each step of the sliding to a small value . The main

reason is that, in addition to the target landmarks VL , their association with the tangent planes and tangent vectors will also be updated after each step of the landmark sliding. This update involves a set of surface points in VP around the target landmarks. Therefore, we simply impose the following constraints in every step of landmark sliding. |αi | ≤ |βi | ≤ , i = 1, 2, . . . , n (4)

We can see that ﬁnding the sliding distances α and β to minimize the shape-correspondence error φ(UL , VL ; α, β), subject to constraints (4), is a quadratic programming problem that can be solved very efﬁciently. In our experiments, we use the OOQP quadratic-programming solver developed by Gertz and Wright [16]. For the stop condition, we iteratively run this landmark-sliding algorithm until the change of the shape-correspondence error φ(UL , VL ; α, β) between two iterations becomes insigniﬁcant or a preset number of iterations is reached.

the smaller these measures, the better the shape correspondence. Additionally, a qualitative method for evaluating shape correspondence is to vary the PDM mean shape by intentionally changing the projection lengths along the ﬁrst several principal directions between ±3σ standard deviations [6, 10], where σ 2 represents the eigenvalues. By varying the PDM we can visually check the resulting shape deformation from the mean shape to determine the validity of the PDM shape space. In this section, we adopt both these quantitative and qualitative methods for performance evaluation.

4.1. Experimental Results on the Hippocampus Data
We test the proposed method on 41 hippocampus instances. Each hippocampus shape instance contains 8, 000 to 10, 000 surface points. We compare the performance of the proposed method with the state-of-the-art MDL [10] and SPHARM methods [4, 15]. Speciﬁcally, we use an MDL implementation based on the gradient-descent algorithm [17]. The number of the identiﬁed landmarks on each shape instance can not be arbitrarily set in MDL and SPHARM. For both MDL and SPHARM, we select n = 642 landmarks for each shape instance in this experiment. To get a fair comparison, we tune the cell size (Section 3.2, Fig. 2) so that the proposed method also selects n = 642 landmarks in the template UL . The quantitative-evaluation results for all three methods are shown in Fig. 4, where “SLIDE” indicates the result of the proposed method. These results show that the proposed method outperforms both MDL and SPHARM in terms of compactness, speciﬁcity, and generality. In addition, the proposed method requires much less CPU time than MDL and SPHARM. Qualitative evaluation results are shown in Fig. 5. We can see that all three methods have similar shape deformation when changing the projection lengths along the ﬁrst two principal directions. These results indicate that the proposed method produces a shape correspondence that is of a better or comparable quality to the state-of-the-art MDL and SPHARM methods, but takes much less CPU time.

4. Experiments
We implemented the proposed method in C++ and used two 3D data sets for testing its performance. The ﬁrst data set contains 41 instances of closed-surface hippocampus shapes and the second contains 18 instances of open-surface human diaphragm shapes. Example hippocampus and diaphragm shape instances are shown in Fig. 3. For the proposed method, we set λ = 0.001 in (1) and = 0.05 in (4), given that all the shape instances are normalized as introduced in Section 3.1. Landmark sliding is set to stop after 20 iterations. The CPU time reported in this section is acquired from Linux workstations equipped with Intel Xeon 3.4GHz processors.

Figure 3. Examples of hippocampus (left) and diaphragm (right)

. For performance evaluation, we construct a point distribution model (PDM) [7] that deﬁnes the mean shape and its associated covariance matrix from the correspondence result. Using the PDM, Styner et al. [28] suggest three quantitative measures: compactness, generality and speciﬁcity to evaluate the performance of shape correspondence. Particularly, compactness evaluates the amount of variance in the PDM. Generality uses a “leave one out” test to evaluate a PDM’s capability to describe unseen shape instances outside of the training set. Speciﬁcity evaluates a PDM’s capability to represent only valid shapes. According to [28],

4.2. Experimental Results on the Diaphragm Data
The human diaphragm is an open-surface tissue located beneath the lung and above the liver, with its edge afﬁxed to the corresponding bone frame (rib, xiphoid, lumbar). Identifying the human diaphragm from torso CT images is a very important task in computer aided diagnosis [35]. We collect 18 diaphragm shape instances to test the open-surface shape correspondence. Each of the 18 diaphragm shape instances is deﬁned by approximately 11,000 to 12,500 surface points. We vary the cell size as discussed in Section 3.2 to construct template UL with

0.028 0.027 0.026
Compactness

2.6 2.4 2.2
Generality

x 10

−3

SLIDE SPHARM MDL

3

x 10

−3

2.5
Specificity

0.025 0.024 0.023 0.022 0.021 0 5 10 15 20

Algorithm MDL SPHARM SLIDE

CPU Time 28 hours 17 hours 4.6 hours

2 1.8 1.6 1.4 1.2 0 5 10 15 20

2

1.5

Included Principal Directions

Included Principal Directions

1 0

5

Included Principal Directions

10

15

20

(a)

(b)

(c)

(d)

Figure 4. Quantitative evaluation of MDL, SPHARM and the proposed “SLIDE” method on the hippocampus data: (a) compactness measure, (b) generality measure, (c) speciﬁcity measure, and (d) total CPU time taken by each method for corresponding all 41 hippocampus shape instances. Note that, for the measures shown in (a), (b) and (c), the smaller the better.
+3σ +2σ +1σ 0 −1σ −2σ −3σ

Figure 5. Qualitative evaluation of MDL, SPHARM and the “SLIDE” method on the hippocampus data. “0” indicates the mean shape.

SLIDE

SPHARM

MDL

n = 305, n = 600 and n = 910 landmarks, respectively. For each of these three templates, the quantitative and qualitative evaluation of the proposed method is shown in Figs. 6 and 7, respectively. Since neither MDL nor SPHARM can correspond open-surface shapes, we do not include SPHARM and MDL comparison results for the open surface diaphragm shape. From the qualitative evaluation result shown in Fig. 7, we can see that the resulting shape deforms reasonably along its principal directions.

5. Conclusion
In this paper, we developed a new method for 3D landmark-based shape correspondence that is important for statistical shape modeling. By an initial estimate of the corresponded landmarks, this method can quickly reﬁne all the landmarks in a parallel fashion by sliding all the landmarks on the shape surface. In this method, we applied 3D thinplate bending energy to model the shape-correspondence error so that the proposed algorithm well reﬂects the nonrigid biological shape deformations between different shape in-

0.04 0.039
Compactness

3 2.8 2.6
Generality

x 10

−3

4 3.5 3 2.5 2

x 10

−3

Specificity

0.038 0.037 0.036 0.035 0 305 Landmarks 600 Landmarks 910Landmarks 5
Included Principal Directions

2.4 2.2 2 1.8 1.6 1.4 0 5 10 15 20

Landmarks 305 600 910

CPU Time 20 mins 52 mins 3.25 hours

10

15

20

Included Principal Directions

1.5 0

5

Included Principal Directions

10

15

20

(a)

(b)

(c)

(d)

Figure 6. Quantitative evaluation of the proposed method on the diaphragm data: (a) compactness measure, (b) generality measure, (c) speciﬁcity measure, and (d) total CPU time for corresponding all 18 diaphragm shape instances with different number of template landmarks.

stances. Unlike many other available shape-correspondence methods, the proposed algorithm can handle both openand closed-surface shapes. Both quantitative and qualitative evaluation on the 3D hippocampus data showed that the proposed method produces a shape correspondence that is of a better or comparable quality to the state-of-the-art MDL and SPHARM methods, but takes much less CPU time. We also applied the proposed method to correspond the opensurface diaphragm instances, with promising results.

Acknowledgements
We would like to thank Martin Styner from University of North Carolina at Chapel Hill for providing the 3D hippocampus data and the MDL and SPHARM packages. We thank Ipek Oguz for the help on using the MDL package. This work was funded, in part, by NSF-EIA-0312861 and AFOSR FA9550-07-1-0250.

References
[1] A. Baumberg and D. Hogg. Learning ﬂexible models from image sequences. In European Conference on Computer Vision, pages 299–308, 1994. [2] F. Bookstein. Principal warps: Thin-plate splines and the decomposition of deformations. IEEE Transactions on Pattern Analysis and Machine Intelligence, 11(6):567–585, June 1989. [3] F. Bookstein. Landmark methods for forms without landmarks: Morphometrics of group differences in outline shape. Medical Image Analysis, 1(3):225–243, 1997. [4] C. Brechbuhler, G. Gerig, and O. Kubler. Parametrization of closed surfaces for 3-D shape description. CVGIP, 61:154– 170, 1995. [5] A. Brett and C. Taylor. A framework for automated landmark generation for automated 3D statistical model construction. In Information Processing in Medical Imaging Conference, pages 376–381, 1999. [6] T. Cootes, A. Hill, C. Taylor, and J. Haslam. The use of active shape models for locating structures in medical images. Image and Vision Computing, 12:355–366, 1994.

[7] T. Cootes, C. Taylor, D. Cooper, and J. Graham. Active shape models - their training and application. Computer Vision and Image Understanding, 61(1):38–59, Jan. 1995. [8] R. Davies, T. Cootes, and C. Taylor. A minimum description length approach to statistical shape modelling. In Information Processing in Medical Imaging Conference, pages 50– 63, 2001. [9] R. Davies, T. Cootes, C. Twining, and C. Taylor. An information theoretic approach to statistical shape modelling. In British Machine Vision Conference, pages 3–11, 2001. [10] R. Davies, C. Twining, T. Cootes, J. Waterton, and C. Taylor. A minimum description length approach to statistical shape modeling. IEEE Transactions on Medical Imaging, 21(5):525–537, May 2002. [11] T. Dey and J. Giesen. Detecting undersampling in surface reconstruction. Proc. 17th ACM Sympos. Comput. Geom., pages 257–263, 2001. [12] J. Duchon. Splines minimizing rotation-invariant seminorms in Sobolev space. In Constructive Theory of Functions of Several Variables, Lecture Notes in Mathematics, 571, pages 85–100, 1977. [13] A. Ericsson and K. Astrom. Minimizing the description length using steepest descent. In British Machine Vision Conference, pages 93–102, 2003. [14] B. Geiger. Three-dimensional modelling of human organs and its application to diagnosis and surgical planning. In Technical Report: INRIA France, 1993. [15] G. Gerig, M. Styner, D. Jones, D. Weinberger, and J. Lieberman. Shape analysis of brain ventricles using spharm. In MMBIA, pages 171–178, 2001. [16] M. Gertz and S. Wright. Object-oriented software for quadratic programming, 2001. [17] T. Heimann, I. Wolf, T. Williams, and H.-P. Meinzer. 3D active shape models using gradient descent optimization of description length. In Information Processing in Medical Imaging Conference, 2005. [18] A. Hill and C. Taylor. A method of non-rigid correspondence for automatic landmark identiﬁcation. In British Machine Vision Conference, pages 323–332, 1996. [19] A. Hill and C. Taylor. A framework for automatic landmark identiﬁcation using a new method of nonrigid corre-

[20] [21]

[22] [23] [24] [25]

[26]

[27] [28]

[29] [30] [31] [32]

[33]

[34]

[35]

spondence. IEEE Transactions on Pattern Analysis and Machine Intelligence, 22(3):241–251, March 2000. M. Jones and T. Poggio. Multidimensional morphable models. In International Conference on Computer Vision, pages 683–688, 1998. M. Jones and T. Poggio. Multidimensional morphable models : A framework for representing and matching object classes. International Journal on Computer Vision, 2(29):107–131, 1998. A. Kelemen, G. Szekely, and G. Gerig. Elastic model-based segmentation of 3-d neuroradiological data sets. IEEE Transactions on Medical Imaging, 18(10):828–839, 1999. A. Kotcheff and C. Taylor. Automatic construction of eigenshape models by genetic algorithm. In Information Processing in Medical Imaging Conference, pages 1–14, 1997. F. D. la Torre. Automatic learning of appearance face models. In Recognition Analysis and Tracking of Faces and Gestures in Realtime Systems, pages 32–39, 2001. M. Leventon, E. Grimson, and O. Faugeras. Statistical shape inﬂuence in geodesic active contours. In IEEE Conference on Computer Vision and Pattern Recognition, pages 316–323, 2000. A. Pitiot, H. Delingette, A. Toga, and P. Thompson. Learning object correspondences with the observed transport shape measures. In Information Processing in Medical Imaging Conference, pages 25–37, 2003. C. Shelton. Morphable surface models. International Journal on Computer Vision, 1(38):75–91, 2000. M. Styner, K. Rajamani, L.-P. Nolte, G. Zsemlye, G. Szekely, C. Taylor, and R. Davies. Evaluation of 3D correspondence methods for model building. In Information Processing in Medical Imaging Conference, 2003. H. Thodberg. Adding curvature to minimum description length shape models. In British Machine Vision Conference, volume 2, pages 251–260, 2003. H. Thodberg. Minimum description length shape and appearance models. In Information Processing in Medical Imaging Conference, pages 51–62, 2003. G. Wahba. Spline Models for Observational Data. Society Industrial and Applied Mathematics, 1990. K. Walker, T. Cootes, and C. Taylor. Automatically building appearance models from image sequences using salient features. In British Machine Vision Conference, pages 463–562, 1999. Y. Wang, B. Peterson, and L. Staib. Shape-based 3D surface correspondence using geodesics and local geometry. In IEEE Conference on Computer Vision and Pattern Recognition, pages (II)644–651, 2000. J. Xie and P. Heng. Shape modeling using automatic landmarking. In International Conference on Medical Image Computing and Computer Assisted Intervention, pages II– 709–716, 2005. X. Zhou, H. Ninomiya, T. Hara, H. Fujita, R. Yokoyama, H. Chen, M. Kanematsu, and H. Hoshi. Automated identiﬁcation of diaphragm in non-contrast torso ct images and its application to computer-aided diagnosis systems. International Journal of Computer Assisted Radiology and Surgery, 1:366–367, 2006.

n = 910

n = 600

n = 305

Figure 7. Qualitative evaluation of the proposed method on the diaphragm data. We rotate all the images by 90 degrees (clockwise) for saving space. The depicted contour is not a product of “SLIDE”, but is used for clarity of presentation.

+3σ +2σ +1σ 0 −1σ −2σ −3σ

